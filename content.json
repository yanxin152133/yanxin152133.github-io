{"meta":{"title":"Yan's blog","subtitle":null,"description":null,"author":"Yan","url":"http://yoursite.com","root":"/"},"pages":[{"title":"categories","date":"2019-05-02T03:51:18.000Z","updated":"2019-05-02T03:52:19.545Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-05-02T03:51:26.000Z","updated":"2019-05-02T03:52:17.154Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"在活动中使用Toast","slug":"在活动中使用Toast","date":"2019-05-02T01:54:37.691Z","updated":"2019-04-17T10:13:01.490Z","comments":true,"path":"2019/05/02/在活动中使用Toast/","link":"","permalink":"http://yoursite.com/2019/05/02/在活动中使用Toast/","excerpt":"在活动中使用ToastToast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息通知给用户，这些消息会在一段时间后自动消失，并且不会占用任何屏幕空间。","text":"在活动中使用ToastToast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息通知给用户，这些消息会在一段时间后自动消失，并且不会占用任何屏幕空间。 创建布局activity_main.xml：123456789101112131415161718192021&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;android.support.constraint.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; tools:context=&quot;.MainActivity&quot;&gt; &lt;LinearLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;Button android:id=&quot;@+id/button&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;Button&quot; /&gt; &lt;/LinearLayout&gt;&lt;/android.support.constraint.ConstraintLayout&gt; 为Button添加事件1234567891011protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button button=findViewById(R.id.button); button.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; Toast.makeText(MainActivity.this,&quot;你点击了Button&quot;,Toast.LENGTH_SHORT).show(); &#125; &#125;); &#125;","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"在活动中使用Toast","slug":"Android/在活动中使用Toast","permalink":"http://yoursite.com/categories/Android/在活动中使用Toast/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"在活动中使用Toast","slug":"在活动中使用Toast","permalink":"http://yoursite.com/tags/在活动中使用Toast/"}]},{"title":"在活动中使用Menu","slug":"在活动中使用Menu","date":"2019-05-02T01:54:37.670Z","updated":"2019-04-17T13:49:13.802Z","comments":true,"path":"2019/05/02/在活动中使用Menu/","link":"","permalink":"http://yoursite.com/2019/05/02/在活动中使用Menu/","excerpt":"在活动中使用Menu首先在res目录中下新建一个menu文件夹，右击res目录–&gt;New–&gt;Directory,输入文件夹名menu，点击OK。接着在这个文件夹下新建一个名叫main的菜单文件，右击menu文件夹–&gt;New–&gt;Menu resource file。文件名为main,点击OK完成创建。然后在main.xml中添加如下代码：","text":"在活动中使用Menu首先在res目录中下新建一个menu文件夹，右击res目录–&gt;New–&gt;Directory,输入文件夹名menu，点击OK。接着在这个文件夹下新建一个名叫main的菜单文件，右击menu文件夹–&gt;New–&gt;Menu resource file。文件名为main,点击OK完成创建。然后在main.xml中添加如下代码：12345678910&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt; &lt;item android:id=&quot;@+id/add_item&quot; android:title=&quot;Add&quot;/&gt; &lt;item android:id=&quot;@+id/remove_item&quot; android:title=&quot;Remove&quot;/&gt;&lt;/menu&gt; 其中创建了两个菜单项，其中&lt; item &gt;标签就是用来创建具体某一个菜单项，然后通过android:id给这个菜单项指定一个唯一的标识符，通过android:title给这个菜单项指定一个名称。 接着在MainActivity中重写onCreateOptionMeu()方法（Windows快捷键为Ctrl+O），然后修改其代码，如下：12345@Override public boolean onCreateOptionsMenu(Menu menu) &#123; getMenuInflater().inflate(R.menu.main, menu); return true; &#125; 然后在MainActivity中重写onOptionsItemSeleted()方法，方法同上，同时修改其代码如下：12345678910111213@Override public boolean onOptionsItemSelected(MenuItem item) &#123; switch (item.getItemId()) &#123; case R.id.add_item: Toast.makeText(this, &quot;You clicked add&quot;, Toast.LENGTH_SHORT).show(); break; case R.id.remove_item: Toast.makeText(this, &quot;You clicked remove&quot;, Toast.LENGTH_SHORT).show(); break; default: &#125; return true; &#125; 最后运行程序。","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"在活动中使用Menu","slug":"Android/在活动中使用Menu","permalink":"http://yoursite.com/categories/Android/在活动中使用Menu/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"在活动中使用Menu","slug":"在活动中使用Menu","permalink":"http://yoursite.com/tags/在活动中使用Menu/"}]},{"title":"快速搭建一个SSM项目","slug":"快速搭建一个SSM项目","date":"2019-05-02T01:54:37.640Z","updated":"2019-03-26T12:53:41.029Z","comments":true,"path":"2019/05/02/快速搭建一个SSM项目/","link":"","permalink":"http://yoursite.com/2019/05/02/快速搭建一个SSM项目/","excerpt":"快速搭建一个SSM项目创建项目 在Intelli IDEA的菜单栏中选择【File】→【New】→【project】在弹出的窗口中选择【Maven】,之后操作如下图：","text":"快速搭建一个SSM项目创建项目 在Intelli IDEA的菜单栏中选择【File】→【New】→【project】在弹出的窗口中选择【Maven】,之后操作如下图： 填写下图中的【groupId】和【ArtifactId】。 接着指定archetypeCatalog为internal,即可使用maven默认的archetyppe-catalog.xml，而不用从remote下载。 然后填写项目名称和路径。 接着在/src/main目录下创建java和test目录，并标记为Sources文件，再创建resources目录，并标记为Resources文件。方法如下图所示： 整个目录结构如下图： tomcat配置： 配置文件基本相同，可参考如下链接： Intelli IDEA整合SSM 参考使用Idea创建一个JavaWeb的SSM(maven)项目~（史上最详细,傻瓜式教学，跟着我的做，不会你找我）解决Idea创建JavaWeb项目生成的web.xml没有头文件的问题(超级详细)","categories":[{"name":"SSM","slug":"SSM","permalink":"http://yoursite.com/categories/SSM/"},{"name":"快速搭建一个SSM项目","slug":"SSM/快速搭建一个SSM项目","permalink":"http://yoursite.com/categories/SSM/快速搭建一个SSM项目/"}],"tags":[{"name":"快速搭建一个SSM项目","slug":"快速搭建一个SSM项目","permalink":"http://yoursite.com/tags/快速搭建一个SSM项目/"}]},{"title":"活动的生命周期","slug":"活动的生命周期","date":"2019-05-02T01:54:37.625Z","updated":"2019-04-18T04:02:37.139Z","comments":true,"path":"2019/05/02/活动的生命周期/","link":"","permalink":"http://yoursite.com/2019/05/02/活动的生命周期/","excerpt":"活动的生命周期返回栈Android中的活动是可以层叠的。每启动一个新的活动，就会覆盖在原活动上，然后点击Back键会销毁最上面的活动，下面的一个活动就会重新显示出来。","text":"活动的生命周期返回栈Android中的活动是可以层叠的。每启动一个新的活动，就会覆盖在原活动上，然后点击Back键会销毁最上面的活动，下面的一个活动就会重新显示出来。 Android是使用任务（Task）来管理活动的，一个任务就是一组存放在栈里的活动的集合，这个栈也被称作返回栈（Back Stack）。栈是一种后进先出的数据结构，在默认情况下，每当启动一个新的活动，它会在返回栈中入栈，并处于栈顶的位置。而每当我们按下Back键或调用finfish()方法去销毁一个活动时，处于栈顶的活动会出栈，这时前一个入栈的活动就会重新处于栈顶的位置。系统总是会显示处于栈顶的活动给用户。 活动状态每个活动在其生命周期最多可能会有4种状态。 运行状态当一个活动位于返回栈的栈顶时，这时互动就处于运行状态。系统最不愿意回收的就是处于运行状态的活动，这会给用户带来非常差的使用体验。 暂停状态当一个活动不再处于栈顶位置，但仍然可见时，这时活动就进入了暂停状态。 停止状态当一个活动不在处于栈顶位置，并且完全不可见的时候，就进入了停止状态。系统仍然会为这种活动保存相应的状态和成员变量，但是这并不是完全可靠的，当其他地方需要内存时，处于停止状态的活动有可能会被系统回收。 销毁状态当一个活动从返回栈中移除后就变成了销毁状态。系统会最倾向于回收处于这种状态的活动，从而保证手机的内存充足。 活动的生存周期Activity类中定义了7个回调方法，覆盖了活动生命周期的每一个环节。 onCreate() 这个方法会在活动第一次被创建的时候调用。 onStart() 这个方法在活动由不可见变为可见的时候调用。 onResume() 这个方法在活动准备好和用户进行交互的时候调用。此时活动一定位于返回栈的栈顶，并且处于运行状态。 onPause() 这个方法在系统准备去启动或者恢复另一个活动的时候调用。 onStop() 这个方法在活动完全不可见的时候调用。它和onPause()方法的主要区别在于，如果启动的新活动是一个对话框式的活动，那么onPause()方法会得到执行，而onStop()方法并不会执行。 onDestroy() 这个方法在活动被销毁之前调用，之后的活动的状态将变为销毁状态。 onRestart() 这个方法在活动由停止状态变为运行状态之前调用，也就是活动被重新启动了。 以上七个方法中除了onRestart()方法，其他都是两两相对的，从而又可以将活动分为3种生存期。 完整生存期 onCreate() onDestroy() 可见生存期 onStart() onStop() 前台生存期 onResume() onStop() 体验活动的生命周期源代码：https://github.com/yanxin152133/Android/tree/master/Activitylive","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"活动的生命周期","slug":"Android/活动的生命周期","permalink":"http://yoursite.com/categories/Android/活动的生命周期/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"活动的生命周期","slug":"活动的生命周期","permalink":"http://yoursite.com/tags/活动的生命周期/"}]},{"title":"分析项目结构（以HelloWorld项目为例）","slug":"分析项目结构","date":"2019-05-02T01:54:37.610Z","updated":"2019-04-12T02:56:53.402Z","comments":true,"path":"2019/05/02/分析项目结构/","link":"","permalink":"http://yoursite.com/2019/05/02/分析项目结构/","excerpt":"分析你的第一个Android程序以HelloWorld项目为例，其项目结构如下图：(首先先将项目结构模式切换成Project，这才是项目真实的目录结构)","text":"分析你的第一个Android程序以HelloWorld项目为例，其项目结构如下图：(首先先将项目结构模式切换成Project，这才是项目真实的目录结构) 项目结构 项目结构1..gradle和.idea这两个目录下是Android Studio自动生成的文件，不需要手动编辑，也无需关心。 2.app项目中的代码、资源等内容几乎都放置在这个目录下。 3.gradle这个目录包含了gradle wrapper 的配置文件，使用gradle wrapper 的方式不需要提前将gradle 下载好，而是自动根据本地的缓存情况决定是否需要联网下载gradle 。Android Studio默认没有启用gradle wrapper 的方式，如需打开，可以点击File–&gt;Settings–&gt;Bulid,Execution,Deployment–&gt;Gradle,进行配置更改。 4..gitignore这个文件是用来将指定的目录或文件排除在版本控制之外的。 5.build.gradle这个是项目全局的gradle构建脚本，通常这个文件中的内容是不需要修改的。 6.gradle.properties这个是全局的gradle配置文件，在这里配置的属性将会影响到项目中所有的gradle编译脚本。 7.gradlew和gradlew.bat这两个文件是用来在命令行界面中执行gradle命令的，其中gradlew是在Linux或Mac系统中使用的，gradlew.bat是在Windows系统中使用的。 8.HelloWorld.imiiml文件是所有IntelliJ IDEA项目都会生成的一个文件，用于标识这是一个IntelliJ IDEA项目，不需要修改该文件。 9.local.properties这个文件用于指定本机中的Android SDK路径，通常是自动生成的，不需要修改。若Android SDK发生变化则进行修改。 10.settings.gradle这个文件用于指定项目中所有引入的模块。通常情况下模块的引入是自动完成的。 app目录该目录是工作中的重点，其结构如下： 1.bulid同上，主要是包含了一些在编译时自动生成的文件。 2.libs如果项目中用到了第三方的jar包，需要将这些jar包都放在这个目录下，然后才会自动添加到构建路径中。 3.androidTest编写Android Test测试用例，对项目进行一些自动化测试。 4.java放置所有的Java代码。 5.res项目中用到的所有图片、布局、字符串等资源都要存放到该目录下。图片放在drawable目录下，布局放在layout目录下，字符串放在values目录下。 6.AndroidManifest.xml这个是整个Android项目的配置文件，在程序中定义的所有四大组件都需要在这个文件里注册，，另外还可以在这个文件中给应用程序添加权限声明。 7.test用来编写Unit Test测试用例,是对项目进行自动化测试的另一种方式。 8..gitignore这个文件用于将app模块内的指定的目录或文件排除在版本控制之外，作用和上面的类似。 9.app.iml自动生成的文件。 10.build.gradle这是app模块的gradle构建脚本，这个文件中会指定很多项目构建相关的配置。 11.proguard-rules .pro这个文件用于指定项目代码的混淆规则。","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"分析项目结构","slug":"Android/分析项目结构","permalink":"http://yoursite.com/categories/Android/分析项目结构/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"分析项目结构","slug":"分析项目结构","permalink":"http://yoursite.com/tags/分析项目结构/"}]},{"title":"创建自定义控件","slug":"创建自定义控件","date":"2019-05-02T01:54:37.597Z","updated":"2019-04-19T09:57:47.019Z","comments":true,"path":"2019/05/02/创建自定义控件/","link":"","permalink":"http://yoursite.com/2019/05/02/创建自定义控件/","excerpt":"创建自定义控件创建一个标题栏。","text":"创建自定义控件创建一个标题栏。 新建一个title.xml布局title.xml 12345678910111213141516171819202122232425262728293031323334&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot;&gt; &lt;Button android:id=&quot;@+id/title_back&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_gravity=&quot;center&quot; android:layout_margin=&quot;5dp&quot; android:text=&quot;back&quot; android:textColor=&quot;#000&quot; /&gt; &lt;TextView android:id=&quot;@+id/title_text&quot; android:layout_width=&quot;0dp&quot; android:layout_height=&quot;wrap_content&quot; android:layout_weight=&quot;1&quot; android:gravity=&quot;center&quot; android:text=&quot;Title Text&quot; android:textColor=&quot;#000&quot; android:textSize=&quot;24sp&quot; /&gt; &lt;Button android:id=&quot;@+id/title_edit&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_gravity=&quot;center&quot; android:layout_margin=&quot;5dp&quot; android:text=&quot;Edit&quot; android:textColor=&quot;#000&quot; /&gt;&lt;/LinearLayout&gt; activity_main.xml 1234567891011&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;android.support.constraint.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot; xmlns:tools=&quot;http://schemas.android.com/tools&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot; tools:context=&quot;.MainActivity&quot;&gt; &lt;include layout=&quot;@layout/title&quot; /&gt;&lt;/android.support.constraint.ConstraintLayout&gt; 隐藏系统自带的标题栏MainActivity 123456789101112public class MainActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); ActionBar actionBar = getSupportActionBar(); if (actionBar != null) &#123; actionBar.hide(); &#125; &#125;&#125;","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"创建自定义控件","slug":"Android/创建自定义控件","permalink":"http://yoursite.com/categories/Android/创建自定义控件/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"创建自定义控件","slug":"创建自定义控件","permalink":"http://yoursite.com/tags/创建自定义控件/"}]},{"title":"个人觉得比较好的一些插件","slug":"插件","date":"2019-05-02T01:54:37.574Z","updated":"2019-04-13T14:10:34.601Z","comments":true,"path":"2019/05/02/插件/","link":"","permalink":"http://yoursite.com/2019/05/02/插件/","excerpt":"Visual Studio CodeChinese (Simplified) Language Pack for Visual Studio Code适用于 VS Code 的中文（简体）语言包。","text":"Visual Studio CodeChinese (Simplified) Language Pack for Visual Studio Code适用于 VS Code 的中文（简体）语言包。 Markdown Preview EnhancedMarkdown Preview Enhanced 是一款为 Atom 以及 Visual Studio Code 编辑器编写的超级强大的 Markdown 插件。 这款插件意在让你拥有飘逸的 Markdown 写作体验。 City Lights Icon package一个美化 Visual Studio Code 图标的插件。 浏览器插件广告净化器免费高效的广告过滤工具：可以过滤烦人的视频广告、弹窗广告、大横幅广告等网页广告，让你清爽浏览网页。 下载地址：谷歌浏览器 火狐浏览器 Convertio一个文件转换器。网址：https://convertio.co/zh/","categories":[{"name":"插件","slug":"插件","permalink":"http://yoursite.com/categories/插件/"}],"tags":[{"name":"插件","slug":"插件","permalink":"http://yoursite.com/tags/插件/"}]},{"title":"Ubuntu配置ssh","slug":"Ubuntu配置ssh","date":"2019-05-02T01:54:37.551Z","updated":"2019-01-29T14:36:20.000Z","comments":true,"path":"2019/05/02/Ubuntu配置ssh/","link":"","permalink":"http://yoursite.com/2019/05/02/Ubuntu配置ssh/","excerpt":"安装 ssh-server1sudo apt install openssh-server -y","text":"安装 ssh-server1sudo apt install openssh-server -y 安装 ssh-client1sudo apt install openssh-client -y 确认安装 ssh 是否成功1ps -e|grep sshd 生成密钥对并配置免密登录12345ssh-keygen -t rsacd .sshcat id_rsa.pub &gt;&gt; authorized_keyschmod 600 authorized_keys #修改公钥只有属主有读写权限chmod 700 ~/.ssh #修改.ssh目录为只有属主有读、写、执行权限 关闭密码登录12cd /etc/sshvim sshd_config 将PasswordAuthentication改为no，ChallengeResponseAuthentication改为no","categories":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://yoursite.com/categories/Ubuntu/"},{"name":"ssh","slug":"Ubuntu/ssh","permalink":"http://yoursite.com/categories/Ubuntu/ssh/"}],"tags":[{"name":"Ubuntu","slug":"Ubuntu","permalink":"http://yoursite.com/tags/Ubuntu/"},{"name":"ssh","slug":"ssh","permalink":"http://yoursite.com/tags/ssh/"}]},{"title":"Ubuntu18.04 安装 Docker","slug":"Ubuntu18.04 安装 Docker","date":"2019-05-02T01:54:37.545Z","updated":"2018-12-17T14:02:04.000Z","comments":true,"path":"2019/05/02/Ubuntu18.04 安装 Docker/","link":"","permalink":"http://yoursite.com/2019/05/02/Ubuntu18.04 安装 Docker/","excerpt":"准备工作系统要求Docker CE 支持一下版本的 Ubuntu 操作系统： Artful 17.10(Docker CE 17.11 Edge) Zesty 17.04 Xenial 16.04(LTS) Trusty 14.04(LTS) 推荐使用 LTS 版本的，在Ubuntu发行版中，LTS是长期支持版本，会更稳定。","text":"准备工作系统要求Docker CE 支持一下版本的 Ubuntu 操作系统： Artful 17.10(Docker CE 17.11 Edge) Zesty 17.04 Xenial 16.04(LTS) Trusty 14.04(LTS) 推荐使用 LTS 版本的，在Ubuntu发行版中，LTS是长期支持版本，会更稳定。 卸载旧版本旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本： 123sudo apt-get remove docker \\ docker-engine \\ docker.io 安装与验证从 Ubuntu 14.04 开始，一部分内核模块移到了可选内核模块包 (linux-image-extra-*) ，以减少内核软件包的体积。正常安装的系统应该会包含可选内核模块包，而一些裁剪后的系统可能会将其精简掉。AUFS 内核驱动属于可选内核模块的一部分，作为推荐的 Docker 存储层驱动，一般建议安装可选内核模块包以使用 AUFS。 如果系统没有安装可选内核模块的话，可以执行下面的命令来安装可选内核模块包：(操作均为普通用户下) 123456sudo apt-get updatesudo apt-get install \\ linux-image-extra-$(uname -r) \\ linux-image-extra-virtual Ubuntu 16.04 + 上的 Docker CE 默认使用 overlay2 存储层驱动,无需手动配置。 使用APT安装由于 apt 源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书。 1234567sudo apt-get updatesudo apt-get install \\ apt-transport-https \\ ca-certificates \\ curl \\ software-properties-common 鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。 123456(任选其一即可)curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -官方源curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - 然后，我们需要向 source.list 中添加 Docker 软件源 1234567891011sudo add-apt-repository \\ &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\ $(lsb_release -cs) \\ stable&quot;# 官方源# $ sudo add-apt-repository \\# &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \\# $(lsb_release -cs) \\# stable&quot; 安装 Docker CE12sudo apt updatesudo apt install docker-ce 建立 docker 用户组建立docker组: 1sudo groupadd docker 将当前用户加入docker组： 1sudo usermod -aG docker $USER 更换国内Docker仓库创建文件： 1sudo vim /etc/docker/daemon.json 加入以下内容： 12345&#123; &quot;registry-mirrors&quot;: [ &quot;https://registry.docker-cn.com&quot; ]&#125; 然后重启系统。 验证输入以下命令： 1docker run hello-world 若输出以下内容则为成功。 1234567891011121314151617181920212223242526Unable to find image &apos;hello-world:latest&apos; locallylatest: Pulling from library/hello-worldca4f61b1923c: Pull completeDigest: sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905cStatus: Downloaded newer image for hello-world:latestHello from Docker!This message shows that your installation appears to be working correctly.To generate this message, Docker took the following steps: 1. The Docker client contacted the Docker daemon. 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub. (amd64) 3. The Docker daemon created a new container from that image which runs the executable that produces the output you are currently reading. 4. The Docker daemon streamed that output to the Docker client, which sent it to your terminal.To try something more ambitious, you can run an Ubuntu container with: $ docker run -it ubuntu bashShare images, automate workflows, and more with a free Docker ID: https://cloud.docker.com/For more examples and ideas, visit: https://docs.docker.com/engine/userguide/ 参考Ubuntu 下安装 DockerDocker —— 从入门到实践","categories":[{"name":"Docker","slug":"Docker","permalink":"http://yoursite.com/categories/Docker/"},{"name":"安装","slug":"Docker/安装","permalink":"http://yoursite.com/categories/Docker/安装/"}],"tags":[{"name":"Docker安装","slug":"Docker安装","permalink":"http://yoursite.com/tags/Docker安装/"}]},{"title":"Spring MVC和MyBatis开发环境准备","slug":"Spring MVC和MyBatis开发环境准备","date":"2019-05-02T01:54:37.539Z","updated":"2019-03-24T05:02:11.779Z","comments":true,"path":"2019/05/02/Spring MVC和MyBatis开发环境准备/","link":"","permalink":"http://yoursite.com/2019/05/02/Spring MVC和MyBatis开发环境准备/","excerpt":"Spring MVC和MyBatis开发环境准备准备 jdk Intellij IDEA Tomcat Maven MySql","text":"Spring MVC和MyBatis开发环境准备准备 jdk Intellij IDEA Tomcat Maven MySql JDK 安装下载JDK建议使用1.8及以上的版本。官方下载路径：jdk下载路地址 安装双击下载软件，一路单击下一步即可。 配置环境变量Windows：右击【我的电脑】→【属性】→【高级系统设置】→【环境变量】→【系统变量】→【新建】，接着如下图所示： 在【系统变量】的path中添加 %JAVA_HOME%\\bin。 验证，如下图所示： Intellij IDEA下载路径：indea U 激活（针对学生的免费使用计划）参考：Intellij IDEA的下载和使用（针对学生的免费使用计划） Tomcat的安装与配置下载下载链接：Tomcat 8.0其他版本可以查看该页面：下载页面 下载完成后对文件进行解压，解压路径自行设置。 Intellij IDEA 配置 Tomcat步骤如下图： Maven 的安装和配置下载地址：Maven 配置 在Maven的安装目录新建文件夹repository,用来作为本地仓库。 如下图： MySql参考：MySQL 安装| 菜鸟教程","categories":[{"name":"SSM","slug":"SSM","permalink":"http://yoursite.com/categories/SSM/"},{"name":"开发环境准备","slug":"SSM/开发环境准备","permalink":"http://yoursite.com/categories/SSM/开发环境准备/"}],"tags":[{"name":"Spring MVC和MyBatis开发环境准备","slug":"Spring-MVC和MyBatis开发环境准备","permalink":"http://yoursite.com/tags/Spring-MVC和MyBatis开发环境准备/"}]},{"title":"RecyclerView","slug":"RecyclerView","date":"2019-05-02T01:54:37.531Z","updated":"2019-04-27T05:53:20.930Z","comments":true,"path":"2019/05/02/RecyclerView/","link":"","permalink":"http://yoursite.com/2019/05/02/RecyclerView/","excerpt":"RecyclerViewRecyclerView可以说是一个增强版的ListView，不仅可以轻松实现和ListView同样的效果，还优化了ListView中存在的各种不足之处。","text":"RecyclerViewRecyclerView可以说是一个增强版的ListView，不仅可以轻松实现和ListView同样的效果，还优化了ListView中存在的各种不足之处。 添加相应的依赖库123456789dependencies &#123; implementation fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;]) implementation &apos;com.android.support:appcompat-v7:28.0.0&apos; implementation &apos;com.android.support.constraint:constraint-layout:1.1.3&apos; testImplementation &apos;junit:junit:4.12&apos; androidTestImplementation &apos;com.android.support.test:runner:1.0.2&apos; androidTestImplementation &apos;com.android.support.test.espresso:espresso-core:3.0.2&apos; implementation &apos;com.android.support:recyclerview-v7:28.0.0&apos; #添加这一行&#125; 添加之后记得点击一下Sync Now来进行同步。 android gradle依赖：implementation 和compile的区别 布局activity_main.xml 123456789&lt;LinearLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;android.support.v7.widget.RecyclerView android:id=&quot;@+id/recycler_view&quot; android:layout_height=&quot;match_parent&quot; android:layout_width=&quot;match_parent&quot; /&gt; &lt;/LinearLayout&gt; 由于RecyclerView并不是内置在系统SDK当中，所以 需要把完整的包路径写出来。 fruit_item.xml123456789101112131415161718192021&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:layout_margin=&quot;5dp&quot; &gt; &lt;ImageView android:id=&quot;@+id/fruit_image&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_gravity=&quot;center_horizontal&quot; /&gt; &lt;TextView android:id=&quot;@+id/fruit_name&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_gravity=&quot;left&quot; android:layout_marginTop=&quot;10dp&quot; /&gt;&lt;/LinearLayout&gt; FruitAdapter类为RecyclerView准备一个适配器，新建FruitAdapter类，让这个适配器继承自RecyclerView.Adapter，并将泛型指定为FruitAdapter.ViewHolder。其中，ViewHolder是我们在FruitAdapter中定义的一个内部类。代码如下： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657public class FruitAdapter extends RecyclerView.Adapter&lt;FruitAdapter.ViewHolder&gt;&#123; private List&lt;Fruit&gt; mFruitList; static class ViewHolder extends RecyclerView.ViewHolder &#123; View fruitView; ImageView fruitImage; TextView fruitName; public ViewHolder(View view) &#123; super(view); fruitView = view; fruitImage = (ImageView) view.findViewById(R.id.fruit_image); fruitName = (TextView) view.findViewById(R.id.fruit_name); &#125; &#125; public FruitAdapter(List&lt;Fruit&gt; fruitList) &#123; mFruitList = fruitList; &#125; @Override public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123; View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.fruit_item, parent, false); final ViewHolder holder = new ViewHolder(view); holder.fruitView.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; int position = holder.getAdapterPosition(); Fruit fruit = mFruitList.get(position); Toast.makeText(v.getContext(), &quot;you clicked view &quot; + fruit.getName(), Toast.LENGTH_SHORT).show(); &#125; &#125;); holder.fruitImage.setOnClickListener(new View.OnClickListener() &#123; @Override public void onClick(View v) &#123; int position = holder.getAdapterPosition(); Fruit fruit = mFruitList.get(position); Toast.makeText(v.getContext(), &quot;you clicked image &quot; + fruit.getName(), Toast.LENGTH_SHORT).show(); &#125; &#125;); return holder; &#125; @Override public void onBindViewHolder(ViewHolder holder, int position) &#123; Fruit fruit = mFruitList.get(position); holder.fruitImage.setImageResource(fruit.getImageId()); holder.fruitName.setText(fruit.getName()); &#125; @Override public int getItemCount() &#123; return mFruitList.size(); &#125;&#125; Fruit类1234567891011121314151617181920public class Fruit &#123; private String name; private int imageId; public Fruit(String name, int imageId) &#123; this.name = name; this.imageId = imageId; &#125; public String getName() &#123; return name; &#125; public int getImageId() &#123; return imageId; &#125;&#125; MainACtivity.java修改MainACtivity中的代码： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253public class MainActivity extends AppCompatActivity &#123; private List&lt;Fruit&gt; fruitList = new ArrayList&lt;Fruit&gt;(); @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); initFruits(); RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view); StaggeredGridLayoutManager layoutManager = new StaggeredGridLayoutManager(3, StaggeredGridLayoutManager.VERTICAL); recyclerView.setLayoutManager(layoutManager); FruitAdapter adapter = new FruitAdapter(fruitList); recyclerView.setAdapter(adapter); &#125; private void initFruits() &#123; for (int i = 0; i &lt; 2; i++) &#123; Fruit apple = new Fruit(getRandomLengthName(&quot;Apple&quot;), R.drawable.apple_pic); fruitList.add(apple); Fruit banana = new Fruit(getRandomLengthName(&quot;Banana&quot;), R.drawable.banana_pic); fruitList.add(banana); Fruit orange = new Fruit(getRandomLengthName(&quot;Orange&quot;), R.drawable.orange_pic); fruitList.add(orange); Fruit watermelon = new Fruit(getRandomLengthName(&quot;Watermelon&quot;), R.drawable.watermelon_pic); fruitList.add(watermelon); Fruit pear = new Fruit(getRandomLengthName(&quot;Pear&quot;), R.drawable.pear_pic); fruitList.add(pear); Fruit grape = new Fruit(getRandomLengthName(&quot;Grape&quot;), R.drawable.grape_pic); fruitList.add(grape); Fruit pineapple = new Fruit(getRandomLengthName(&quot;Pineapple&quot;), R.drawable.pineapple_pic); fruitList.add(pineapple); Fruit strawberry = new Fruit(getRandomLengthName(&quot;Strawberry&quot;), R.drawable.strawberry_pic); fruitList.add(strawberry); Fruit cherry = new Fruit(getRandomLengthName(&quot;Cherry&quot;), R.drawable.cherry_pic); fruitList.add(cherry); Fruit mango = new Fruit(getRandomLengthName(&quot;Mango&quot;), R.drawable.mango_pic); fruitList.add(mango); &#125; &#125; private String getRandomLengthName(String name) &#123; Random random = new Random(); int length = random.nextInt(20) + 1; StringBuilder builder = new StringBuilder(); for (int i = 0; i &lt; length; i++) &#123; builder.append(name); &#125; return builder.toString(); &#125;&#125; 实现横向滚动修改fruit_item.xml 123456789101112131415161718192021&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot; android:orientation=&quot;vertical&quot; android:layout_width=&quot;100dp&quot; android:layout_height=&quot;wrap_content&quot; android:layout_margin=&quot;5dp&quot; &gt; &lt;ImageView android:id=&quot;@+id/fruit_image&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_gravity=&quot;center_horizontal&quot; /&gt; &lt;TextView android:id=&quot;@+id/fruit_name&quot; android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:layout_gravity=&quot;center_horizontal&quot; android:layout_marginTop=&quot;10dp&quot; /&gt;&lt;/LinearLayout&gt; 修改Mainactivity 12345678910111213@Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); initFruits(); RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view); StaggeredGridLayoutManager layoutManager = new StaggeredGridLayoutManager(3, StaggeredGridLayoutManager.VERTICAL); layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL); recyclerView.setLayoutManager(layoutManager); FruitAdapter adapter = new FruitAdapter(fruitList); recyclerView.setAdapter(adapter); &#125;","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"RecyclerView","slug":"Android/RecyclerView","permalink":"http://yoursite.com/categories/Android/RecyclerView/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"RecyclerView","slug":"RecyclerView","permalink":"http://yoursite.com/tags/RecyclerView/"}]},{"title":"qtp破解","slug":"qtp","date":"2019-05-02T01:54:37.515Z","updated":"2019-04-20T14:22:35.124Z","comments":true,"path":"2019/05/02/qtp/","link":"","permalink":"http://yoursite.com/2019/05/02/qtp/","excerpt":"qtp安装与破解准备： QTP 10.0 破解文件","text":"qtp安装与破解准备： QTP 10.0 破解文件 下载 链接: https://pan.baidu.com/s/19TGLWjd_znKFM8RZkj1ITg 提取码: 9wjv 安装 qtp 选择 QTP10.iso,解压后点击文件目录中的 setup.exe,双击运行。按照图片顺序进行操作。 破解1.在c:\\program files\\common files\\mercury interactive目录下新建一个文件夹：License Manager注：64位操作系统在c:\\program files(x86)\\common files\\mercury interactive以下步骤以此类推。 2.将下载的文件中的qtp破解解压，将mgn-mqt8.2.exe复制到qtp的安装路径的bin文件夹中，然后以管理员身份运行。 3.打开c:\\program files\\common files\\mercury interactive\\License Manager中的lservrc文件。 4.将lservrc文件中的内容（将”QuickTestPro”之前的所有字符复制进去，不包括”QuickTestPro”字符）粘贴到如下图中。","categories":[{"name":"软件测试","slug":"软件测试","permalink":"http://yoursite.com/categories/软件测试/"},{"name":"qtp","slug":"软件测试/qtp","permalink":"http://yoursite.com/categories/软件测试/qtp/"}],"tags":[{"name":"软件测试","slug":"软件测试","permalink":"http://yoursite.com/tags/软件测试/"},{"name":"qtp","slug":"qtp","permalink":"http://yoursite.com/tags/qtp/"}]},{"title":"ProgressBar","slug":"ProgressBar","date":"2019-05-02T01:54:37.500Z","updated":"2019-04-19T07:43:59.118Z","comments":true,"path":"2019/05/02/ProgressBar/","link":"","permalink":"http://yoursite.com/2019/05/02/ProgressBar/","excerpt":"ProgressBarProgressBar用于在界面上显示一个进度条，表示程序正在加载一些数据。","text":"ProgressBarProgressBar用于在界面上显示一个进度条，表示程序正在加载一些数据。 布局activity_main.xml12345678910111213141516&lt;LinearLayout android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;Button android:id=&quot;@+id/button&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;button&quot;/&gt; &lt;ProgressBar android:id=&quot;@+id/progress_bar&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; /&gt; &lt;/LinearLayout&gt; 实现点击一下按钮让进度条消失，再点击一下按钮让进度条出现的效果MainActivity 123456789101112131415161718192021222324252627public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123; private Button button; private ProgressBar progressBar; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); button = findViewById(R.id.button); progressBar = findViewById(R.id.progress_bar); button.setOnClickListener(this); &#125; @Override public void onClick(View v) &#123; switch (v.getId()) &#123; case R.id.button: if (progressBar.getVisibility() == View.GONE) &#123; progressBar.setVisibility(View.VISIBLE); &#125; else &#123; progressBar.setVisibility(View.GONE); &#125; default: break; &#125; &#125;&#125; 给ProgressBar指定不同的样式activity_main.xml 1234567891011121314151617&lt;LinearLayout android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;Button android:id=&quot;@+id/button&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;button&quot;/&gt; &lt;ProgressBar android:id=&quot;@+id/progress_bar&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; style=&quot;?android:attr/progressBarStyleHorizontal&quot; android:max=&quot;100&quot;/&gt; &lt;/LinearLayout&gt; MainActivity 1234567891011121314151617181920212223242526public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123; private Button button; private ProgressBar progressBar; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); button = findViewById(R.id.button); progressBar = findViewById(R.id.progress_bar); button.setOnClickListener(this); &#125; @Override public void onClick(View v) &#123; switch (v.getId()) &#123; case R.id.button: int progress=progressBar.getProgress(); progress=progress+10; progressBar.setProgress(progress); break; default: break; &#125; &#125;&#125;","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"ProgressBar","slug":"Android/ProgressBar","permalink":"http://yoursite.com/categories/Android/ProgressBar/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"ProgressBar","slug":"ProgressBar","permalink":"http://yoursite.com/tags/ProgressBar/"}]},{"title":"ProgressDialog","slug":"ProgresDialog","date":"2019-05-02T01:54:37.483Z","updated":"2019-04-19T09:00:33.935Z","comments":true,"path":"2019/05/02/ProgresDialog/","link":"","permalink":"http://yoursite.com/2019/05/02/ProgresDialog/","excerpt":"ProgressDialogProgressDialog和AlertDialog有点类似，不同的是ProgressDialog会在对话框中显示一个进度条，一般用于表示当前操作比较耗时，让用户耐心等待。","text":"ProgressDialogProgressDialog和AlertDialog有点类似，不同的是ProgressDialog会在对话框中显示一个进度条，一般用于表示当前操作比较耗时，让用户耐心等待。 添加一个Button按钮activity_main.xml 123456789101112&lt;LinearLayout android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;Button android:id=&quot;@+id/button&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;button&quot;/&gt; &lt;/LinearLayout&gt; 为Button添加事件MainActivity 12345678910111213141516171819202122232425public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button button=findViewById(R.id.button); button.setOnClickListener(this); &#125; @Override public void onClick(View v) &#123; switch (v.getId())&#123; case R.id.button: ProgressDialog progressDialog=new ProgressDialog(MainActivity.this); progressDialog.setTitle(&quot;This is a ProgressDialog&quot;); //设置标题 progressDialog.setMessage(&quot;Loading...&quot;); //设置内容 progressDialog.setCancelable(true); //设置可否取消 progressDialog.show(); //显示 break; default: break; &#125; &#125;&#125;","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"ProgressDialog","slug":"Android/ProgressDialog","permalink":"http://yoursite.com/categories/Android/ProgressDialog/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"ProgressDialog","slug":"ProgressDialog","permalink":"http://yoursite.com/tags/ProgressDialog/"}]},{"title":"ListView","slug":"ListView","date":"2019-05-02T01:54:37.466Z","updated":"2019-04-21T12:35:37.867Z","comments":true,"path":"2019/05/02/ListView/","link":"","permalink":"http://yoursite.com/2019/05/02/ListView/","excerpt":"ListView由于手机屏幕空间比较有限，能够一次性在屏幕上显示的内容并不多，当我们的程序中有大量的数据需要显示的时候，就可以借助ListView来实现。ListView允许用户通过手指上下滑动的方式将屏幕外的数据滚动到屏幕内，同时屏幕上原有的数据则会滚动出屏幕。","text":"ListView由于手机屏幕空间比较有限，能够一次性在屏幕上显示的内容并不多，当我们的程序中有大量的数据需要显示的时候，就可以借助ListView来实现。ListView允许用户通过手指上下滑动的方式将屏幕外的数据滚动到屏幕内，同时屏幕上原有的数据则会滚动出屏幕。 创建布局修改activity_main.xml 123456789101112&lt;LinearLayout android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;ListView android:id=&quot;@+id/list_view&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;/ListView&gt; &lt;/LinearLayout&gt; 修改MainActivity代码1234567891011121314151617181920public class MainActivity extends AppCompatActivity &#123; private String[] data=&#123; &quot;Apple&quot;,&quot;Banana&quot;,&quot;Orange&quot;,&quot;Watermelon&quot;,&quot;Pear&quot;, &quot;Grape&quot;,&quot;Pineapple&quot;,&quot;Strawberry&quot;,&quot;Cherry&quot;,&quot;Mango&quot;, &quot;Apple&quot;,&quot;Banana&quot;,&quot;Orange&quot;,&quot;Watermelon&quot;,&quot;Pear&quot;, &quot;Grape&quot;,&quot;Pineapple&quot;,&quot;Strawberry&quot;,&quot;Cherry&quot;,&quot;Mango&quot; &#125;; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); ArrayAdapter&lt;String&gt; adapter=new ArrayAdapter&lt;String&gt;( MainActivity.this,android.R.layout.simple_list_item_1,data ); ListView listView=findViewById(R.id.list_view); listView.setAdapter(adapter); &#125;&#125; ListView用于展示大量数据，这些数据可以是从网上下载的，也可以是从数据库中读取的。这里使用一个data数组来测试。运行结果如图：","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"ListView","slug":"Android/ListView","permalink":"http://yoursite.com/categories/Android/ListView/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"ListView","slug":"ListView","permalink":"http://yoursite.com/tags/ListView/"}]},{"title":"Linux-zipinfo","slug":"Linux-zipinfo","date":"2019-05-02T01:54:37.444Z","updated":"2019-03-02T06:17:34.000Z","comments":true,"path":"2019/05/02/Linux-zipinfo/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-zipinfo/","excerpt":"zipinfo 命令zipinfo 命令用于列出压缩文件信息。","text":"zipinfo 命令zipinfo 命令用于列出压缩文件信息。执行zipinfo指令可得知zip压缩文件的详细信息。 语法1zipinfo [-12hlmMstTvz][压缩文件][文件...][-x &lt;范本样式&gt;] 参数 -1 只列出文件名称。 -2 此参数的效果和指定”-1”参数类似，但可搭配”-h”,”-t”和”-z”参数使用。 -h 只列出压缩文件的文件名称。 -l 此参数的效果和指定”-m”参数类似，但会列出原始文件的大小而非每个文件的压缩率。 -m 此参数的效果和指定”-s”参数类似，但多会列出每个文件的压缩率。 -M 若信息内容超过一个画面，则采用类似more指令的方式列出信息。 -s 用类似执行”ls -l”指令的效果列出压缩文件内容。 -t 只列出压缩文件内所包含的文件数目，压缩前后的文件大小及压缩率。 -T 将压缩文件内每个文件的日期时间用年，月，日，时，分，秒的顺序列出。 -v 详细显示压缩文件内每一个文件的信息。 -x&lt;范本样式&gt; 不列出符合条件的文件的信息。 -z 如果压缩文件内含有注释，就将注释显示出来。 实例显示压缩文件信息1zipinfo cp.zip 显示压缩文件中每个文件的信息1zipinfo -v cp.zip","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"zipinfo","slug":"Linux/备份压缩/zipinfo","permalink":"http://yoursite.com/categories/Linux/备份压缩/zipinfo/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"zipinfo","slug":"zipinfo","permalink":"http://yoursite.com/tags/zipinfo/"}]},{"title":"Linux-zip","slug":"Linux-zip","date":"2019-05-02T01:54:37.437Z","updated":"2019-03-02T06:14:17.000Z","comments":true,"path":"2019/05/02/Linux-zip/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-zip/","excerpt":"zip 命令zip 命令用于压缩文件。","text":"zip 命令zip 命令用于压缩文件。zip是个使用广泛的压缩程序，文件经他压缩后会另外产生具有“.zip”扩展名的压缩文件。 语法1zip [-AcdDfFghjJKlLmoqrSTuvVwXyz$][-b &lt;工作目录&gt;][-ll][-n &lt;字尾字符串&gt;][-t &lt;日期时间&gt;][-&lt;压缩效率&gt;][压缩文件][文件...][-i &lt;范本样式&gt;][-x &lt;范本样式&gt;] 参数 -A 调整可执行的自动解压缩文件。 -b&lt;工作目录&gt; 指定暂时存放文件的目录。 -c 替每个被压缩的文件加上注释。 -d 从压缩文件内删除指定的文件。 -D 压缩文件内不建立目录名称。 -f 此参数的效果和指定”-u”参数类似，但不仅更新既有文件，如果某些文件原本不存在于压缩文件内，使用本参数会一并将其加入压缩文件中。 -F 尝试修复已损坏的压缩文件。 -g 将文件压缩后附加在既有的压缩文件之后，而非另行建立新的压缩文件。 -h 在线帮助。 -i&lt;范本样式&gt; 只压缩符合条件的文件。 -j 只保存文件名称及其内容，而不存放任何目录名称。 -J 删除压缩文件前面不必要的数据。 -k 使用MS-DOS兼容格式的文件名称。 -l 压缩文件时，把LF字符置换成LF+CR字符。 -ll 压缩文件时，把LF+CR字符置换成LF字符。 -L 显示版权信息。 -m 将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中。 -n&lt;字尾字符串&gt; 不压缩具有特定字尾字符串的文件。 -o 以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同。 -q 不显示指令执行过程。 -r 递归处理，将指定目录下的所有文件和子目录一并处理。 -S 包含系统和隐藏文件。 -t&lt;日期时间&gt; 把压缩文件的日期设成指定的日期。 -T 检查备份文件内的每个文件是否正确无误。 -u 更换较新的文件到压缩文件内。 -v 显示指令执行过程或显示版本信息。 -V 保存VMS操作系统的文件属性。 -w 在文件名称里假如版本编号，本参数仅在VMS操作系统下有效。 -x&lt;范本样式&gt; 压缩时排除符合条件的文件。 -X 不保存额外的文件属性。 -y 直接保存符号连接，而非该连接所指向的文件，本参数仅在UNIX之类的系统下有效。 -z 替压缩文件加上注释。 -$ 保存第一个被压缩文件所在磁盘的卷册名称。 -&lt;压缩效率&gt; 压缩效率是一个介于1-9的数值。 实例将/home/html这个目录下所有文件和文件夹打包为当前目录下的html.zip1zip -q -r html.zip /home/html 如果在我们在 /home/html 目录下，可以执行以下命令：1zip -q -r html.zip * 从压缩文件 cp.zip 中删除文件 a.c1zip -dv cp.zip a.c","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"zip","slug":"Linux/备份压缩/zip","permalink":"http://yoursite.com/categories/Linux/备份压缩/zip/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"zip","slug":"zip","permalink":"http://yoursite.com/tags/zip/"}]},{"title":"Linux-ytalk","slug":"Linux-ytalk","date":"2019-05-02T01:54:37.429Z","updated":"2019-02-20T07:34:33.000Z","comments":true,"path":"2019/05/02/Linux-ytalk/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ytalk/","excerpt":"ytalk 命令ytalk 命令用于与其他用户交谈 。通过ytalk指令，你可以和其他用户线上交谈，如果想和其他主机的用户交谈，在用户名称后加上其主机名称或IP地址即可。","text":"ytalk 命令ytalk 命令用于与其他用户交谈 。通过ytalk指令，你可以和其他用户线上交谈，如果想和其他主机的用户交谈，在用户名称后加上其主机名称或IP地址即可。 语法1ytalk [-isxY][-h&lt;主机名称IP地址&gt;][用户名称...] 参数 -h&lt;主机名称IP地址&gt; 指定交谈对象所在的远端主机。 -i 用提醒声响代替显示信息。 -s 在指令提示符号先开启ytalk交谈窗。 -x 关闭图形界面。 -Y 所有必须回应yes或no的问题，都必须用大写英文字母”Y”或”N”回答。 实例发送消息1234567# who //显示当前用户root :0 Apr 9 20:17root pts/1 Apr 9 20:17w3c pts/6 May 27 16:47 (192.168.0.1)root pts/2 May 27 17:37 (192.168.0.1)# ytalk w3c //发送消息hey","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"ytalk","slug":"Linux/网络通讯/ytalk","permalink":"http://yoursite.com/categories/Linux/网络通讯/ytalk/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"ytalk","slug":"ytalk","permalink":"http://yoursite.com/tags/ytalk/"}]},{"title":"Linux-write","slug":"Linux-write","date":"2019-05-02T01:54:37.423Z","updated":"2019-02-20T07:21:36.000Z","comments":true,"path":"2019/05/02/Linux-write/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-write/","excerpt":"write 命令write 命令用于传讯息给其他使用者。使用权限：所有使用者。","text":"write 命令write 命令用于传讯息给其他使用者。使用权限：所有使用者。 语法1write user [ttyname] 参数 user : 预备传讯息的使用者帐号 ttyname : 如果使用者同时有两个以上的 tty 连线，可以自行选择合适的 tty 传讯息 实例传讯息给 Rollaend，此时 Rollaend 只有一个连线1write Rollaend 接下来就是将讯息打上去，结束请按 ctrl+c传讯息给 Rollaend，Rollaend 的连线有 pts/2，pts/31write Rollaend pts/2 接下来就是将讯息打上去，结束请按 ctrl+c注意：若对方设定 mesg n，则此时讯席将无法传给对方。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"write","slug":"Linux/网络通讯/write","permalink":"http://yoursite.com/categories/Linux/网络通讯/write/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"write","slug":"write","permalink":"http://yoursite.com/tags/write/"}]},{"title":"Linux-whois","slug":"Linux-whois","date":"2019-05-02T01:54:37.416Z","updated":"2019-02-27T11:23:39.000Z","comments":true,"path":"2019/05/02/Linux-whois/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-whois/","excerpt":"whois 命令whois 命令用于查找并显示用户信息。","text":"whois 命令whois 命令用于查找并显示用户信息。whois指令会去查找并显示指定帐号的用户相关信息，因为它是到Network Solutions的WHOIS数据库去查找，所以该帐号名称必须在上面注册方能寻获，且名称没有大小写的差别。 语法1whois [帐号名称] 实例显示指定用户信息1whois root 查询域名描述信息1whois .lx123.com 查询域名信息1whois lx123.com 查询域名信息省略法律声明1whois -H lx123.com 指定端口查询1whois -p 80 lx123.com","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"whois","slug":"Linux/系统管理/whois","permalink":"http://yoursite.com/categories/Linux/系统管理/whois/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"whois","slug":"whois","permalink":"http://yoursite.com/tags/whois/"}]},{"title":"Linux-whoami","slug":"Linux-whoami","date":"2019-05-02T01:54:37.409Z","updated":"2019-02-27T11:18:41.000Z","comments":true,"path":"2019/05/02/Linux-whoami/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-whoami/","excerpt":"whoami 命令whoami 命令用于显示自身用户名称。","text":"whoami 命令whoami 命令用于显示自身用户名称。显示自身的用户名称，本指令相当于执行“id -un”指令。 语法1whoami [--help][--version] 参数 –help 在线帮助。 –version 显示版本信息。 实例显示用户名1whoami","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"whoami","slug":"Linux/系统管理/whoami","permalink":"http://yoursite.com/categories/Linux/系统管理/whoami/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"whoami","slug":"whoami","permalink":"http://yoursite.com/tags/whoami/"}]},{"title":"Linux-who","slug":"Linux-who","date":"2019-05-02T01:54:37.400Z","updated":"2019-02-27T11:16:00.000Z","comments":true,"path":"2019/05/02/Linux-who/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-who/","excerpt":"who 命令who 命令用于显示系统中有哪些使用者正在上面，显示的资料包含了使用者ID、使用的终端机、从哪边连上来的、上线时间、呆滞时间、CPU使用量、动作等。","text":"who 命令who 命令用于显示系统中有哪些使用者正在上面，显示的资料包含了使用者ID、使用的终端机、从哪边连上来的、上线时间、呆滞时间、CPU使用量、动作等。使用权限：所有使用者。 语法1who - [husfV] [user] 参数 -H 或 –heading：显示各栏位的标题信息列； -i 或 -u 或 –idle：显示闲置时间，若该用户在前一分钟之内有进行任何动作，将标示成”.”号，如果该用户已超过24小时没有任何动作，则标示出”old”字符串； -m：此参数的效果和指定”am i”字符串相同； -q 或–count：只显示登入系统的帐号名称和总人数； -s：此参数将忽略不予处理，仅负责解决who指令其他版本的兼容性问题； -w 或-T或–mesg或–message或–writable：显示用户的信息状态栏； –help：在线帮助； –version：显示版本信息。 实例显示当前登录系统的用户1who 显示标题栏1who -H 显示用户登录来源1who -l -H 显示终端属性1who -T -H 只显示当前用户1who -m -H 精简模式显示1who -q","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"who","slug":"Linux/系统管理/who","permalink":"http://yoursite.com/categories/Linux/系统管理/who/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"who","slug":"who","permalink":"http://yoursite.com/tags/who/"}]},{"title":"Linux-which","slug":"Linux-which","date":"2019-05-02T01:54:37.394Z","updated":"2019-02-07T11:26:28.000Z","comments":true,"path":"2019/05/02/Linux-which/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-which/","excerpt":"which 命令which 命令用于查找文件。which指令会在环境变量$PATH设置的目录里查找符合条件的文件。","text":"which 命令which 命令用于查找文件。which指令会在环境变量$PATH设置的目录里查找符合条件的文件。 语法1which [文件...] 参数 -n&lt;文件名长度&gt; 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。 -p&lt;文件名长度&gt; 与-n参数相同，但此处的&lt;文件名长度&gt;包括了文件的路径。 -w 指定输出时栏位的宽度。 -V 显示版本信息。 实例使用指令“which”查看指令“bash”的绝对路径1which bash 以上命令执行成功后，输入结果为1/bin/bashd","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"which","slug":"Linux/文件管理/which","permalink":"http://yoursite.com/categories/Linux/文件管理/which/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"which","slug":"which","permalink":"http://yoursite.com/tags/which/"}]},{"title":"Linux-whereis","slug":"Linux-whereis","date":"2019-05-02T01:54:37.388Z","updated":"2019-02-07T13:37:54.000Z","comments":true,"path":"2019/05/02/Linux-whereis/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-whereis/","excerpt":"whereis 命令whereis 命令用于查找文件。该指令会在特定目录中查找符合条件的文件。这些文件应属于原始代码、二进制文件，或是帮助文件。该指令只能用于查找二进制文件、源代码文件和man手册页，一般文件的定位需使用locate命令。","text":"whereis 命令whereis 命令用于查找文件。该指令会在特定目录中查找符合条件的文件。这些文件应属于原始代码、二进制文件，或是帮助文件。该指令只能用于查找二进制文件、源代码文件和man手册页，一般文件的定位需使用locate命令。 语法1whereis [-bfmsu][-B &lt;目录&gt;...][-M &lt;目录&gt;...][-S &lt;目录&gt;...][文件...] 参数 -b 只查找二进制文件。 -B&lt;目录&gt; 只在设置的目录下查找二进制文件。 -f 不显示文件名前的路径名称。 -m 只查找说明文件。 -M&lt;目录&gt; 只在设置的目录下查找说明文件。 -s 只查找原始代码文件。 -S&lt;目录&gt; 只在设置的目录下查找原始代码文件。 -u 查找不包含指定类型的文件。 实例使用指令”whereis”查看指令”bash”的位置，输入如下命令：1$ whereis bash 上面的指令执行后，输出信息如下所示：1bash:/bin/bash/etc/bash.bashrc/usr/share/man/man1/bash.1.gz 注意：以上输出信息从左至右分别为查询的程序名、bash路径、bash的man 手册页路径。如果用户需要单独查询二进制文件或帮助文件，可使用如下命令：12$ whereis -b bash $ whereis -m bash 输出信息如下：1234$ whereis -b bash #显示bash 命令的二进制程序 bash: /bin/bash /etc/bash.bashrc /usr/share/bash # bash命令的二进制程序的地址 $ whereis -m bash #显示bash 命令的帮助文件 bash: /usr/share/man/man1/bash.1.gz #bash命令的帮助文件地址","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"whereis","slug":"Linux/文件管理/whereis","permalink":"http://yoursite.com/categories/Linux/文件管理/whereis/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"whereis","slug":"whereis","permalink":"http://yoursite.com/tags/whereis/"}]},{"title":"Linux-wc","slug":"Linux-wc","date":"2019-05-02T01:54:37.380Z","updated":"2019-02-10T16:40:21.000Z","comments":true,"path":"2019/05/02/Linux-wc/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-wc/","excerpt":"wc 命令wc 命令用于计算字数。利用wc指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、意识所给予的文件名为“-”，则wc指令会从标准输入设备读取数据。","text":"wc 命令wc 命令用于计算字数。利用wc指令我们可以计算文件的Byte数、字数、或是列数，若不指定文件名称、意识所给予的文件名为“-”，则wc指令会从标准输入设备读取数据。 语法1wc [-clw][--help][--version][文件...] 参数 -c或–bytes或–chars 只显示Bytes数。 -l或–lines 只显示行数。 -w或–words 只显示字数。 –help 在线帮助。 –version 显示版本信息。 实例在默认的情况下，wc将计算指定文件的行数、字数、以及字节数。1wc testfile 先查看testfile文件的内容12345678$ cat testfile Linux networks are becoming more and more common, but scurity is often an overlooked issue. Unfortunately, in today’s environment all networks are potential hacker targets, fro0m tp-secret military research networks to small home LANs. Linux Network Securty focuses on securing Linux in a networked environment, where the security of the entire network needs to be considered rather than just isolated machines. It uses a mix of theory and practicl techniques to teach administrators how to install and use security applications, as well as how the applcations work and why they are necesary. 使用wc统计，结果如下：12$ wc testfile # testfile文件的统计信息 3 92 598 testfile # testfile文件的行数为3、单词数92、字节数598 其中，3 个数字分别表示testfile文件的行数、单词数，以及该文件的字节数。如果想同时统计多个文件的信息，例如同时统计testfile、testfile_1、testfile_2，可使用如下命令：1wc testfile testfile_1 testfile_2 #统计三个文件的信息 输出结果如下：12345$ wc testfile testfile_1 testfile_2 #统计三个文件的信息 3 92 598 testfile #第一个文件行数为3、单词数92、字节数598 9 18 78 testfile_1 #第二个文件的行数为9、单词数18、字节数78 3 6 32 testfile_2 #第三个文件的行数为3、单词数6、字节数32 15 116 708 总用量 #三个文件总共的行数为15、单词数116、字节数708","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"wc","slug":"Linux/文档编辑/wc","permalink":"http://yoursite.com/categories/Linux/文档编辑/wc/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"wc","slug":"wc","permalink":"http://yoursite.com/tags/wc/"}]},{"title":"Linux-wall","slug":"Linux-wall","date":"2019-05-02T01:54:37.374Z","updated":"2019-02-20T06:46:06.000Z","comments":true,"path":"2019/05/02/Linux-wall/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-wall/","excerpt":"wall 命令wall 命令会将讯息传给每一个mesg设定为yes的上线使用者。当使用终端机界面作为标准传入时，讯息结束时需加上EOF（通常用Ctrl+D）。使用权限：所有使用者。","text":"wall 命令wall 命令会将讯息传给每一个mesg设定为yes的上线使用者。当使用终端机界面作为标准传入时，讯息结束时需加上EOF（通常用Ctrl+D）。使用权限：所有使用者。 语法1wall [message] 实例传讯息“hi”给每一个使用者1wall hi 广播消息1234wall IloveBroadcast message from root (pts/4) (Thu May 27 16:41:09 2014):Ilove","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"wall","slug":"Linux/网络通讯/wall","permalink":"http://yoursite.com/categories/Linux/网络通讯/wall/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"wall","slug":"wall","permalink":"http://yoursite.com/tags/wall/"}]},{"title":"Linux-w","slug":"Linux-w","date":"2019-05-02T01:54:37.366Z","updated":"2019-02-27T12:09:12.000Z","comments":true,"path":"2019/05/02/Linux-w/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-w/","excerpt":"w 命令w 命令用于显示目前登入系统的用户信息。","text":"w 命令w 命令用于显示目前登入系统的用户信息。执行这项指令可得知目前登入系统的用户有哪些人，以及他们正在执行的程序。单独执行w指令会显示所有的用户，也可以指定用户名称，仅显示某位用户的相关信息。 语法1w [-fhlsuV][用户名称] 参数 -f 开启或关闭显示用户从何处登入系统。 -h 不显示各栏位的标题信息列。 -l 使用详细格式列表，此为预设值。 -s 使用简洁格式列表，不显示用户登入时间，终端机阶段作业和程序所耗费的CPU时间。 -u 忽略执行程序的名称，以及该程序耗费CPU时间的信息。 -V 显示版本信息。 实例显示当前用户1w 不显示登录位置1w -f 以精简模式显示1w -s 不显示标题1w -h","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"w","slug":"Linux/系统管理/w","permalink":"http://yoursite.com/categories/Linux/系统管理/w/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"w","slug":"w","permalink":"http://yoursite.com/tags/w/"}]},{"title":"Linux-vlock","slug":"Linux-vlock","date":"2019-05-02T01:54:37.361Z","updated":"2019-02-27T11:10:26.000Z","comments":true,"path":"2019/05/02/Linux-vlock/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-vlock/","excerpt":"vlock 命令vlock 命令用于锁住虚拟终端。","text":"vlock 命令vlock 命令用于锁住虚拟终端。执行vlock指令可锁住虚拟终端，避免他人使用。 语法1vlock [-achv] 参数锁定虚拟终端1vlock","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"vlock","slug":"Linux/系统管理/vlock","permalink":"http://yoursite.com/categories/Linux/系统管理/vlock/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"vlock","slug":"vlock","permalink":"http://yoursite.com/tags/vlock/"}]},{"title":"Linux-uux","slug":"Linux-uux","date":"2019-05-02T01:54:37.354Z","updated":"2019-02-20T05:54:40.000Z","comments":true,"path":"2019/05/02/Linux-uux/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uux/","excerpt":"uux 命令uux 命令用于在远端的UUCP主机上执行指令。uux可在远端的UUCP主机上执行指令或是执行本机上的指令，但在执行时会使用远端电脑的文件。","text":"uux 命令uux 命令用于在远端的UUCP主机上执行指令。uux可在远端的UUCP主机上执行指令或是执行本机上的指令，但在执行时会使用远端电脑的文件。 语法1uux [-bcCIjlnrvz][-a&lt;地址&gt;][-g&lt;等级&gt;][-s&lt;文件&gt;][-x&lt;层级&gt;][--help][指令] 参数 -或-p或–stdin 直接从键盘读取要执行的指令。 -a&lt;地址&gt;或–requestor&lt;地址&gt; 执行邮件地址，以便寄送状态信息。 -b或–erturn-stdin 在屏幕上显示状态信息。 -c或–nocopy 不用将文件复制到缓冲区。 -C或–copy 将文件复制到缓冲区。 -g&lt;等级&gt;或–grade&lt;等级&gt; 指定文件传送作业的优先顺序。 -I或–config file 指定uux配置文件。 -j或–jobid 显示作业编号。 -l或–link 将本机上的文件连接到缓冲区。 -n或–notification=no 无论发生任何状态，都不寄邮件通知用户。 -r或–nouucico 不要立即启动uucico服务程序，仅将作业送到队列中，然后再执行。 -s&lt;文件&gt;或–status&lt;文件&gt; 将完成状态保存为指定的文件。 -v或–version 显示版本信息。 -x&lt;层级&gt;或–debug&lt;层级&gt; 指定排错层级。 -z或–notification=error 若发生错误，则以邮件来通知用户。 –help 显示帮助。 实例在远程主机uucp执行命令：1# uux hnlinux! date /// 在远程主机 指定date命令查看系统时间","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"uux","slug":"Linux/网络通讯/uux","permalink":"http://yoursite.com/categories/Linux/网络通讯/uux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"uux","slug":"uux","permalink":"http://yoursite.com/tags/uux/"}]},{"title":"Linux-uuto","slug":"Linux-uuto","date":"2019-05-02T01:54:37.347Z","updated":"2019-02-12T14:04:42.000Z","comments":true,"path":"2019/05/02/Linux-uuto/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uuto/","excerpt":"uuto 命令uuto 命令将文件传送到远端的UUCP主机。uuto为script文件，它实际上会执行uucp，用来将文件传送到远端UUCP主机，并在完成工作之后，以邮件通知远端主机上的用户。","text":"uuto 命令uuto 命令将文件传送到远端的UUCP主机。uuto为script文件，它实际上会执行uucp，用来将文件传送到远端UUCP主机，并在完成工作之后，以邮件通知远端主机上的用户。 语法1uuto [文件][目的] 参数参考uucp 命令 实例将文件传送到远程UUCP主机localhost的tmp目录，命令如下：1uuto./testfile localhost/tmp #将文件传送到远程UUCP 主机localhost的tmp目录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"uuto","slug":"Linux/文件传输/uuto","permalink":"http://yoursite.com/categories/Linux/文件传输/uuto/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"uuto","slug":"uuto","permalink":"http://yoursite.com/tags/uuto/"}]},{"title":"Linux-uustat","slug":"Linux-uustat","date":"2019-05-02T01:54:37.342Z","updated":"2019-02-20T06:15:28.000Z","comments":true,"path":"2019/05/02/Linux-uustat/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uustat/","excerpt":"uustat 命令uustat 命令用于显示UUCP目前的状况。执行uucp与uux指令后，会先将工作送到队列，再由uucico来执行工作。uustat可显示、删除或启动队列中等待执行的工作。","text":"uustat 命令uustat 命令用于显示UUCP目前的状况。执行uucp与uux指令后，会先将工作送到队列，再由uucico来执行工作。uustat可显示、删除或启动队列中等待执行的工作。 语法1uustat [-aeiKmMNpqQRv][-B&lt;行数&gt;][-c&lt;指令&gt;][-C&lt;指令&gt;][-I&lt;配置文件&gt;][-k&lt;工作&gt;][-o&lt;小时&gt;][-r&lt;工作&gt;][-s&lt;主机&gt;][-S&lt;主机&gt;][-u&lt;用户&gt;][-U&lt;用户&gt;][-W&lt;附注&gt;][-y&lt;小时&gt;][-x&lt;层级&gt;][--help] 参数 -a或-all 显示全部的UUCP工作。 -B&lt;行数&gt;或–mail-lines&lt;行数&gt; 与-M或-N参数一并使用，用来指定邮件中要包含多少行的信息。 -c&lt;指令&gt;或–command&lt;指令&gt; 显示与&lt;指令&gt;有关的工作。 -C&lt;指令&gt;或–not-command&lt;指令&gt; 显示与&lt;指令&gt;无关的工作。 -e或–executions 仅显示待执行的工作。 -i或–prompt 针对队列中的每项工作，询问使用是否要删除工作。 -I&lt;配置文件&gt;或–config&lt;配置文件&gt; 指定配置文件。 -k&lt;工作&gt;或–kill&lt;工作&gt; 删除指定的工作。 -m或–status 删除全部的工作。 -M或-mail 将状态信息邮寄给UUCP管理员。 -N或–notify 将状态信息分别邮寄给提出该项工作的用户。 -o&lt;小时&gt;或–older-than&lt;小时&gt; 显示超过指定时数的工作。 -p或–ps 显示负责UUCP锁定的程序。 -q或–list 显示每台远端主机上所要执行工作的状态。 -Q或–no-list 不显示工作。 -r&lt;工作&gt;或–rejuvenate&lt;工作&gt; 重新启动指定的工作。 -R或–rejuvenate-all 重新启动全部的工作。 -s&lt;主机&gt;或–system&lt;主机&gt; 显示与&lt;主机&gt;有关的工作。 -S&lt;主机&gt;或–not-system&lt;主机&gt; 显示与&lt;主机&gt;无关的工作。 -v或–version 显示版本信息。 -u&lt;用户&gt;或–user&lt;用户&gt; 显示与&lt;用户&gt;有关的工作。 -U&lt;用户&gt;或–not-user&lt;用户&gt; 显示与&lt;用户&gt;无关的工作。 -W&lt;附注&gt;或–comment&lt;附注&gt; 要放在邮件信息中的附注。 -y&lt;小时&gt;或–younger-than&lt;小时&gt; 显示低于指定时数的工作。 -x&lt;层级&gt;或–debug&lt;层级&gt; 指定排错层级。 –help 显示帮助。 实例显示所有任务1uustat -a 显示等待的任务1uustat -e","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"uustat","slug":"Linux/网络通讯/uustat","permalink":"http://yoursite.com/categories/Linux/网络通讯/uustat/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"uustat","slug":"uustat","permalink":"http://yoursite.com/tags/uustat/"}]},{"title":"Linux-uupick","slug":"Linux-uupick","date":"2019-05-02T01:54:37.335Z","updated":"2019-02-12T14:08:52.000Z","comments":true,"path":"2019/05/02/Linux-uupick/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uupick/","excerpt":"uupick 命令uupick 命令处理传送进来的文件。当其他主机通过UUCP将文件传送进来时，可利用uupick指令取出这些文件。","text":"uupick 命令uupick 命令处理传送进来的文件。当其他主机通过UUCP将文件传送进来时，可利用uupick指令取出这些文件。 语法1uupick [-v][-I&lt;配置文件&gt;][-s&lt;主机&gt;][-x&lt;层级&gt;][--help] 参数 -I&lt;配置文件&gt;或–config&lt;配置文件&gt; 指定配置文件。 -s&lt;主机&gt;或–system&lt;主机&gt; 处理由指定主机传送过来的文件。 -v或–version 显示版本信息。 –help 显示帮助。 实例处理由主机localhost传送过来的文件，命令如下：1uuipck -s localhost 该指令通常没有输出。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"uupick","slug":"Linux/文件传输/uupick","permalink":"http://yoursite.com/categories/Linux/文件传输/uupick/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"uupick","slug":"uupick","permalink":"http://yoursite.com/tags/uupick/"}]},{"title":"Linux-uuname","slug":"Linux-uuname","date":"2019-05-02T01:54:37.328Z","updated":"2019-02-20T07:16:57.000Z","comments":true,"path":"2019/05/02/Linux-uuname/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uuname/","excerpt":"uuname 命令uuname 命令用于显示全部的UUCP远端主机。uuname可显示UUCP远端主机。","text":"uuname 命令uuname 命令用于显示全部的UUCP远端主机。uuname可显示UUCP远端主机。 语法1uuname [-alv][-I&lt;配置文件&gt;][--help] 参数 -a或–aliases 显示别名。 -I&lt;配置文件&gt;或–config&lt;配置文件&gt; 指定程序的配置文件。 -l或–local 显示本机名称。 -v或–version 显示版本信息。 –help 显示帮助。 实例显示uucp主机名称1# uuname","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"uuname","slug":"Linux/网络通讯/uuname","permalink":"http://yoursite.com/categories/Linux/网络通讯/uuname/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"uuname","slug":"uuname","permalink":"http://yoursite.com/tags/uuname/"}]},{"title":"Linux-uulog","slug":"Linux-uulog","date":"2019-05-02T01:54:37.321Z","updated":"2019-02-20T06:00:40.000Z","comments":true,"path":"2019/05/02/Linux-uulog/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uulog/","excerpt":"uulog 命令uulog 命令用于显示UUCP记录文件。uulog可用来显示UUCP记录文件中记录。","text":"uulog 命令uulog 命令用于显示UUCP记录文件。uulog可用来显示UUCP记录文件中记录。 语法1uulog [-DFISv][-&lt;行数&gt;][-f&lt;主机&gt;][-I&lt;配置文件&gt;][-n&lt;行数&gt;][-s&lt;主机&gt;][-u&lt;用户&gt;][-X&lt;层级&gt;][--help] 参数 -D或–debuglog 显示排错记录。 -f&lt;主机&gt;或–follow&lt;主机&gt; 与-F参数类似，但仅显示与指定主机相关的记录。 -I&lt;配置文件&gt;或–config&lt;配置文件&gt; 指定程序的配置文件。 -&lt;行数&gt;,-n&lt;行数&gt;或–lines&lt;行数&gt; 显示记录文件中，从最后算起指定行数的数值。 -s&lt;主机&gt; 仅显示记录文件中，与指定文件相关的记录。 -S或–statslog 显示统计记录。 -u&lt;用户&gt;或–suer&lt;用户&gt; 仅显示记录文件中，与指定用户相关的记录。 -v或–version 显示版本信息。 -X&lt;层级&gt;或–debug&lt;层级&gt; 设定排错层级。 –help 显示帮助。 实例显示uucp log信息1uulog","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"uulog","slug":"Linux/网络通讯/uulog","permalink":"http://yoursite.com/categories/Linux/网络通讯/uulog/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"uulog","slug":"uulog","permalink":"http://yoursite.com/tags/uulog/"}]},{"title":"Linux-uuencode","slug":"Linux-uuencode","date":"2019-05-02T01:54:37.315Z","updated":"2019-03-02T05:25:06.000Z","comments":true,"path":"2019/05/02/Linux-uuencode/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uuencode/","excerpt":"uuencode 命令uuencode 命令用于将uuencode编码后的档案还原。","text":"uuencode 命令uuencode 命令用于将uuencode编码后的档案还原。早期在许多 unix 系统的传送协定只能传送七位元字元，并不支援二进位档案，像中文文字档就有用到八位元，所以无法完整地送到另一架机器上。 uuencode 指令，可以将二进位档转换成七位元的档案，传送到另一架机器上再以 uudecode 还原。最常见的是用在以电子邮件传送二进位档。uuencode 编码后的资料都以 begin 开始，以 end 作为结束。 语法1compress[必要参数][选择参数][目录或者文件] 参数必要参数 无 选择参数 h 显示帮助信息 v 显示版本信息 实例还原档案1# uuencode test.uud","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"uuencode","slug":"Linux/备份压缩/uuencode","permalink":"http://yoursite.com/categories/Linux/备份压缩/uuencode/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"uuencode","slug":"uuencode","permalink":"http://yoursite.com/tags/uuencode/"}]},{"title":"Linux-uudecode","slug":"Linux-uudecode","date":"2019-05-02T01:54:37.308Z","updated":"2019-03-02T06:06:10.000Z","comments":true,"path":"2019/05/02/Linux-uudecode/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uudecode/","excerpt":"uudecode 命令uudecode 命令将 uuencode 编码后的档案还原， uudecode 只会将 begin 与 end 标记之间的编码资料还原，程序会跳过标记以外的资料。","text":"uudecode 命令uudecode 命令将 uuencode 编码后的档案还原， uudecode 只会将 begin 与 end 标记之间的编码资料还原，程序会跳过标记以外的资料。 语法1uuencode [-hv] [file1 ...]&lt;/p&gt; 参数 h 列出指令使用格式 (help) v 列出版本讯息 实例将file.uud还原，而还原后的档名储存在file.uud档中1uuencode file.uud 可以一起还原好几个档案1uuencode file1.uud file2.uud","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"uudecode","slug":"Linux/备份压缩/uudecode","permalink":"http://yoursite.com/categories/Linux/备份压缩/uudecode/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"uudecode","slug":"uudecode","permalink":"http://yoursite.com/tags/uudecode/"}]},{"title":"Linux-uucp","slug":"Linux-uucp","date":"2019-05-02T01:54:37.302Z","updated":"2019-02-12T14:14:03.000Z","comments":true,"path":"2019/05/02/Linux-uucp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uucp/","excerpt":"uucp 命令uucp 命令用于在Unix系统之间传送文件。uucp为Unix系统之间，通过序列线来连线的协议。uucp使用uucp协议，主要功能为传送文件。","text":"uucp 命令uucp 命令用于在Unix系统之间传送文件。uucp为Unix系统之间，通过序列线来连线的协议。uucp使用uucp协议，主要功能为传送文件。 语法1uucp [-cCdfjmrRtvW][-g&lt;等级&gt;][-I&lt;配置文件&gt;][-n&lt;用户&gt;][-x&lt;类型&gt;][--help][...来源][目的] 参数 -c或–nocopy 不用将文件复制到缓冲区。 -C或–copy 将文件复制到缓冲区。 -d或–directiories 在传送文件时，自动在[目的]建立必要的目录。 -f或–nodirectiories 在传送文件时，若需要在[目的]建立目录，则放弃执行该作业。 -g&lt;等级&gt;或–grade&lt;等级&gt; 指定文件传送作业的优先顺序。 -I&lt;配置文件&gt;或–config&lt;配置文件&gt; 指定uucp配置文件。 -j或–jobid 显示作业编号。 -m或–mail 作业结束后，以电子邮件报告作业是否顺利完成。 -n&lt;用户&gt;或–notify&lt;用户&gt; 作业结束后，以电子邮件向指定的用户报告作业是否顺利完成。 -r或–nouucico 不要立即启动uucico服务程序，仅将作业送到队列中，待稍后再执行。 -R或–recursive 若[来源]为目录，则将整个目录包含子目录复制到[目的]。 -t或–uuto 将最后一个参数视为”主机名!用户”。 -v或–version 显示版本信息。 -W或–noexpand 不要将目前所在的目录加入路径。 -x&lt;类型&gt;或–debug&lt;类型&gt;启动指定的排错模式。 –help 显示帮助。 [源…] 指定源文件或路径。 [目的] 指定目标文件或路径。 实例将temp/目录下所有文件传送到远程主机localhost的uucp公共目录下的public/目录下，命令如下：1uucp -d -r temp localhost ~/public/ 该命令通常没有输出。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"uucp","slug":"Linux/文件传输/uucp","permalink":"http://yoursite.com/categories/Linux/文件传输/uucp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"uucp","slug":"uucp","permalink":"http://yoursite.com/tags/uucp/"}]},{"title":"Linux-uucico","slug":"Linux-uucico","date":"2019-05-02T01:54:37.295Z","updated":"2019-02-12T14:19:58.000Z","comments":true,"path":"2019/05/02/Linux-uucico/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uucico/","excerpt":"uucico 命令uucico 命令uucp文件传输服务程序。uucico是用来处理uucp或uux送到队列的文件传输工具。uucico有两种工作模式：主动模式和附属模式。当在主动模式下时，uucico会调用远端主机；在附属模式下时，uucico则接受远端主机的调用。","text":"uucico 命令uucico 命令uucp文件传输服务程序。uucico是用来处理uucp或uux送到队列的文件传输工具。uucico有两种工作模式：主动模式和附属模式。当在主动模式下时，uucico会调用远端主机；在附属模式下时，uucico则接受远端主机的调用。 语法1uucico [-cCDefqvwz][-i&lt;类型&gt;][-I&lt;文件&gt;][-p&lt;连接端口号码&gt;][-][-rl][-s&lt;主机&gt;][-S&lt;主机&gt;][-u&lt;用户&gt;][-x&lt;类型&gt;][--help] 参数 -c或–quiet 当不执行任何工作时，不要更改记录文件的内容及更新目前的状态。 -C或–ifwork 当有工作要执行时，才调用-s或-S参数所指定主机。 -D或–nodetach 不要与控制终端机离线。 -e或–loop 在附属模式下执行，并且出现要求登入的提示画面。 -f或–force 当执行错误时，不等待任何时间即重新调用主机。 -i&lt;类型&gt;或–stdin&lt;类型&gt; 当使用到标准输入设备时，指定连接端口的类型。 -I&lt;文件&gt;–config&lt;文件&gt; 指定使用的配置文件。 -l或–prompt 出现要求登入的提示画面。 -p&lt;连接端口号码&gt;或-port&lt;连接端口号码&gt; 指定连接端口号码。 -q或–quiet 不要启动uuxqt服务程序。 -r0或–slave 以附属模式启动。 -s&lt;主机&gt;或–system&lt;主机&gt; 调用指定的主机。 -u&lt;用户&gt;或–login&lt;用户&gt; 指定登入的用户帐号，而不允许输入任意的登入帐号。 -v或–version 显示版本信息，并且结束程序。 -w或–wait 在主动模式下，当执行调用动作时，则出现要求登入的提示画面。 -x&lt;类型&gt;或-X&lt;类型&gt;或outgoing-debug&lt;类型&gt; 启动指定的排错模式。 -z或–try-next 当执行不成功时，尝试下一个选择而不结束程序。 –help 显示帮助，并且结束程序。 实例使用主动模式启动uucico服务，命令如下1uucico -r1 该命令一般没有输出。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"uucico","slug":"Linux/文件传输/uucico","permalink":"http://yoursite.com/categories/Linux/文件传输/uucico/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"uucico","slug":"uucico","permalink":"http://yoursite.com/tags/uucico/"}]},{"title":"Linux-usermod","slug":"Linux-usermod","date":"2019-05-02T01:54:37.289Z","updated":"2019-02-27T05:01:10.000Z","comments":true,"path":"2019/05/02/Linux-usermod/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-usermod/","excerpt":"usermod 命令usermod 命令用于修改用户账号。","text":"usermod 命令usermod 命令用于修改用户账号。usermod可用来修改用户账号的各项设定。 语法1usermod [-LU][-c &lt;备注&gt;][-d &lt;登入目录&gt;][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-l &lt;帐号名称&gt;][-s &lt;shell&gt;][-u &lt;uid&gt;][用户帐号] 参数 -c&lt;备注&gt; 修改用户帐号的备注文字。 -d登入目录&gt; 修改用户登入时的目录。 -e&lt;有效期限&gt; 修改帐号的有效期限。 -f&lt;缓冲天数&gt; 修改在密码过期后多少天即关闭该帐号。 -g&lt;群组&gt; 修改用户所属的群组。 -G&lt;群组&gt; 修改用户所属的附加群组。 -l&lt;帐号名称&gt; 修改用户帐号名称。 -L 锁定用户密码，使密码无效。 -s&lt; shell &gt; 修改用户登入后所使用的shell。 -u&lt; uid &gt; 修改用户ID。 -U 解除密码锁定。 实例更改登录目录1usermod -d /home/hnlinux root 改变用户的uid1usermod -u 777 root","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"usermod","slug":"Linux/系统管理/usermod","permalink":"http://yoursite.com/categories/Linux/系统管理/usermod/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"usermod","slug":"usermod","permalink":"http://yoursite.com/tags/usermod/"}]},{"title":"Linux-userdel","slug":"Linux-userdel","date":"2019-05-02T01:54:37.282Z","updated":"2019-02-27T05:08:01.000Z","comments":true,"path":"2019/05/02/Linux-userdel/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-userdel/","excerpt":"userdel 命令userdel 命令用于删除用户账号。","text":"userdel 命令userdel 命令用于删除用户账号。userdel可删除用户账号与相关文件。若不加参数，则仅删除用户账号，而不删除相关文件。 语法1userdel [-r][用户帐号] 参数 -r 删除用户登入目录以及目录中所有文件。 实例删除用户账号1userdel hnlinux","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"userdel","slug":"Linux/系统管理/userdel","permalink":"http://yoursite.com/categories/Linux/系统管理/userdel/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"userdel","slug":"userdel","permalink":"http://yoursite.com/tags/userdel/"}]},{"title":"Linux-userconf","slug":"Linux-userconf","date":"2019-05-02T01:54:37.274Z","updated":"2019-02-27T04:53:03.000Z","comments":true,"path":"2019/05/02/Linux-userconf/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-userconf/","excerpt":"userconf 命令userconf 命令用于用户账号设置程序。","text":"userconf 命令userconf 命令用于用户账号设置程序。userconf实际上为linuxconf的符号连接，提供图形界面的操作方式，供管理员建立与管理各类帐号。若不加任何参数，即进入图形界面。 语法1userconf [--addgroup &lt;群组&gt;][--adduser &lt;用户ID&gt;&lt;群组&gt;&lt;用户名称&gt;&lt;shell&gt;][--delgroup &lt;群组&gt;][--deluser &lt;用户ID&gt;][--help] 参数 –addgroup&lt;群组&gt; 新增群组。 –adduser&lt;用户ID&gt;&lt;群组&gt;&lt;用户名称&gt;&lt; shell &gt; 新增用户帐号。 –delgroup&lt;群组&gt; 删除群组。 –deluser&lt;用户ID&gt; 删除用户帐号。 –help 显示帮助。 实例新增用户1userconf --adduser 666 tt lord /bin/bash","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"userconf","slug":"Linux/系统管理/userconf","permalink":"http://yoursite.com/categories/Linux/系统管理/userconf/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"usercong","slug":"usercong","permalink":"http://yoursite.com/tags/usercong/"}]},{"title":"Linux-useradd","slug":"Linux-useradd","date":"2019-05-02T01:54:37.268Z","updated":"2019-02-24T03:27:52.000Z","comments":true,"path":"2019/05/02/Linux-useradd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-useradd/","excerpt":"useradd 命令useradd 命令用于建立用户账号。useradd可用来建立用户账号。账号建好之后，再用passwd设定账号的密码，而可用userdel删除账号。使用useradd指令所建立的账号，实际上是保存在/etc/passwd文本文件中。","text":"useradd 命令useradd 命令用于建立用户账号。useradd可用来建立用户账号。账号建好之后，再用passwd设定账号的密码，而可用userdel删除账号。使用useradd指令所建立的账号，实际上是保存在/etc/passwd文本文件中。 语法123useradd [-mMnr][-c &lt;备注&gt;][-d &lt;登入目录&gt;][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-s &lt;shell&gt;][-u &lt;uid&gt;][用户帐号]或useradd -D [-b][-e &lt;有效期限&gt;][-f &lt;缓冲天数&gt;][-g &lt;群组&gt;][-G &lt;群组&gt;][-s &lt;shell&gt;] 参数 -c&lt;备注&gt; 加上备注文字。备注文字会保存在passwd的备注栏位中。 -d&lt;登入目录&gt; 指定用户登入时的启始目录。 -D 变更预设值． -e&lt;有效期限&gt; 指定帐号的有效期限。 -f&lt;缓冲天数&gt; 指定在密码过期后多少天即关闭该帐号。 -g&lt;群组&gt; 指定用户所属的群组。 -G&lt;群组&gt; 指定用户所属的附加群组。 -m 自动建立用户的登入目录。 -M 不要自动建立用户的登入目录。 -n 取消建立以用户名称为名的群组． -r 建立系统帐号。 -s&lt; shell &gt; 指定用户登入后所使用的shell。 -u&lt; uid &gt; 指定用户ID。 实例添加一般用户1useradd tt 为添加的用户指定相应的用户组1useradd -g root tt 创建一个系统用户1useradd -r tt 为新添加的用户指定home目录1useradd -d /home/myd tt 建立用户且制定ID1useradd caojh -u 544","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"useradd","slug":"Linux/系统管理/useradd","permalink":"http://yoursite.com/categories/Linux/系统管理/useradd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"useradd","slug":"useradd","permalink":"http://yoursite.com/tags/useradd/"}]},{"title":"Linux-updatedb","slug":"Linux-updatedb","date":"2019-05-02T01:54:37.262Z","updated":"2019-02-07T13:41:42.000Z","comments":true,"path":"2019/05/02/Linux-updatedb/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-updatedb/","excerpt":"updatedb 命令updatedb 命令用来创建或更新 slocate/locate 命令所必需的数据库文件。updatedb 命令的执行过程较长，因为在执行时它会遍历整个系统的目录树，并将所有的文件信息写入 slocate/locate 数据库文件中。注意：slocate 本身具有一个数据库，里面存放了系统中文件与目录的相关信息。","text":"updatedb 命令updatedb 命令用来创建或更新 slocate/locate 命令所必需的数据库文件。updatedb 命令的执行过程较长，因为在执行时它会遍历整个系统的目录树，并将所有的文件信息写入 slocate/locate 数据库文件中。注意：slocate 本身具有一个数据库，里面存放了系统中文件与目录的相关信息。 语法1updatedb(选项) 参数 -o&lt;文件&gt;：忽略默认的数据库文件，使用指定的slocate数据库文件； -U&lt;目录&gt;：更新指定目录的slocate数据库； -v：显示执行的详细过程。 实例以下实例检测一个未存在的文件 runoob.txt：123456# locate runoob.txt # 检索 runoob.txt，没有任何输出，表示没有该文件# touch ./runoob.txt # 添加文件 runoob.txt# locate runoob.txt # 再次检索 runoob.txt，依然没有该文件# updatedb # 更新 locate.db 数据库# locate runoob.txt # 再次数据库检索 runoob.txt，找到该文件/root/runoob/runoob.txt 使用 -U 选项可以指定要更新 slocate 数据库的目录。1updatedb -U /root/runoob/","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"updatedb","slug":"Linux/文件管理/updatedb","permalink":"http://yoursite.com/categories/Linux/文件管理/updatedb/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"updatedb","slug":"updatedb","permalink":"http://yoursite.com/tags/updatedb/"}]},{"title":"Linux-unzip","slug":"Linux-unzip","date":"2019-05-02T01:54:37.255Z","updated":"2019-03-02T06:09:54.000Z","comments":true,"path":"2019/05/02/Linux-unzip/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-unzip/","excerpt":"unzip 命令unzip 命令用于解压缩zip文件。","text":"unzip 命令unzip 命令用于解压缩zip文件。unzip为.zip压缩文件的解压缩程序。 语法1unzip [-cflptuvz][-agCjLMnoqsVX][-P &lt;密码&gt;][.zip文件][文件][-d &lt;目录&gt;][-x &lt;文件&gt;] 或 unzip [-Z] 参数 -c 将解压缩的结果显示到屏幕上，并对字符做适当的转换。 -f 更新现有的文件。 -l 显示压缩文件内所包含的文件。 -p 与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换。 -t 检查压缩文件是否正确。 -u 与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中。 -v 执行是时显示详细的信息。 -z 仅显示压缩文件的备注文字。 -a 对文本文件进行必要的字符转换。 -b 不要对文本文件进行字符转换。 -C 压缩文件中的文件名称区分大小写。 -j 不处理压缩文件中原有的目录路径。 -L 将压缩文件中的全部文件名改为小写。 -M 将输出结果送到more程序处理。 -n 解压缩时不要覆盖原有的文件。 -o 不必先询问用户，unzip执行后覆盖原有文件。 -P&lt;密码&gt; 使用zip的密码选项。 -q 执行时不显示任何信息。 -s 将文件名中的空白字符转换为底线字符。 -V 保留VMS的文件版本信息。 -X 解压缩时同时回存文件原来的UID/GID。 [.zip文件] 指定.zip压缩文件。 [文件] 指定要处理.zip压缩文件中的哪些文件。 -d&lt;目录&gt; 指定文件解压缩后所要存储的目录。 -x&lt;文件&gt; 指定不要处理.zip压缩文件中的哪些文件。 -Z unzip -Z等于执行zipinfo指令。 实例查看压缩文件中的包含的文件1234567891011# unzip -l abc.zip Archive: abc.zip Length Date Time Name-------- ---- ---- ---- 94618 05-21-10 20:44 a11.jpg 202001 05-21-10 20:44 a22.jpg 16 05-22-10 15:01 11.txt 46468 05-23-10 10:30 w456.JPG 140085 03-14-10 21:49 my.asp-------- ------- 483188 5 files -v参数用于查看压缩文件目录信息，但是不解压该文件1234567891011# unzip -v abc.zip Archive: abc.zipLength Method Size Ratio Date Time CRC-32 Name-------- ------ ------- ----- ---- ---- ------ ---- 94618 Defl:N 93353 1% 05-21-10 20:44 9e661437 a11.jpg 202001 Defl:N 201833 0% 05-21-10 20:44 1da462eb a22.jpg 16 Stored 16 0% 05-22-10 15:01 ae8a9910 ? +-|￥+-? (11).txt 46468 Defl:N 39997 14% 05-23-10 10:30 962861f2 w456.JPG 140085 Defl:N 36765 74% 03-14-10 21:49 836fcc3f my.asp-------- ------- --- ------- 483188 371964 23% 5 files","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"unzip","slug":"Linux/备份压缩/unzip","permalink":"http://yoursite.com/categories/Linux/备份压缩/unzip/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"unzip","slug":"unzip","permalink":"http://yoursite.com/tags/unzip/"}]},{"title":"Linux-unset","slug":"Linux-unset","date":"2019-05-02T01:54:37.247Z","updated":"2019-03-01T12:09:29.000Z","comments":true,"path":"2019/05/02/Linux-unset/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-unset/","excerpt":"unset 命令unset 命令用于删除变量或函数。","text":"unset 命令unset 命令用于删除变量或函数。unset为shell内建指令，可删除变量或函数。 语法1unset [-fv][变量或函数名称] 参数 -f 仅删除函数。 -v 仅删除变量。 实例删除环境变量123456789101112131415161718192021222324252627282930313233343536373839404142434445464748# lx=&quot;ls -lh&quot; //设定环境变量# $lx //使用环境变量总用量 116K-rw-r--r-- 1 root root 2.1K 2008-03-30 anaconda-ks.cfgdrwx------ 3 root root 4.0K 3月 30 21:22 Desktop-rw-r--r-- 1 root root 50K 2008-03-30 install.log-rw-r--r-- 1 root root 32K 2008-03-30 install.log.sysloglrwxrwxrwx 1 root root 9 2008-03-30 qte -&gt; /opt/qte/# set //查看当前的环境变量BASH=/bin/bashBASH_ARGC=()BASH_ARGV=()……省略部分内容PROMPT_COMMAND=&apos;echo -ne &quot;33]0;$&#123;USER&#125;@$&#123;HOSTNAME%%.*&#125;:$&#123;PWD/#$HOME/~&#125;07&quot;&apos;PS1=&apos;[u@h W]$ &apos;PS2=&apos;&gt; &apos;PS4=&apos;+ &apos;PWD=/rootQTDIR=/usr/lib/qt-3.3SHELL=/bin/bashSSH_TTY=/dev/pts/4SUPPORTED=zh_CN.UTF-8:zh_CN:zh:en_US.UTF-8:en_US:enSYSFONT=latarcyrheb-sun16TERM=xtermUID=0USER=root_=-lhlx=&apos;ls -lh&apos;# unset lx //删除环境变量# set //显示当前环境变量BASH=/bin/bashBASH_ARGC=()BASH_ARGV=()……省略部分内容PROMPT_COMMAND=&apos;echo -ne &quot;33]0;$&#123;USER&#125;@$&#123;HOSTNAME%%.*&#125;:$&#123;PWD/#$HOME/~&#125;07&quot;&apos;PS1=&apos;[u@h W]$ &apos;PS2=&apos;&gt; &apos;PS4=&apos;+ &apos;PWD=/rootQTDIR=/usr/lib/qt-3.3SHELL=/bin/bashSSH_TTY=/dev/pts/4SUPPORTED=zh_CN.UTF-8:zh_CN:zh:en_US.UTF-8:en_US:enSYSFONT=latarcyrheb-sun16TERM=xtermUID=0USER=root_=-lh","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"unset","slug":"Linux/系统设置/unset","permalink":"http://yoursite.com/categories/Linux/系统设置/unset/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"unset","slug":"unset","permalink":"http://yoursite.com/tags/unset/"}]},{"title":"Linux-uniq","slug":"Linux-uniq","date":"2019-05-02T01:54:37.240Z","updated":"2019-02-10T16:34:54.000Z","comments":true,"path":"2019/05/02/Linux-uniq/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uniq/","excerpt":"uniq 命令uniq 命令用于检查及删除文本文件中重复出现的行列，一般与sort命令结合使用。uniq 可检查文本文件中重复出现的行列。","text":"uniq 命令uniq 命令用于检查及删除文本文件中重复出现的行列，一般与sort命令结合使用。uniq 可检查文本文件中重复出现的行列。 语法1uniq [-cdu][-f&lt;栏位&gt;][-s&lt;字符位置&gt;][-w&lt;字符位置&gt;][--help][--version][输入文件][输出文件] 参数 -c或–count 在每列旁边显示该行重复出现的次数。 -d或–repeated 仅显示重复出现的行列。 -f&lt;栏位&gt;或–skip-fields=&lt;栏位&gt; 忽略比较指定的栏位。 -s&lt;字符位置&gt;或–skip-chars=&lt;字符位置&gt; 忽略比较指定的字符。 -u或–unique 仅显示出一次的行列。 -w&lt;字符位置&gt;或–check-chars=&lt;字符位置&gt; 指定要比较的字符。 –help 显示帮助。 –version 显示版本信息。 [输入文件] 指定已排序好的文本文件。如果不指定此项，则从标准读取数据； [输出文件] 指定输出的文件。如果不指定此选项，则将内容显示到标准输出设备（显示终端）。 实例文件testfile中第2、3、5、6、7、9行为相同的行，使用uniq命令删除重复的行，使用如下命令：1uniq testfile testfile中的原有的内容为：12345678910$ cat testfile #原有内容 test 30 test 30 test 30 Hello 95 Hello 95 Hello 95 Hello 95 Linux 85 Linux 85 使用uniq 命令删除重复的行后，有如下输出结果：1234$ uniq testfile #删除重复行后的内容 test 30 Hello 95 Linux 85 检查文件并删除文件中重复出现的行，并在行首显示该行重复出现的次数。使用如下命令：1uniq -c testfile 结果输出如下：1234$ uniq -c testfile #删除重复行后的内容 3 test 30 #前面的数字的意义为该行共出现了3次 4 Hello 95 #前面的数字的意义为该行共出现了4次 2 Linux 85 #前面的数字的意义为该行共出现了2次 当重复的行并不相邻时，uniq 命令是不起作用的，即若文件内容为以下时，uniq 命令不起作用：12345678910$ cat testfile1 # 原有内容 test 30 Hello 95 Linux 85 test 30 Hello 95 Linux 85 test 30 Hello 95 Linux 85 这时我们就可以使用 sort：1234$ sort testfile1 | uniqHello 95 Linux 85 test 30 统计各行在文件中出现的次数：1234$ sort testfile1 | uniq -c 3 Hello 95 3 Linux 85 3 test 30 在文件中找出重复的行：1234$ sort testfile1 | uniq -dHello 95 Linux 85 test 30","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"uniq","slug":"Linux/文档编辑/uniq","permalink":"http://yoursite.com/categories/Linux/文档编辑/uniq/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"uniq","slug":"uniq","permalink":"http://yoursite.com/tags/uniq/"}]},{"title":"Linux-unarj","slug":"Linux-unarj","date":"2019-05-02T01:54:37.233Z","updated":"2019-03-02T05:02:29.000Z","comments":true,"path":"2019/05/02/Linux-unarj/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-unarj/","excerpt":"unarj 命令unarj 命令用于解压缩.arj文件。","text":"unarj 命令unarj 命令用于解压缩.arj文件。unarj为.arj压缩文件的压缩程序。 语法1unarj [eltx][.arj压缩文件] 参数 e 解压缩.arj文件。 l 显示压缩文件内所包含的文件。 t 检查压缩文件是否正确。 x 解压缩时保留原有的路径。 实例解压.arj文件1# unarj e test.arj","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"unarj","slug":"Linux/备份压缩/unarj","permalink":"http://yoursite.com/categories/Linux/备份压缩/unarj/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"unarj","slug":"unarj","permalink":"http://yoursite.com/tags/unarj/"}]},{"title":"Linux-uname","slug":"Linux-uname","date":"2019-05-02T01:54:37.226Z","updated":"2019-02-27T04:43:26.000Z","comments":true,"path":"2019/05/02/Linux-uname/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-uname/","excerpt":"uname 命令uname 命令用于显示系统信息。","text":"uname 命令uname 命令用于显示系统信息。uname可显示电脑以及操作系统的相关信息。 语法1uname [-amnrsv][--help][--version] 参数 -a或–all 显示全部的信息。 -m或–machine 显示电脑类型。 -n或-nodename 显示在网络上的主机名称。 -r或–release 显示操作系统的发行编号。 -s或–sysname 显示操作系统名称。 -v 显示操作系统的版本。 –help 显示帮助。 –version 显示版本信息。 实例显示系统信息1uname -a 显示计算机类型1uname -m 显示计算机名1uname -n 显示操作系统发行编号1uname -r 显示操作系统名称1uname -s 显示系统时间1uname -v","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"uname","slug":"Linux/系统管理/uname","permalink":"http://yoursite.com/categories/Linux/系统管理/uname/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"uname","slug":"uname","permalink":"http://yoursite.com/tags/uname/"}]},{"title":"Linux-unalias","slug":"Linux-unalias","date":"2019-05-02T01:54:37.219Z","updated":"2019-03-01T12:50:42.000Z","comments":true,"path":"2019/05/02/Linux-unalias/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-unalias/","excerpt":"unalias 命令unalias 命令用于删除别名。","text":"unalias 命令unalias 命令用于删除别名。unalias为shell内建指令，可删除别名设置。 语法1unalias [-a][别名] 参数 -a 删除全部的别名。 实例给命令设置别名123# alias lx=ls# lxanaconda-ks.cfg Desktop install.log install.log.syslog qte 删除别名12345# alias lx //显示别名alias lx=&apos;ls&apos;# unalias lx //删除别名# lx-bash: lx: command not found","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"unalias","slug":"Linux/系统设置/unalias","permalink":"http://yoursite.com/categories/Linux/系统设置/unalias/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"unalias","slug":"unalias","permalink":"http://yoursite.com/tags/unalias/"}]},{"title":"Linux-umount","slug":"Linux-umount","date":"2019-05-02T01:54:37.212Z","updated":"2019-02-13T14:39:43.000Z","comments":true,"path":"2019/05/02/Linux-umount/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-umount/","excerpt":"umount 命令umount 命令用于卸除文件系统。umount可卸除目前挂在Linux目录中的文件系统。","text":"umount 命令umount 命令用于卸除文件系统。umount可卸除目前挂在Linux目录中的文件系统。 语法1umount [-ahnrvV][-t &lt;文件系统类型&gt;][文件系统] 参数 -a 卸除/etc/mtab中记录的所有文件系统。 -h 显示帮助。 -n 卸除时不要将信息存入/etc/mtab文件中。 -r 若无法成功卸除，则尝试以只读的方式重新挂入文件系统。 -t&lt;文件系统类型&gt; 仅卸除选项中所指定的文件系统。 -v 执行时显示详细的信息。 -V 显示版本信息。 [文件系统] 除了直接指定文件系统外，也可以用设备名称或挂入点来表示文件系统。 实例分别通过设备名和挂载名卸载文件系统，同时输出详细信息：1234# umount -v /dev/sda1 通过设备名卸载 /dev/sda1 umounted # umount -v /mnt/mymount/ 通过挂载点卸载 /tmp/diskboot.img umounted 如果设备正忙，卸载即告失败。卸载失败的常见原因是，某个打开的shell当前目录为挂载点里的某个目录：123# umount -v /mnt/mymount/ umount: /mnt/mymount: device is busy umount: /mnt/mymount: device is busy","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"umount","slug":"Linux/磁盘管理/umount","permalink":"http://yoursite.com/categories/Linux/磁盘管理/umount/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"umount","slug":"umount","permalink":"http://yoursite.com/tags/umount/"}]},{"title":"Linux-umask","slug":"Linux-umask","date":"2019-05-02T01:54:37.206Z","updated":"2019-02-06T19:26:44.000Z","comments":true,"path":"2019/05/02/Linux-umask/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-umask/","excerpt":"umask 命令umask 命令指定在建立文件时预设的权限掩码。umask可用来设定[权限掩码]。[权限掩码]是由3个八进制的数字所组成，将现有的存取权限减掉权限掩码后，即可产生建立文件时预设的权限。","text":"umask 命令umask 命令指定在建立文件时预设的权限掩码。umask可用来设定[权限掩码]。[权限掩码]是由3个八进制的数字所组成，将现有的存取权限减掉权限掩码后，即可产生建立文件时预设的权限。 语法1umask [-S][权限掩码] 参数 -S 以文字的方式来表示权限掩码。 实例使用指令“umask”查看当前权限掩码1umask","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"umask","slug":"Linux/文件管理/umask","permalink":"http://yoursite.com/categories/Linux/文件管理/umask/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"umask","slug":"umask","permalink":"http://yoursite.com/tags/umask/"}]},{"title":"Linux-ulimit","slug":"Linux-ulimit","date":"2019-05-02T01:54:37.199Z","updated":"2019-03-01T12:06:36.000Z","comments":true,"path":"2019/05/02/Linux-ulimit/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ulimit/","excerpt":"ulimit 命令ulimit 命令用于控制shell程序的资源。","text":"ulimit 命令ulimit 命令用于控制shell程序的资源。ulimit为shell内建指令，可用来控制shell执行程序的资源。 语法1ulimit [-aHS][-c &lt;core文件上限&gt;][-d &lt;数据节区大小&gt;][-f &lt;文件大小&gt;][-m &lt;内存大小&gt;][-n &lt;文件数目&gt;][-p &lt;缓冲区大小&gt;][-s &lt;堆叠大小&gt;][-t &lt;CPU时间&gt;][-u &lt;程序数目&gt;][-v &lt;虚拟内存大小&gt;] 参数 -a 显示目前资源限制的设定。 -c &lt; core文件上限 &gt; 设定core文件的最大值，单位为区块。 -d &lt;数据节区大小&gt; 程序数据节区的最大值，单位为KB。 -f &lt;文件大小&gt; shell所能建立的最大文件，单位为区块。 -H 设定资源的硬性限制，也就是管理员所设下的限制。 -m &lt;内存大小&gt; 指定可使用内存的上限，单位为KB。 -n &lt;文件数目&gt; 指定同一时间最多可开启的文件数。 -p &lt;缓冲区大小&gt; 指定管道缓冲区的大小，单位512字节。 -s &lt;堆叠大小&gt; 指定堆叠的上限，单位为KB。 -S 设定资源的弹性限制。 -t &lt;CPU时间&gt; 指定CPU使用时间的上限，单位为秒。 -u &lt;程序数目&gt; 用户最多可开启的程序数目。 -v &lt;虚拟内存大小&gt; 指定可使用的虚拟内存上限，单位为KB。 实例显示系统资源的设置123456789101112131415# ulimit -acore file size (blocks, -c) 0data seg size (kbytes, -d) unlimitedfile size (blocks, -f) unlimitedpending signals (-i) 1024max locked memory (kbytes, -l) 32max memory size (kbytes, -m) unlimitedopen files (-n) 1024pipe size (512 bytes, -p) 8POSIX message queues (bytes, -q) 819200stack size (kbytes, -s) 10240cpu time (seconds, -t) unlimitedmax user processes (-u) 4096virtual memory (kbytes, -v) unlimitedfile locks (-x) unlimited 设置单一用户程序数目上限12345678910111213141516# ulimit -u 500 //设置单一用户程序上限# ulimit -acore file size (blocks, -c) 0data seg size (kbytes, -d) unlimitedfile size (blocks, -f) unlimitedpending signals (-i) 1024max locked memory (kbytes, -l) 32max memory size (kbytes, -m) unlimitedopen files (-n) 1024pipe size (512 bytes, -p) 8POSIX message queues (bytes, -q) 819200stack size (kbytes, -s) 10240cpu time (seconds, -t) unlimitedmax user processes (-u) 500virtual memory (kbytes, -v) unlimitedfile locks (-x) unlimited","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"ulimit","slug":"Linux/系统设置/ulimit","permalink":"http://yoursite.com/categories/Linux/系统设置/ulimit/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"ulimit","slug":"ulimit","permalink":"http://yoursite.com/tags/ulimit/"}]},{"title":"Linux-tty","slug":"Linux-tty","date":"2019-05-02T01:54:37.192Z","updated":"2019-02-20T07:13:05.000Z","comments":true,"path":"2019/05/02/Linux-tty/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tty/","excerpt":"tty 命令tty 命令用于显示终端机连接标准输入设备的文件名称。在Linux操作系统中，所有外围设备都有其名称与代号，这些名称代号以特殊文件的类型存放于/dev目录下。你可以执行tty(teletypewriter)指令查询目前使用的终端机的文件名称。","text":"tty 命令tty 命令用于显示终端机连接标准输入设备的文件名称。在Linux操作系统中，所有外围设备都有其名称与代号，这些名称代号以特殊文件的类型存放于/dev目录下。你可以执行tty(teletypewriter)指令查询目前使用的终端机的文件名称。 语法1tty [-s][--help][--version] 参数 -s或–silent或–quiet 不显示任何信息，只回传状态代码。 –help 在线帮助。 –version 显示版本信息。 实例显示当前终端12# tty/dev/pts/4","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"tty","slug":"Linux/网络通讯/tty","permalink":"http://yoursite.com/categories/Linux/网络通讯/tty/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"tty","slug":"tty","permalink":"http://yoursite.com/tags/tty/"}]},{"title":"Linux-tree","slug":"Linux-tree","date":"2019-05-02T01:54:37.185Z","updated":"2019-02-13T14:34:17.000Z","comments":true,"path":"2019/05/02/Linux-tree/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tree/","excerpt":"tree 命令tree 命令用于以树状图列出目录的内容。执行tree指令，它会列出指定目录下的所有文件，包括子目录里的文件。","text":"tree 命令tree 命令用于以树状图列出目录的内容。执行tree指令，它会列出指定目录下的所有文件，包括子目录里的文件。 语法1tree [-aACdDfFgilnNpqstux][-I &lt;范本样式&gt;][-P &lt;范本样式&gt;][目录...] 参数 -a 显示所有文件和目录。 -A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。 -C 在文件和目录清单加上色彩，便于区分各种类型。 -d 显示目录名称而非内容。 -D 列出文件或目录的更改时间。 -f 在每个文件或目录之前，显示完整的相对路径名称。 -F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”/“,”=”,”@”,”|”号。 -g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。 -i 不以阶梯状列出文件或目录名称。 -I&lt;范本样式&gt; 不显示符合范本样式的文件或目录名称。 -l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。 -n 不在文件和目录清单加上色彩。 -N 直接列出文件和目录名称，包括控制字符。 -p 列出权限标示。 -P&lt;范本样式&gt; 只显示符合范本样式的文件或目录名称。 -q 用”?”号取代控制字符，列出文件和目录名称。 -s 列出文件或目录大小。 -t 用文件和目录的更改时间排序。 -u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。 -x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。 实例以树状图列出当前目录结构1tree 输出结果：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859# tree #以树状图列出当前目录结构 . #当前目录结构 |-- README |-- examples.desktop |-- file |-- file.new |-- index.htm |-- test | |-- README | |-- file | |-- testfile | |-- testfile1 | |-- xaa | |-- xab | |-- xac | |-- xad | |-- xae | |-- xaf | |-- xag | |-- xah | `-- xai |-- test.tar.gz |-- test.zip |-- testfile |-- testfile.new |-- testfile.patch |-- testfile1 |-- testfile2 |-- testfile3 |-- xaa |-- xab |-- xac |-- xad |-- xae |-- xaf |-- xag |-- xah |-- xai |-- \\345\\205\\254\\345\\205\\261\\347\\232\\204 |-- \\345\\233\\276\\347\\211\\207 | |-- 075b5c2bb1628c1a5343c10a.jpg | |-- 0c978fe989ac787e799757095719d3c4.jpg | |-- 20050726194826866443.jpg | |-- 20061113171548785122.jpg | |-- 2007102221576687.jpg | |-- 39.jpg | |-- 434887ec4340916a78f0559a.jpg | |-- 498da016ac02fb2bc93d6d08.jpg | |-- 7b284f5a0f854da2f3bf90b204149a34.jpg | |-- 9196c030d342a68d5edf0e98.jpg | |-- a56c5a90de15c8a9a977a4cc.jpg | |-- c74f62167c9d2b244a90a79e.jpg | `-- img13.jpg |-- \\346\\226\\207\\346\\241\\243 |-- \\346\\241\\214\\351\\235\\242 |-- \\346\\250\\241\\346\\235\\277 |-- \\350\\247\\206\\351\\242\\221 `-- \\351\\237\\263\\344\\271\\220 8 directories, 48 files #统计信息，该目录共8个子目录，48个文件","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"tree","slug":"Linux/磁盘管理/tree","permalink":"http://yoursite.com/categories/Linux/磁盘管理/tree/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"tree","slug":"tree","permalink":"http://yoursite.com/tags/tree/"}]},{"title":"Linux-traceroute","slug":"Linux-traceroute","date":"2019-05-02T01:54:37.178Z","updated":"2019-02-20T07:11:15.000Z","comments":true,"path":"2019/05/02/Linux-traceroute/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-traceroute/","excerpt":"traceroute 命令traceroute 命令用于显示数据包到主机间的路径。traceroute指令让你追踪到网络数据包的路由途径，预设数据包大小是40Bytes，用户可另行设置。","text":"traceroute 命令traceroute 命令用于显示数据包到主机间的路径。traceroute指令让你追踪到网络数据包的路由途径，预设数据包大小是40Bytes，用户可另行设置。 语法1traceroute [-dFlnrvx][-f&lt;存活数值&gt;][-g&lt;网关&gt;...][-i&lt;网络界面&gt;][-m&lt;存活数值&gt;][-p&lt;通信端口&gt;][-s&lt;来源地址&gt;][-t&lt;服务类型&gt;][-w&lt;超时秒数&gt;][主机名称或IP地址][数据包大小] 参数 -d 使用Socket层级的排错功能。 -f&lt;存活数值&gt; 设置第一个检测数据包的存活数值TTL的大小。 -F 设置勿离断位。 -g&lt;网关&gt; 设置来源路由网关，最多可设置8个。 -i&lt;网络界面&gt; 使用指定的网络界面送出数据包。 -I 使用ICMP回应取代UDP资料信息。 -m&lt;存活数值&gt; 设置检测数据包的最大存活数值TTL的大小。 -n 直接使用IP地址而非主机名称。 -p&lt;通信端口&gt; 设置UDP传输协议的通信端口。 -r 忽略普通的Routing Table，直接将数据包送到远端主机上。 -s&lt;来源地址&gt; 设置本地主机送出数据包的IP地址。 -t&lt;服务类型&gt; 设置检测数据包的TOS数值。 -v 详细显示指令的执行过程。 -w&lt;超时秒数&gt; 设置等待远端主机回报的时间。 -x 开启或关闭数据包的正确性检验。 实例显示到达目的地的数据包路由12345678910111213141516171819# traceroute www.google.comtraceroute: Warning: www.google.com has multiple addresses; using 66.249.89.99traceroute to www.l.google.com (66.249.89.99), 30 hops max, 38 byte packets1 192.168.0.1 (192.168.0.1) 0.653 ms 0.846 ms 0.200 ms2 118.250.4.1 (118.250.4.1) 36.610 ms 58.438 ms 55.146 ms3 222.247.28.177 (222.247.28.177) 54.809 ms 39.879 ms 19.186 ms4 61.187.255.253 (61.187.255.253) 18.033 ms 49.699 ms 72.147 ms5 61.137.2.177 (61.137.2.177) 32.912 ms 72.947 ms 41.809 ms6 202.97.46.5 (202.97.46.5) 60.436 ms 25.527 ms 40.023 ms7 202.97.35.69 (202.97.35.69) 40.049 ms 66.091 ms 44.358 ms8 202.97.35.110 (202.97.35.110) 42.140 ms 70.913 ms 41.144 ms9 202.97.35.14 (202.97.35.14) 116.929 ms 57.081 ms 60.336 ms10 202.97.60.34 (202.97.60.34) 54.871 ms 69.302 ms 64.353 ms11 * * *12 209.85.255.80 (209.85.255.80) 95.954 ms 79.844 ms 76.052 ms MPLS Label=385825 CoS=5 TTL=1 S=013 209.85.249.195 (209.85.249.195) 118.687 ms 120.905 ms 113.936 ms14 72.14.236.126 (72.14.236.126) 115.843 ms 137.109 ms 186.491 ms15 nrt04s01-in-f99.1e100.net (66.249.89.99) 168.024 ms 140.551 ms 161.127 ms","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"traceroute","slug":"Linux/网络通讯/traceroute","permalink":"http://yoursite.com/categories/Linux/网络通讯/traceroute/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"traceroute","slug":"traceroute","permalink":"http://yoursite.com/tags/traceroute/"}]},{"title":"Linux-tr","slug":"Linux-tr","date":"2019-05-02T01:54:37.168Z","updated":"2019-02-10T16:24:29.000Z","comments":true,"path":"2019/05/02/Linux-tr/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tr/","excerpt":"tr 命令tr 命令用于转换或删除文件中的字符。tr指令从标准输入设备读取数据，经过字符串转译后，将结果输出到标准输出设备。","text":"tr 命令tr 命令用于转换或删除文件中的字符。tr指令从标准输入设备读取数据，经过字符串转译后，将结果输出到标准输出设备。 语法12tr [-cdst][--help][--version][第一字符集][第二字符集] tr [OPTION]…SET1[SET2] 参数 -c, –complement：反选设定字符。也就是符合 SET1 的部份不做处理，不符合的剩余部份才进行转换 -d, –delete：删除指令字符 -s, –squeeze-repeats：缩减连续重复的字符成指定的单个字符 -t, –truncate-set1：削减 SET1 指定范围，使之与 SET2 设定长度相等 –help：显示程序用法信息 –version：显示程序本身的版本信息字符集合的范围： \\NNN 八进制值的字符 NNN (1 to 3 为八进制值的字符) \\ 反斜杠 \\a Ctrl-G 铃声 \\b Ctrl-H 退格符 \\f Ctrl-L 走行换页 \\n Ctrl-J 新行 \\r Ctrl-M 回车 \\t Ctrl-I tab键 \\v Ctrl-X 水平制表符 CHAR1-CHAR2 ：字符范围从 CHAR1 到 CHAR2 的指定，范围的指定以 ASCII 码的次序为基础，只能由小到大，不能由大到小。 [CHAR*] ：这是 SET2 专用的设定，功能是重复指定的字符到与 SET1 相同长度为止 [CHAR*REPEAT] ：这也是 SET2 专用的设定，功能是重复指定的字符到设定的 REPEAT 次数为止(REPEAT 的数字采 8 进位制计算，以 0 为开始) [:alnum:] ：所有字母字符与数字 [:alpha:] ：所有字母字符 [:blank:] ：所有水平空格 [:cntrl:] ：所有控制字符 [:digit:] ：所有数字 [:graph:] ：所有可打印的字符(不包含空格符) [:lower:] ：所有小写字母 [:print:] ：所有可打印的字符(包含空格符) [:punct:] ：所有标点字符 [:space:] ：所有水平与垂直空格符 [:upper:] ：所有大写字母 [:xdigit:] ：所有 16 进位制的数字 [=CHAR=] ：所有符合指定的字符(等号里的 CHAR，代表你可自订的字符) 实例将文件testfile中的小写字母全部转换成大写字母1cat testfile |tr a-z A-Z testfile文件中的内容如下：1234567891011121314$ cat testfile #testfile原来的内容 Linux networks are becoming more and more common, but scurity is often an overlooked issue. Unfortunately, in today’s environment all networks are potential hacker targets, fro0m tp-secret military research networks to small home LANs. Linux Network Securty focuses on securing Linux in a networked environment, where the security of the entire network needs to be consideredrather than just isolated machines. It uses a mix of theory and practicl techniques to teach administrators how to install and use security applications, as well as how the applcations work and why they are necesary. 使用tr命令大小写转换后，输出结果如下：12345678$ cat testfile | tr a-z A-Z #转换后的输出 LINUX NETWORKS ARE BECOMING MORE AND MORE COMMON, BUT SCURITY IS OFTEN AN OVERLOOKED ISSUE. UNFORTUNATELY, IN TODAY’S ENVIRONMENT ALL NETWORKS ARE POTENTIAL HACKER TARGETS, FROM TP-SECRET MILITARY RESEARCH NETWORKS TO SMALL HOME LANS. LINUX NETWORK SECURTY FOCUSES ON SECURING LINUX IN A NETWORKED ENVIRONMENT, WHERE THE SECURITY OF THE ENTIRE NETWORK NEEDS TO BE CONSIDERED RATHER THAN JUST ISOLATED MACHINES. IT USES A MIX OF THEORY AND PRACTICL TECHNIQUES TO TEACH ADMINISTRATORS HOW TO INSTALL AND USE SECURITY APPLICATIONS, AS WELL AS HOW THE APPLCATIONS WORK AND WHY THEY ARE NECESARY. 大小写转换，也可以通过[:lower][:upper]参数来实现。例如使用如下命令：1cat testfile |tr [:lower:] [:upper:] 输出结果如下：12345678$ cat testfile | tr [:lower:] [:upper:] #转换后的输出 LINUX NETWORKS ARE BECOMING MORE AND MORE COMMON, BUT SCURITY IS OFTEN AN OVERLOOKED ISSUE. UNFORTUNATELY, IN TODAY’S ENVIRONMENT ALL NETWORKS ARE POTENTIAL HACKER TARGETS, FROM TP-SECRET MILITARY RESEARCH NETWORKS TO SMALL HOME LANS. LINUX NETWORK SECURTY FOCUSES ON SECURING LINUX IN A NETWORKED ENVIRONMENT, WHERE THE SECURITY OF THE ENTIRE NETWORK NEEDS TO BE CONSIDERED RATHER THAN JUST ISOLATED MACHINES. IT USES A MIX OF THEORY AND PRACTICL TECHNIQUES TO TEACH ADMINISTRATORS HOW TO INSTALL AND USE SECURITY APPLICATIONS, AS WELL AS HOW THE APPLCATIONS WORK AND WHY THEY ARE NECESARY.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"tr","slug":"Linux/文档编辑/tr","permalink":"http://yoursite.com/categories/Linux/文档编辑/tr/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"tr","slug":"tr","permalink":"http://yoursite.com/tags/tr/"}]},{"title":"Linux-touch","slug":"Linux-touch","date":"2019-05-02T01:54:37.160Z","updated":"2019-02-06T19:18:44.000Z","comments":true,"path":"2019/05/02/Linux-touch/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-touch/","excerpt":"touch 命令touch 命令用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件。ls -l 可以显示档案的时间记录。","text":"touch 命令touch 命令用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件。ls -l 可以显示档案的时间记录。 语法1touch [-acfm][-d&lt;日期时间&gt;][-r&lt;参考文件或目录&gt;] [-t&lt;日期时间&gt;][--help][--version][文件或目录…] 参数 a 改变档案的读取时间记录。 m 改变档案的修改时间记录。 c 假如目的档案不存在，不会建立新的档案。与 –no-create 的效果一样。 f 不使用，是为了与其他 unix 系统的相容性而保留。 r 使用参考档的时间记录，与 –file 的效果一样。 d 设定时间与日期，可以使用各种不同的格式。 t 设定档案的时间记录，格式与 date 指令相同。 –no-create 不会建立新档案。 –help 列出指令格式。 –version 列出版本讯息。 实例使用指令“touch”修改文件“testfile”的时间属性为当前系统时间1touch testfile #修改文件的时间属性","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"touch","slug":"Linux/文件管理/touch","permalink":"http://yoursite.com/categories/Linux/文件管理/touch/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"touch","slug":"touch","permalink":"http://yoursite.com/tags/touch/"}]},{"title":"Linux-top","slug":"Linux-top","date":"2019-05-02T01:54:37.155Z","updated":"2019-02-27T03:00:34.000Z","comments":true,"path":"2019/05/02/Linux-top/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-top/","excerpt":"top 命令top 命令用于实时显示process的动态。使用权限：所有使用者。","text":"top 命令top 命令用于实时显示process的动态。使用权限：所有使用者。 语法1top [-] [d delay] [q] [c] [S] [s] [i] [n] [b] 参数 d : 改变显示的更新速度，或是在交谈式指令列( interactive command)按 s q : 没有任何延迟的显示速度，如果使用者是有 superuser 的权限，则 top 将会以最高的优先序执行 c : 切换显示模式，共有两种模式，一是只显示执行档的名称，另一种是显示完整的路径与名称S : 累积模式，会将己完成或消失的子行程 ( dead child process ) 的 CPU time 累积起来 s : 安全模式，将交谈式指令取消, 避免潜在的危机 i : 不显示任何闲置 (idle) 或无用 (zombie) 的行程 n : 更新的次数，完成后将会退出 top b : 批次档模式，搭配 “n” 参数一起使用，可以用来将 top 的结果输出到档案内 实例显示进程信息1top 显示完整命令1top -c 以批处理模式显示程序信息1top -b 以累积模式显示程序信息1top -S 设置信息更新次数12top -n 2//表示更新两次后终止显示 设置信息更新时间12top -d 3//表示更新周期为3秒 显示指定的进程信息12top -p 133//显示进程号为133的进程信息，CPU、内存占用率等 显示更新十次后退出1top -n 10 使用者将不能利用交谈式指令对行程下命令1top -s 将更新显示二次的结果输入到名称为top.log的档案里1top -n 2 -b &lt; top.log","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"top","slug":"Linux/系统管理/top","permalink":"http://yoursite.com/categories/Linux/系统管理/top/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"top","slug":"top","permalink":"http://yoursite.com/tags/top/"}]},{"title":"Linux-tmpwatch","slug":"Linux-tmpwatch","date":"2019-05-02T01:54:37.147Z","updated":"2019-02-06T19:04:35.000Z","comments":true,"path":"2019/05/02/Linux-tmpwatch/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tmpwatch/","excerpt":"tmpwatch 命令tmpwatch 命令用于删除暂存文件。执行tmpwatch指令可删除不必要的暂存文件，您可以设置文件超期时间，单位一小时计算。","text":"tmpwatch 命令tmpwatch 命令用于删除暂存文件。执行tmpwatch指令可删除不必要的暂存文件，您可以设置文件超期时间，单位一小时计算。 语法1tmpwatch [-afqv][--test][超期时间][目录...] 参数 -a或–all 删除任何类型的文件。 -f或–force 强制删除文件或目录，其效果类似rm指令的”-f”参数。 -q或–quiet 不显示指令执行过程。 -v或–verbose 详细显示指令执行过程。 -test 仅作测试，并不真的删除文件或目录。 实例使用指令“tmpwatch”删除目录“/tmp”中超过一天未使用的文件1tmpwatch 24 /tmp/ #删除/tmp目录中超过一天未使用的文件 以上命令执行成功后，结果如下：1removing directctmp/orbit-tom if not empty 注：该命令需要root权限，因此在使用该命令前应该使用管理员权限。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"tmpwatch","slug":"Linux/文件管理/tmpwatch","permalink":"http://yoursite.com/categories/Linux/文件管理/tmpwatch/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"tmpwatch","slug":"tmpwatch","permalink":"http://yoursite.com/tags/tmpwatch/"}]},{"title":"Linux-tload","slug":"Linux-tload","date":"2019-05-02T01:54:37.141Z","updated":"2019-02-27T04:33:05.000Z","comments":true,"path":"2019/05/02/Linux-tload/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tload/","excerpt":"tload 命令tload 命令用于显示系统负载状况。","text":"tload 命令tload 命令用于显示系统负载状况。tload指令使用ASCII字符简单地以文字模式显示系统负载状态。假设不给予终端机编号，则会在执行tload指令的终端机显示负载情形。 语法1tload [-V][-d &lt;间隔秒数&gt;][-s &lt;刻度大小&gt;][终端机编号] 参数 -d&lt;间隔秒数&gt; 设置tload检测系统负载的间隔时间，单位以秒计算。 -s&lt;刻度大小&gt; 设置图表的垂直刻度大小，单位以列计算。 -V 显示版本信息。 实例显示系统负载1tload","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"tload","slug":"Linux/系统管理/tload","permalink":"http://yoursite.com/categories/Linux/系统管理/tload/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"tload","slug":"tload","permalink":"http://yoursite.com/tags/tload/"}]},{"title":"Linux-timeconfig","slug":"Linux-timeconfig","date":"2019-05-02T01:54:37.133Z","updated":"2019-03-01T12:02:14.000Z","comments":true,"path":"2019/05/02/Linux-timeconfig/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-timeconfig/","excerpt":"timeconfig 命令timeconfig 命令用于设置十区。","text":"timeconfig 命令timeconfig 命令用于设置十区。这是Red Hat公司遵循GPL规则所开发的程序，它具有互动式操作界面，您可以轻易地利用方向键和空格键等，设置系统时间所属的时区。 语法1timeconfig [--arc][--back][--test][--utc][时区名称] 参数 –arc 使用Alpha硬件结构的格式存储系统时间。 –back 在互动式界面里，显示Back钮而非Cancel钮。 –test 仅作测试，并不真的改变系统的时区。 –utc 把硬件时钟上的时间视为CUT，有时也称为UTC或UCT。 实例设置时区1timeconfig","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"timeconfig","slug":"Linux/系统设置/timeconfig","permalink":"http://yoursite.com/categories/Linux/系统设置/timeconfig/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"timeconfig","slug":"timeconfig","permalink":"http://yoursite.com/tags/timeconfig/"}]},{"title":"Linux-time","slug":"Linux-time","date":"2019-05-02T01:54:37.127Z","updated":"2019-03-01T09:52:14.000Z","comments":true,"path":"2019/05/02/Linux-time/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-time/","excerpt":"time 命令time 命令的用途，在于量测特定指令执行时所需消耗的时间及系统资源等资讯。","text":"time 命令time 命令的用途，在于量测特定指令执行时所需消耗的时间及系统资源等资讯。例如 CPU 时间、记忆体、输入输出等等。需要特别注意的是，部分资讯在 Linux 上显示不出来。这是因为在 Linux 上部分资源的分配函式与 time 指令所预设的方式并不相同，以致于 time 指令无法取得这些资料。 语法1time [options] COMMAND [arguments] 参数 -o 或 –output=FILE：设定结果输出档。这个选项会将 time 的输出写入 所指定的档案中。如果档案已经存在，系统将覆写其内容。 -a 或 –append：配合 -o 使用，会将结果写到档案的末端，而不会覆盖掉原来的内容。 -f FORMAT 或 –format=FORMAT：以 FORMAT 字串设定显示方式。当这个选项没有被设定的时候，会用系统预设的格式。不过你可以用环境变数 time 来设定这个格式，如此一来就不必每次登入系统都要设定一次。 time 指令可以显示的资源有四大项，分别是： Time resources Memory resources IO resources Command info 详细的内容如下：1、Time Resources E 执行指令所花费的时间，格式是：[hour]:minute:second。请注意这个数字并不代表实际的 CPU 时间。 e 执行指令所花费的时间，单位是秒。请注意这个数字并不代表实际的 CPU 时间。 S 指令执行时在核心模式（kernel mode）所花费的时间，单位是秒。 U 指令执行时在使用者模式（user mode）所花费的时间，单位是秒。 P 执行指令时 CPU 的占用比例。其实这个数字就是核心模式加上使用者模式的 CPU 时间除以总时间。 2、Memory Resources M 执行时所占用的实体记忆体的最大值。单位是 KB t 执行时所占用的实体记忆体的平均值，单位是 KB K 执行程序所占用的记忆体总量（stack+data+text）的平均大小，单位是 KB D 执行程序的自有资料区（unshared data area）的平均大小，单位是 KB p 执行程序的自有堆叠（unshared stack）的平均大小，单位是 KB X 执行程序间共享内容（shared text）的平均值，单位是 KB Z 系统记忆体页的大小，单位是 byte。对同一个系统来说这是个常数 3、IO Resources F 此程序的主要记忆体页错误发生次数。所谓的主要记忆体页错误是指某一记忆体页已经置换到置换档（swap file)中，而且已经分配给其他程序。此时该页的内容必须从置换档里再读出来。 R 此程序的次要记忆体页错误发生次数。所谓的次要记忆体页错误是指某一记忆体页虽然已经置换到置换档中，但尚未分配给其他程序。此时该页的内容并未被破坏，不必从置换档里读出来 W 此程序被交换到置换档的次数 c 此程序被强迫中断（像是分配到的 CPU 时间耗尽）的次数 w 此程序自愿中断（像是在等待某一个 I/O 执行完毕，像是磁碟读取等等）的次数 I 此程序所输入的档案数 O 此程序所输出的档案数 r 此程序所收到的 Socket Message s 此程序所送出的 Socket Message k 此程序所收到的信号 ( Signal )数量 4、Command Info C 执行时的参数以及指令名称 x 指令的结束代码 ( Exit Status ) -p or –portability：这个选项会自动把显示格式设定成为： real %e user %Usys %S：这么做的目的是为了与 POSIX 规格相容。 -v or –verbose：这个选项会把所有程序中用到的资源通通列出来，不但如一般英文语句，还有说明。对不想花时间去熟习格式设定或是刚刚开始接触这个指令的人相当有用。 实例利用下面的指令1time -v ps -aux 我们可以获得执行 ps -aux 的结果和所花费的系统资源。如下面所列的资料：1234567891011121314151617181920212223242526272829USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMANDroot 1 0.0 0.4 1096 472 ? S Apr19 0:04 initroot 2 0.0 0.0 0 0 ? SW Apr19 0:00 [kflushd]root 3 0.0 0.0 0 0 ? SW Apr19 0:00 [kpiod]......root 24269 0.0 1.0 2692 996 pts/3 R 12:16 0:00 ps -auxCommand being timed: &quot;ps -aux&quot;User time (seconds): 0.05System time (seconds): 0.06Percent of CPU this job got: 68%Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.16Average shared text size (kbytes): 0Average unshared data size (kbytes): 0Average stack size (kbytes): 0Average total size (kbytes): 0Maximum resident set size (kbytes): 0Average resident set size (kbytes): 0Major (requiring I/O) page faults: 238Minor (reclaiming a frame) page faults: 46Voluntary context switches: 0Involuntary context switches: 0Swaps: 0File system inputs: 0File system outputs: 0Socket messages sent: 0Socket messages received: 0Signals delivered: 0Page size (bytes): 4096Exit status: 0","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"time","slug":"Linux/系统设置/time","permalink":"http://yoursite.com/categories/Linux/系统设置/time/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"time","slug":"time","permalink":"http://yoursite.com/tags/time/"}]},{"title":"Linux-tftp","slug":"Linux-tftp","date":"2019-05-02T01:54:37.118Z","updated":"2019-02-12T14:26:12.000Z","comments":true,"path":"2019/05/02/Linux-tftp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tftp/","excerpt":"tftp 命令tftp 命令用于传输文件。ftp让用户得以下载存放在远端主机的文件，也能将文件上传到远端主机放置。tftp是简单的文字模式ftp程序，她所使用的指令和ftp类似。","text":"tftp 命令tftp 命令用于传输文件。ftp让用户得以下载存放在远端主机的文件，也能将文件上传到远端主机放置。tftp是简单的文字模式ftp程序，她所使用的指令和ftp类似。 语法1tftp [主机名称或IP地址] 操作说明 connect：连接到远程tftp服务器 mode：文件传输模式 put：上传文件 get：下载文件 quit：退出 verbose：显示详细的处理信息 trace：显示包路径 status：显示当前状态信息 binary：二进制传输模式 ascii：ascii 传送模式 rexmt：设置包传输的超时时间 timeout：设置重传的超时时间 help：帮助信息 ? ：帮助信息 实例连接远程服务器“218.28.188.288”，然后使用put命令下载其中根目录下的文件“README”，命令如下：1tftp 218.28.188.288 连接服务器之后可进行相应的操作，具体如下：1234567891011121314151617181920$ tftp 218.28.188.228 #连接远程服务器 tftp&gt; ? #使用？，参考帮助 Commands may be abbreviated. Commands are: #帮助命令列表 connect connect to remote tftp mode set file transfer mode put send file get receive file quit exit tftp verbose toggle verbose mode trace toggle packet tracing status show current status binary set mode to octet ascii set mode to netascii rexmt set per-packet retransmission timeout timeout set total retransmission timeout ? print help information tftp&gt;get README #远程下载README文件 getting from 218.28.188.288 to /home/cmd Recived 168236 bytes in 1.5 seconds[112157 bit/s] tftp&gt;quit #离开tftp","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"tftp","slug":"Linux/文件传输/tftp","permalink":"http://yoursite.com/categories/Linux/文件传输/tftp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"tftp","slug":"tftp","permalink":"http://yoursite.com/tags/tftp/"}]},{"title":"Linux-testparm","slug":"Linux-testparm","date":"2019-05-02T01:54:37.113Z","updated":"2019-02-20T07:42:29.000Z","comments":true,"path":"2019/05/02/Linux-testparm/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-testparm/","excerpt":"testparm 命令testparm 命令用于测试Samba的设置是否 正确无误。执行testparm(test parameter)指令可以简单测试Samba的配置文件，假如测试结果无误，Samba常驻服务就能正确载入该设置值，但并不保证其后的操作如预期般一切正常。","text":"testparm 命令testparm 命令用于测试Samba的设置是否 正确无误。执行testparm(test parameter)指令可以简单测试Samba的配置文件，假如测试结果无误，Samba常驻服务就能正确载入该设置值，但并不保证其后的操作如预期般一切正常。 语法1testparm [-s][配置文件][&lt;主机名称&gt;&lt;IP地址&gt;] 参数 -s 不显示提示符号等待用户按下Enter键，就直接列出Samba服务定义信息。 实例查看Ssmba配置123456789101112131415161718192021222324252627282930313233343536373839404142434445464748# testparm Load smb config files from /etc/samba/smb.confProcessing section &apos;[homes]&apos;Processing section &apos;[printers]&apos;Processing section &apos;[uptech]&apos;Processing section &apos;[home]&apos;Loaded services file OK.Server role: ROLE_STANDALONEPress enter to see a dump of your service definitions ///按下回车继续# Global parameters[global]workgroup = MYGROUPserver string = Samba Serversecurity = SHAREencrypt passwords = Nopassword server = Nonelog file = /var/log/samba/%m.logmax log size = 50socket options = TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192printcap name = /etc/printcapdns proxy = Noidmap uid = 16777216-33554431idmap gid = 16777216-33554431cups options = raw[homes]comment = Home Directoriesread only = Nobrowseable = No[printers]comment = All Printerspath = /var/spool/sambaprintable = Yesbrowseable = No[uptech]comment = *path = /home/uptechread only = Noguest ok = Yes[home]comment = *path = /homeread only = Noguest ok = Yes","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"testparm","slug":"Linux/网络通讯/testparm","permalink":"http://yoursite.com/categories/Linux/网络通讯/testparm/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"testparm","slug":"testparm","permalink":"http://yoursite.com/tags/testparm/"}]},{"title":"Linux-telnet","slug":"Linux-telnet","date":"2019-05-02T01:54:37.105Z","updated":"2019-02-20T05:58:13.000Z","comments":true,"path":"2019/05/02/Linux-telnet/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-telnet/","excerpt":"telnet 命令telnet 命令用于远端登入。执行telnet指令开启终端机阶段作业，并登入远端主机。","text":"telnet 命令telnet 命令用于远端登入。执行telnet指令开启终端机阶段作业，并登入远端主机。 语法1telnet [-8acdEfFKLrx][-b&lt;主机别名&gt;][-e&lt;脱离字符&gt;][-k&lt;域名&gt;][-l&lt;用户名称&gt;][-n&lt;记录文件&gt;][-S&lt;服务类型&gt;][-X&lt;认证形态&gt;][主机名称或IP地址&lt;通信端口&gt;] 参数 -8 允许使用8位字符资料，包括输入与输出。 -a 尝试自动登入远端系统。 -b&lt;主机别名&gt; 使用别名指定远端主机名称。 -c 不读取用户专属目录里的.telnetrc文件。 -d 启动排错模式。 -e&lt;脱离字符&gt; 设置脱离字符。 -E 滤除脱离字符。 -f 此参数的效果和指定”-F”参数相同。 -F 使用Kerberos V5认证时，加上此参数可把本地主机的认证数据上传到远端主机。 -k&lt;域名&gt; 使用Kerberos认证时，加上此参数让远端主机采用指定的领域名，而非该主机的域名。 -K 不自动登入远端主机。 -l&lt;用户名称&gt; 指定要登入远端主机的用户名称。 -L 允许输出8位字符资料。 -n&lt;记录文件&gt; 指定文件记录相关信息。 -r 使用类似rlogin指令的用户界面。 -S&lt;服务类型&gt; 设置telnet连线所需的IP TOS信息。 -x 假设主机有支持数据加密的功能，就使用它。 -X&lt;认证形态&gt; 关闭指定的认证形态。 实例登录远程主机1telnet 192.168.0.5","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"telnet","slug":"Linux/网络通讯/telnet","permalink":"http://yoursite.com/categories/Linux/网络通讯/telnet/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"telnet","slug":"telnet","permalink":"http://yoursite.com/tags/telnet/"}]},{"title":"Linux-tee","slug":"Linux-tee","date":"2019-05-02T01:54:37.098Z","updated":"2019-02-06T18:59:25.000Z","comments":true,"path":"2019/05/02/Linux-tee/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tee/","excerpt":"tee 命令tee 命令用于读取标准输入的数据，并将其内容输出成文件。tee指令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。","text":"tee 命令tee 命令用于读取标准输入的数据，并将其内容输出成文件。tee指令会从标准输入设备读取数据，将其内容输出到标准输出设备，同时保存成文件。 语法1tee [-ai][--help][--version][文件...] 参数 -a或–append 附加到既有文件的后面，而非覆盖它． -i或–ignore-interrupts 忽略中断信号。 –help 在线帮助。 –version 显示版本信息。 实例使用指令“tee”将用户输入的数据同时保存到问价 “file1”和“file2”中1tee file1 file2 以上命令执行成功后，将用户输入需要保存到文件的数据，如下所示12My Linux #提示用户输入数据 My Linux #输出数据，进行输出反馈 此时，可以分别打开文件“file1”和“file2”，查看其内容是否均是“My Linux”即可判断指令“tee”是否执行成功。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"tee","slug":"Linux/文件管理/tee","permalink":"http://yoursite.com/categories/Linux/文件管理/tee/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"tee","slug":"tee","permalink":"http://yoursite.com/tags/tee/"}]},{"title":"Linux-tcpdump","slug":"Linux-tcpdump","date":"2019-05-02T01:54:37.091Z","updated":"2019-02-20T07:32:22.000Z","comments":true,"path":"2019/05/02/Linux-tcpdump/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tcpdump/","excerpt":"tcpdump 命令tcpdump 命令用于倾倒网络传输数据。执行tcpdump指令可列出经过指定网络界面的数据包文件头，在Linux操作系统中，你必须是系统管理员。","text":"tcpdump 命令tcpdump 命令用于倾倒网络传输数据。执行tcpdump指令可列出经过指定网络界面的数据包文件头，在Linux操作系统中，你必须是系统管理员。 语法1tcpdump [-adeflnNOpqStvx][-c&lt;数据包数目&gt;][-dd][-ddd][-F&lt;表达文件&gt;][-i&lt;网络界面&gt;][-r&lt;数据包文件&gt;][-s&lt;数据包大小&gt;][-tt][-T&lt;数据包类型&gt;][-vv][-w&lt;数据包文件&gt;][输出数据栏位] 参数 -a 尝试将网络和广播地址转换成名称。 -c&lt;数据包数目&gt; 收到指定的数据包数目后，就停止进行倾倒操作。 -d 把编译过的数据包编码转换成可阅读的格式，并倾倒到标准输出。 -dd 把编译过的数据包编码转换成C语言的格式，并倾倒到标准输出。 -ddd 把编译过的数据包编码转换成十进制数字的格式，并倾倒到标准输出。 -e 在每列倾倒资料上显示连接层级的文件头。 -f 用数字显示网际网络地址。 -F&lt;表达文件&gt; 指定内含表达方式的文件。 -i&lt;网络界面&gt; 使用指定的网络截面送出数据包。 -l 使用标准输出列的缓冲区。 -n 不把主机的网络地址转换成名字。 -N 不列出域名。 -O 不将数据包编码最佳化。 -p 不让网络界面进入混杂模式。 -q 快速输出，仅列出少数的传输协议信息。 -r&lt;数据包文件&gt; 从指定的文件读取数据包数据。 -s&lt;数据包大小&gt; 设置每个数据包的大小。 -S 用绝对而非相对数值列出TCP关联数。 -t 在每列倾倒资料上不显示时间戳记。 -tt 在每列倾倒资料上显示未经格式化的时间戳记。 -T&lt;数据包类型&gt; 强制将表达方式所指定的数据包转译成设置的数据包类型。 -v 详细显示指令执行过程。 -vv 更详细显示指令执行过程。 -x 用十六进制字码列出数据包资料。 -w&lt;数据包文件&gt; 把数据包数据写入指定的文件。 实例显示TCP包信息123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# tcpdumptcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on eth0, link-type EN10MB (Ethernet), capture size 96 bytes23:35:55.129998 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 148872068:148872168(100) ack 4184371747 win 210023:35:55.182357 IP 192.168.0.1.2101 &gt; 192.168.0.3.ssh: . ack 100 win 6424023:35:55.182397 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 100:200(100) ack 1 win 210023:35:55.131713 IP 192.168.0.3.32804 &gt; dns2.cs.hn.cn.domain: 50226+ PTR? 1.0.168.192.in-addr.arpa. (42)23:35:55.131896 PPPoE [ses 0x1cb0] IP 118.250.6.85.64215 &gt; dns2.cs.hn.cn.domain: 50226+ PTR? 1.0.168.192.in-addr.arpa. (42)23:35:55.154238 PPPoE [ses 0x1cb0] IP dns2.cs.hn.cn.domain &gt; 118.250.6.85.64215: 50226 NXDomain 0/0/0 (42)23:35:55.156298 IP dns2.cs.hn.cn.domain &gt; 192.168.0.3.32804: 50226 NXDomain 0/0/0 (42)23:35:55.159292 IP 192.168.0.3.32804 &gt; dns2.cs.hn.cn.domain: 30304+ PTR? 3.0.168.192.in-addr.arpa. (42)23:35:55.159449 PPPoE [ses 0x1cb0] IP 118.250.6.85.64215 &gt; dns2.cs.hn.cn.domain: 30304+ PTR? 3.0.168.192.in-addr.arpa. (42)23:35:55.179816 PPPoE [ses 0x1cb0] IP dns2.cs.hn.cn.domain &gt; 118.250.6.85.64215: 30304 NXDomain 0/0/0 (42)23:35:55.181279 IP dns2.cs.hn.cn.domain &gt; 192.168.0.3.32804: 30304 NXDomain 0/0/0 (42)23:35:55.181806 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 200:268(68) ack 1 win 210023:35:55.182177 IP 192.168.0.1.2101 &gt; 192.168.0.3.ssh: . ack 268 win 6419823:35:55.182677 IP 192.168.0.3.32804 &gt; dns2.cs.hn.cn.domain: 43983+ PTR? 112.96.103.202.in-addr.arpa. (45)23:35:55.182807 PPPoE [ses 0x1cb0] IP 118.250.6.85.64215 &gt; dns2.cs.hn.cn.domain: 43983+ PTR? 112.96.103.202.in-addr.arpa. (45)23:35:55.183055 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 268:352(84) ack 1 win 210023:35:55.201096 PPPoE [ses 0x1cb0] IP dns2.cs.hn.cn.domain &gt; 118.250.6.85.64215: 43983 1/0/0 (72)23:35:55.203087 IP dns2.cs.hn.cn.domain &gt; 192.168.0.3.32804: 43983 1/0/0 (72)23:35:55.204666 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 352:452(100) ack 1 win 210023:35:55.204852 IP 192.168.0.1.2101 &gt; 192.168.0.3.ssh: . ack 452 win 6415223:35:55.205305 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 452:520(68) ack 1 win 210023:35:55.205889 IP 192.168.0.3.32804 &gt; dns2.cs.hn.cn.domain: 9318+ PTR? 85.6.250.118.in-addr.arpa. (43)23:35:55.206071 PPPoE [ses 0x1cb0] IP 118.250.6.85.64215 &gt; dns2.cs.hn.cn.domain: 9318+ PTR? 85.6.250.118.in-addr.arpa. (43)23:35:55.215338 PPPoE [ses 0x1cb0] IP 115.238.1.45.3724 &gt; 118.250.6.85.64120: P 2392751922:2392751987(65) ack 2849759785 win 5423:35:55.216273 IP 115.238.1.45.3724 &gt; 192.168.0.65.2057: P 2392751922:2392751987(65) ack 2849759785 win 5423:35:55.329204 IP 192.168.0.1.2101 &gt; 192.168.0.3.ssh: . ack 520 win 6413523:35:55.458214 IP 192.168.0.65.2057 &gt; 115.238.1.45.3724: . ack 65 win 3259023:35:55.458221 PPPoE [ses 0x1cb0] IP 118.250.6.85.64120 &gt; 115.238.1.45.3724: . ack 65 win 3259023:35:55.708228 PPPoE [ses 0x1cb0] IP 115.238.1.45.3724 &gt; 118.250.6.85.64120: P 65:118(53) ack 1 win 5423:35:55.710213 IP 115.238.1.45.3724 &gt; 192.168.0.65.2057: P 65:118(53) ack 1 win 5423:35:55.865151 IP 192.168.0.65.2057 &gt; 115.238.1.45.3724: . ack 118 win 3276823:35:55.865157 PPPoE [ses 0x1cb0] IP 118.250.6.85.64120 &gt; 115.238.1.45.3724: . ack 118 win 3276823:35:56.242805 IP 192.168.0.65.2057 &gt; 115.238.1.45.3724: P 1:25(24) ack 118 win 3276823:35:56.242812 PPPoE [ses 0x1cb0] IP 118.250.6.85.64120 &gt; 115.238.1.45.3724: P 1:25(24) ack 118 win 3276823:35:56.276816 PPPoE [ses 0x1cb0] IP 115.238.1.45.3724 &gt; 118.250.6.85.64120: . ack 25 win 5423:35:56.278240 IP 115.238.1.45.3724 &gt; 192.168.0.65.2057: . ack 25 win 5423:35:56.349747 PPPoE [ses 0x1cb0] IP 115.238.1.45.3724 &gt; 118.250.6.85.64120: P 118:159(41) ack 25 win 5423:35:56.351780 IP 115.238.1.45.3724 &gt; 192.168.0.65.2057: P 118:159(41) ack 25 win 5423:35:56.400051 PPPoE [ses 0x1cb0] IP 119.147.18.44.8000 &gt; 118.250.6.85.4000: UDP, length 7923:35:56.475050 IP 192.168.0.65.2057 &gt; 115.238.1.45.3724: . ack 159 win 3276223:35:56.475063 PPPoE [ses 0x1cb0] IP 118.250.6.85.64120 &gt; 115.238.1.45.3724: . ack 159 win 3276223:35:56.508968 PPPoE [ses 0x1cb0] IP 115.238.1.45.3724 &gt; 118.250.6.85.64120: P 159:411(252) ack 25 win 5423:35:56.510182 IP 115.238.1.45.3724 &gt; 192.168.0.65.2057: P 159:411(252) ack 25 win 5423:35:56.592028 PPPoE [ses 0x1cb0] IP 117.136.2.43.38959 &gt; 118.250.6.85.63283: UDP, length 3644 packets captured76 packets received by filter0 packets dropped by kernel 显示指定数量包1234567891011121314151617181920212223242526# tcpdump -c 20tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on eth0, link-type EN10MB (Ethernet), capture size 96 bytes23:36:28.949538 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 148875984:148876020(36) ack 4184373187 win 210023:36:28.994325 IP 192.168.0.1.2101 &gt; 192.168.0.3.ssh: . ack 36 win 6402023:36:28.994368 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 36:72(36) ack 1 win 210023:36:28.950779 IP 192.168.0.3.32804 &gt; dns2.cs.hn.cn.domain: 18242+ PTR? 1.0.168.192.in-addr.arpa. (42)23:36:28.950948 PPPoE [ses 0x1cb0] IP 118.250.6.85.64215 &gt; dns2.cs.hn.cn.domain: 18242+ PTR? 1.0.168.192.in-addr.arpa. (42)23:36:28.960105 PPPoE [ses 0x1cb0] IP 222.82.119.41.13594 &gt; 118.250.6.85.63283: UDP, length 3623:36:28.962192 IP 222.82.119.41.13594 &gt; 192.168.0.65.13965: UDP, length 3623:36:28.963118 IP 192.168.0.65.13965 &gt; 222.82.119.41.13594: UDP, length 3423:36:28.963123 PPPoE [ses 0x1cb0] IP 118.250.6.85.63283 &gt; 222.82.119.41.13594: UDP, length 3423:36:28.970185 PPPoE [ses 0x1cb0] IP dns2.cs.hn.cn.domain &gt; 118.250.6.85.64215: 18242 NXDomain 0/0/0 (42)23:36:28.970413 IP dns2.cs.hn.cn.domain &gt; 192.168.0.3.32804: 18242 NXDomain 0/0/0 (42)23:36:28.972352 IP 192.168.0.3.32804 &gt; dns2.cs.hn.cn.domain: 17862+ PTR? 3.0.168.192.in-addr.arpa. (42)23:36:28.972474 PPPoE [ses 0x1cb0] IP 118.250.6.85.64215 &gt; dns2.cs.hn.cn.domain: 17862+ PTR? 3.0.168.192.in-addr.arpa. (42)23:36:28.982287 PPPoE [ses 0x1cb0] IP 121.12.131.163.13109 &gt; 118.250.6.85.63283: UDP, length 2723:36:28.984162 IP 121.12.131.163.13109 &gt; 192.168.0.65.13965: UDP, length 2723:36:28.985021 IP 192.168.0.65.13965 &gt; 121.12.131.163.13109: UDP, length 10323:36:28.985027 PPPoE [ses 0x1cb0] IP 118.250.6.85.63283 &gt; 121.12.131.163.13109: UDP, length 10323:36:28.991919 PPPoE [ses 0x1cb0] IP dns2.cs.hn.cn.domain &gt; 118.250.6.85.64215: 17862 NXDomain 0/0/0 (42)23:36:28.993142 IP dns2.cs.hn.cn.domain &gt; 192.168.0.3.32804: 17862 NXDomain 0/0/0 (42)23:36:28.993574 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: P 72:140(68) ack 1 win 210020 packets captured206 packets received by filter129 packets dropped by kernel 精简显示12345678910111213141516# tcpdump -c 10 -q //精简模式显示 10个包tcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on eth0, link-type EN10MB (Ethernet), capture size 96 bytes23:43:05.792280 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: tcp 3623:43:05.842115 IP 192.168.0.1.2101 &gt; 192.168.0.3.ssh: tcp 023:43:05.845074 IP 115.238.1.45.3724 &gt; 192.168.0.65.2057: tcp 023:43:05.907155 IP 192.168.0.3.ssh &gt; 192.168.0.1.2101: tcp 3623:43:05.793880 IP 192.168.0.3.32804 &gt; dns2.cs.hn.cn.domain: UDP, length 4223:43:05.794076 PPPoE [ses 0x1cb0] IP 118.250.6.85.64219 &gt; dns2.cs.hn.cn.domain: UDP, length 4223:43:05.811127 PPPoE [ses 0x1cb0] IP dns2.cs.hn.cn.domain &gt; 118.250.6.85.64219: UDP, length 4223:43:05.814764 IP dns2.cs.hn.cn.domain &gt; 192.168.0.3.32804: UDP, length 4223:43:05.816404 IP 192.168.0.3.32804 &gt; dns2.cs.hn.cn.domain: UDP, length 4223:43:05.816545 PPPoE [ses 0x1cb0] IP 118.250.6.85.64219 &gt; dns2.cs.hn.cn.domain: UDP, length 4210 packets captured39 packets received by filter0 packets dropped by kernel 转换克阅读格式12# tcpdump -d (000) ret #96 转换成十进制格式123# tcpdump -ddd16 0 0 96","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"tcpdump","slug":"Linux/网络通讯/tcpdump","permalink":"http://yoursite.com/categories/Linux/网络通讯/tcpdump/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"tcpdump","slug":"tcpdump","permalink":"http://yoursite.com/tags/tcpdump/"}]},{"title":"Linux-tar","slug":"Linux-tar","date":"2019-05-02T01:54:37.082Z","updated":"2019-03-02T06:03:05.000Z","comments":true,"path":"2019/05/02/Linux-tar/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-tar/","excerpt":"tar 命令tar 命令用于备份文件。","text":"tar 命令tar 命令用于备份文件。tar是用来建立，还原备份文件的工具程序，他可以加入，解开备份文件内的文件。 语法1tar [-ABcdgGhiklmMoOpPrRsStuUvwWxzZ][-b &lt;区块数目&gt;][-C &lt;目的目录&gt;][-f &lt;备份文件&gt;][-F &lt;Script文件&gt;][-K &lt;文件&gt;][-L &lt;媒体容量&gt;][-N &lt;日期时间&gt;][-T &lt;范本文件&gt;][-V &lt;卷册名称&gt;][-X &lt;范本文件&gt;][-&lt;设备编号&gt;&lt;存储密度&gt;][--after-date=&lt;日期时间&gt;][--atime-preserve][--backuup=&lt;备份方式&gt;][--checkpoint][--concatenate][--confirmation][--delete][--exclude=&lt;范本样式&gt;][--force-local][--group=&lt;群组名称&gt;][--help][--ignore-failed-read][--new-volume-script=&lt;Script文件&gt;][--newer-mtime][--no-recursion][--null][--numeric-owner][--owner=&lt;用户名称&gt;][--posix][--erve][--preserve-order][--preserve-permissions][--record-size=&lt;区块数目&gt;][--recursive-unlink][--remove-files][--rsh-command=&lt;执行指令&gt;][--same-owner][--suffix=&lt;备份字尾字符串&gt;][--totals][--use-compress-program=&lt;执行指令&gt;][--version][--volno-file=&lt;编号文件&gt;][文件或目录...] 参数 -A或–catenate 新增文件到已存在的备份文件。 -b&lt;区块数目&gt;或–blocking-factor=&lt;区块数目&gt; 设置每笔记录的区块数目，每个区块大小为12Bytes。 -B或–read-full-records 读取数据时重设区块大小。 -c或–create 建立新的备份文件。 -C&lt;目的目录&gt;或–directory=&lt;目的目录&gt; 切换到指定的目录。 -d或–diff或–compare 对比备份文件内和文件系统上的文件的差异。 -f&lt;备份文件&gt;或–file=&lt;备份文件&gt; 指定备份文件。 -F&lt;Script文件&gt;或–info-script=&lt;Script文件&gt; 每次更换磁带时，就执行指定的Script文件。 -g或–listed-incremental 处理GNU格式的大量备份。 -G或–incremental 处理旧的GNU格式的大量备份。 -h或–dereference 不建立符号连接，直接复制该连接所指向的原始文件。 -i或–ignore-zeros 忽略备份文件中的0 Byte区块，也就是EOF。 -k或–keep-old-files 解开备份文件时，不覆盖已有的文件。 -K&lt;文件&gt;或–starting-file=&lt;文件&gt; 从指定的文件开始还原。 -l或–one-file-system 复制的文件或目录存放的文件系统，必须与tar指令执行时所处的文件系统相同，否则不予复制。 -L&lt;媒体容量&gt;或-tape-length=&lt;媒体容量&gt; 设置存放每体的容量，单位以1024 Bytes计算。 -m或–modification-time 还原文件时，不变更文件的更改时间。 -M或–multi-volume 在建立，还原备份文件或列出其中的内容时，采用多卷册模式。 -N&lt;日期格式&gt;或–newer=&lt;日期时间&gt; 只将较指定日期更新的文件保存到备份文件里。 -o或–old-archive或–portability 将资料写入备份文件时使用V7格式。 -O或–stdout 把从备份文件里还原的文件输出到标准输出设备。 -p或–same-permissions 用原来的文件权限还原文件。 -P或–absolute-names 文件名使用绝对名称，不移除文件名称前的”/“号。 -r或–append 新增文件到已存在的备份文件的结尾部分。 -R或–block-number 列出每个信息在备份文件中的区块编号。 -s或–same-order 还原文件的顺序和备份文件内的存放顺序相同。 -S或–sparse 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。 -t或–list 列出备份文件的内容。 -T&lt;范本文件&gt;或–files-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让tar解开或建立符合设置条件的文件。 -u或–update 仅置换较备份文件内的文件更新的文件。 -U或–unlink-first 解开压缩文件还原文件之前，先解除文件的连接。 -v或–verbose 显示指令执行过程。 -V&lt;卷册名称&gt;或–label=&lt;卷册名称&gt; 建立使用指定的卷册名称的备份文件。 -w或–interactive 遭遇问题时先询问用户。 -W或–verify 写入备份文件后，确认文件正确无误。 -x或–extract或–get 从备份文件中还原文件。 -X&lt;范本文件&gt;或–exclude-from=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让ar排除符合设置条件的文件。 -z或–gzip或–ungzip 通过gzip指令处理备份文件。 -Z或–compress或–uncompress 通过compress指令处理备份文件。 -&lt;设备编号&gt;&lt;存储密度&gt; 设置备份用的外围设备编号及存放数据的密度。 –after-date=&lt;日期时间&gt; 此参数的效果和指定”-N”参数相同。 –atime-preserve 不变更文件的存取时间。 –backup=&lt;备份方式&gt;或–backup 移除文件前先进行备份。 –checkpoint 读取备份文件时列出目录名称。 –concatenate 此参数的效果和指定”-A”参数相同。 –confirmation 此参数的效果和指定”-w”参数相同。 –delete 从备份文件中删除指定的文件。 –exclude=&lt;范本样式&gt; 排除符合范本样式的问家。 –group=&lt;群组名称&gt; 把加入设备文件中的文件的所属群组设成指定的群组。 –help 在线帮助。 –ignore-failed-read 忽略数据读取错误，不中断程序的执行。 –new-volume-script=&lt;Script文件&gt; 此参数的效果和指定”-F”参数相同。 –newer-mtime 只保存更改过的文件。 –no-recursion 不做递归处理，也就是指定目录下的所有文件及子目录不予处理。 –null 从null设备读取文件名称。 –numeric-owner 以用户识别码及群组识别码取代用户名称和群组名称。 –owner=&lt;用户名称&gt; 把加入备份文件中的文件的拥有者设成指定的用户。 –posix 将数据写入备份文件时使用POSIX格式。 –preserve 此参数的效果和指定”-ps”参数相同。 –preserve-order 此参数的效果和指定”-A”参数相同。 –preserve-permissions 此参数的效果和指定”-p”参数相同。 –record-size=&lt;区块数目&gt; 此参数的效果和指定”-b”参数相同。 –recursive-unlink 解开压缩文件还原目录之前，先解除整个目录下所有文件的连接。 –remove-files 文件加入备份文件后，就将其删除。 –rsh-command=&lt;执行指令&gt; 设置要在远端主机上执行的指令，以取代rsh指令。 –same-owner 尝试以相同的文件拥有者还原文件。 –suffix=&lt;备份字尾字符串&gt; 移除文件前先行备份。 –totals 备份文件建立后，列出文件大小。 –use-compress-program=&lt;执行指令&gt; 通过指定的指令处理备份文件。 –version 显示版本信息。 –volno-file=&lt;编号文件&gt; 使用指定文件内的编号取代预设的卷册编号。 实例压缩文件 非打包123# touch a.c # tar -czvf test.tar.gz a.c //压缩 a.c文件为test.tar.gza.c 列出压缩文件的内容12# tar -tzvf test.tar.gz -rw-r--r-- root/root 0 2010-05-24 16:51:59 a.c 解压文件12# tar -xzvf test.tar.gz a.c","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"tar","slug":"Linux/备份压缩/tar","permalink":"http://yoursite.com/categories/Linux/备份压缩/tar/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"tar","slug":"tar","permalink":"http://yoursite.com/tags/tar/"}]},{"title":"Linux-talk","slug":"Linux-talk","date":"2019-05-02T01:54:37.072Z","updated":"2019-02-20T07:07:11.000Z","comments":true,"path":"2019/05/02/Linux-talk/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-talk/","excerpt":"talk 命令talk 命令用于与其他使用者对谈。使用权限：所有使用者。","text":"talk 命令talk 命令用于与其他使用者对谈。使用权限：所有使用者。 语法1talk person [ttyname] 参数 person : 预备对谈的使用者帐号，如果该使用者在其他机器上，则可输入 person@machine.name ttyname : 如果使用者同时有两个以上的 tty 连线，可以自行选择合适的 tty 传讯息 实例与现在机器上的使用者Rollaend对谈，此时 Rollaend 只有一个连线1talk Rollaend 接下来就是等Rollaend回应，若Rollaend接受，则Rollaend输入 talk jzlee即可开始对谈，结束请按 ctrl+c与linuxfab.cx上的使用者Rollaend对谈，使用pts/2来对谈1talk Rollaend@linuxfab.cx pts/2 接下来就是等Rollaend回应，若Rollaend接受，则Rollaend输入 talk jzlee@jzlee.home即可开始对谈，结束请按 ctrl+c注意：若萤幕的字会出现不正常的字元，试著按 ctrl+l 更新萤幕画面。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"talk","slug":"Linux/网络通讯/talk","permalink":"http://yoursite.com/categories/Linux/网络通讯/talk/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"talk","slug":"talk","permalink":"http://yoursite.com/tags/talk/"}]},{"title":"Linux-sync","slug":"Linux-sync","date":"2019-05-02T01:54:37.065Z","updated":"2019-02-19T13:33:15.000Z","comments":true,"path":"2019/05/02/Linux-sync/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-sync/","excerpt":"sync 命令sync 命令用于数据同步，sync命令是在关闭Linux系统时使用的。","text":"sync 命令sync 命令用于数据同步，sync命令是在关闭Linux系统时使用的。Linux系统中欲写入硬盘的资料有的时候会为了效率起见，会写到 filesystem buffer 中，这个 buffer 是一块记忆体空间，如果欲写入硬盘的资料存于此 buffer 中，而系统又突然断电的话，那么资料就会流失了，sync 指令会将存于 buffer 中的资料强制写入硬盘中。 语法1sync","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"sync","slug":"Linux/磁盘维护/sync","permalink":"http://yoursite.com/categories/Linux/磁盘维护/sync/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"sync","slug":"sync","permalink":"http://yoursite.com/tags/sync/"}]},{"title":"Linux-symlinks","slug":"Linux-symlinks","date":"2019-05-02T01:54:37.059Z","updated":"2019-02-19T13:30:35.000Z","comments":true,"path":"2019/05/02/Linux-symlinks/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-symlinks/","excerpt":"symlinks 命令symlinks 命令用于维护符号连接的工具程序。symlinks可检查目录中的符号连接，并显示符号连接类型。以下为symlinks可判断的符号连接类型：","text":"symlinks 命令symlinks 命令用于维护符号连接的工具程序。symlinks可检查目录中的符号连接，并显示符号连接类型。以下为symlinks可判断的符号连接类型： absolute：符号连接使用了绝对路径。 dangling：原始文件已经不存在。 lengthy：符号连接的路径中包含了多余的”../“。 messy：符号连接的路径中包含了多余的”/“。 other_fs：原始文件位于其他文件系统中。 relative：符号连接使用了相对路径。 语法1symlinks [-cdrstv][目录] 参数 -c 将使用绝对路径的符号连接转换为相对路径。 -d 移除dangling类型的符号连接。 -r 检查目录下所有子目录中的符号连接。 -s 检查lengthy类型的符号连接。 -t 与-c一并使用时，会显示如何将绝对路径的符号连接转换为相对路径，但不会实际转换。 -v 显示所有类型的符号连接。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"symlinks","slug":"Linux/磁盘维护/symlinks","permalink":"http://yoursite.com/categories/Linux/磁盘维护/symlinks/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"symlinks","slug":"symlinks","permalink":"http://yoursite.com/tags/symlinks/"}]},{"title":"Linux-swatch","slug":"Linux-swatch","date":"2019-05-02T01:54:37.049Z","updated":"2019-02-27T04:29:31.000Z","comments":true,"path":"2019/05/02/Linux-swatch/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-swatch/","excerpt":"swatch 命令swatch 命令用于系统监控程序。","text":"swatch 命令swatch 命令用于系统监控程序。swatch可用来监控系统记录文件，并在发现特定的事件时，执行指定的动作。swatch所监控的事件以及对应事件的动作都存放在swatch的配置文件中。预设的配置文件为拥护根目录下的.swatchrc。然而在Red Hat Linux的预设用户根目录下并没有.swatchrc配置文件，您可将/usr/doc/swatch-2.2/config_files/swatchrc.personal文件复制到用户根目录下的.swatchrc，然后修改.swatchrc所要监控的事件及执行的动作。 语法1swatch [-A &lt;分隔字符&gt;][-c &lt;设置文件&gt;][-f &lt;记录文件&gt;][-I &lt;分隔字符&gt;][-P &lt;分隔字符&gt;][-r &lt;时间&gt;][-t &lt;记录文件&gt;] 参数 -A&lt;分隔字符&gt; 预设配置文件中，动作的分隔字符，预设为逗号。 -c&lt;设置文件&gt; 指定配置文件，而不使用预设的配置文件。 -f&lt;记录文件&gt; 检查指定的记录文件，检查完毕后不会继续监控该记录文件。 -I&lt;分隔字符&gt; 指定输入记录的分隔字符，预设为换行字符。 -P&lt;分隔字符&gt; 指定配置文件中，事件的分隔字符，预设为逗号。 -r&lt;时间&gt; 在指定的时间重新启动。 -t&lt;记录文件&gt; 检查指定的记录文件，并且会监控加入记录文件中的后继记录。 实例开启系统监视1swatch","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"swatch","slug":"Linux/系统管理/swatch","permalink":"http://yoursite.com/categories/Linux/系统管理/swatch/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"swatch","slug":"swatch","permalink":"http://yoursite.com/tags/swatch/"}]},{"title":"Linux-swapon","slug":"Linux-swapon","date":"2019-05-02T01:54:37.043Z","updated":"2019-02-19T13:26:30.000Z","comments":true,"path":"2019/05/02/Linux-swapon/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-swapon/","excerpt":"swapon 命令swapon 命令用于激活Linux系统中交换空间，Linux系统的内存管理必须使用交换区来建立虚拟机内存。","text":"swapon 命令swapon 命令用于激活Linux系统中交换空间，Linux系统的内存管理必须使用交换区来建立虚拟机内存。 语法123/sbin/swapon -a [-v]/sbin/swapon [-v] [-p priority] specialfile .../sbin/swapon [-s] 参数 -h 请帮帮我 -V 显示版本讯息 -s 显示简短的装置讯息 -a 自动启动所有SWAP装置 -p 设定优先权，你可以在0到32767中间选一个数字给他。或是在 /etc/fstab 里面加上 pri=[ value ] ([ value ]就是0~32767中间一个数字)，然后你就可以很方便的直接使用 swapon -a 来启动他们，而且有优先权设定。swapon 是开启swap。相对的,便有一个关闭swap的指令,swapoff。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"swapon","slug":"Linux/磁盘维护/swapon","permalink":"http://yoursite.com/categories/Linux/磁盘维护/swapon/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"swapon","slug":"swapon","permalink":"http://yoursite.com/tags/swapon/"}]},{"title":"Linux-swapoff","slug":"Linux-swapoff","date":"2019-05-02T01:54:37.036Z","updated":"2019-02-19T14:09:53.000Z","comments":true,"path":"2019/05/02/Linux-swapoff/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-swapoff/","excerpt":"swapoff 命令swapoff 命令用于关闭系统交换区（swap area）。swapoff实际上为swapon的符号连接，可用来关闭系统的交换区。","text":"swapoff 命令swapoff 命令用于关闭系统交换区（swap area）。swapoff实际上为swapon的符号连接，可用来关闭系统的交换区。 语法1swapoff [设备] 参数 -a 将/etc/fstab文件中所有设置为swap的设备关闭 -h 帮助信息 -V 版本信息 实例显示分区信息12345678910111213141516# sfdisk -l //显示分区信息Disk /dev/sda: 1305 cylinders, 255 heads, 63 sectors/trackUnits = cylinders of 8225280 bytes, blocks of 1024 bytes, counting from 0 Device Boot Start End #cyls #blocks Id System/dev/sda1 * 0+ 12 13- 104391 83 Linux/dev/sda2 13 1304 1292 10377990 8e Linux LVM/dev/sda3 0 - 0 0 0 Empty/dev/sda4 0 - 0 0 0 EmptyDisk /dev/sdb: 652 cylinders, 255 heads, 63 sectors/tracksfdisk: ERROR: sector 0 does not have an msdos signature/dev/sdb: unrecognized partitionNo partitions found 关闭交换分区1# swapoff /dev/sda2 // 关闭交换分区","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"swapoff","slug":"Linux/磁盘维护/swapoff","permalink":"http://yoursite.com/categories/Linux/磁盘维护/swapoff/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"swapoff","slug":"swapoff","permalink":"http://yoursite.com/tags/swapoff/"}]},{"title":"Linux-SVGATextMode","slug":"Linux-SVGATextMode","date":"2019-05-02T01:54:37.029Z","updated":"2019-03-01T12:54:08.000Z","comments":true,"path":"2019/05/02/Linux-SVGATextMode/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-SVGATextMode/","excerpt":"SVGATextMode 命令SVGATextMode 命令用于加强文字模式的显示画面。","text":"SVGATextMode 命令SVGATextMode 命令用于加强文字模式的显示画面。SVGATextMode可用来设置文字模式下的显示画面，包括分辨率，字体和更新频率等。 语法1SVGATextMode [-acdfhmnrsv][-t &lt;配置文件&gt;][模式] 参数 -a 如果新显示模式的屏幕大小与原先不同时，SVGATextMode会执行必要的系统设置。 -c 维持原有的VGA时脉。 -d 执行时会显示详细的信息，供排错时参考。 -f 不要执行配置文件中有关字体载入的指令。 -h 显示帮助。 -m 允许1x1的方式来重设屏幕大小。 -n 仅测试指定的模式。 -r 通知或重设与屏幕大小相关的程序。 -s 显示配置文件中所有可用的模式。 -t&lt;配置文件&gt; 指定配置文件。 -v SVGATextMode在配置新的显示模式时，预设会先检查垂直与水平的更新更新频率是否在配置文件所指定的范围内，如果不在范围内，则不设置新的显示模式。 模式］ [模式]参数必须是配置文件中模式的名称。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"SVGATextMode","slug":"Linux/系统设置/SVGATextMode","permalink":"http://yoursite.com/categories/Linux/系统设置/SVGATextMode/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"SVGATextMode","slug":"SVGATextMode","permalink":"http://yoursite.com/tags/SVGATextMode/"}]},{"title":"Linux-suspend","slug":"Linux-suspend","date":"2019-05-02T01:54:37.024Z","updated":"2019-02-24T06:31:35.000Z","comments":true,"path":"2019/05/02/Linux-suspend/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-suspend/","excerpt":"suspend 命令suspend 命令用于暂停执行shell。suspend为shell内建指令，可暂停目前正在执行的shell。若要恢复，则必须使用SIGCONT信息。","text":"suspend 命令suspend 命令用于暂停执行shell。suspend为shell内建指令，可暂停目前正在执行的shell。若要恢复，则必须使用SIGCONT信息。 语法1suspend [-f] 参数 -f 若目前执行的shell为登入的shell，则suspend预设无法暂停此shell。若要强迫暂停登入的shell，则必须使用-f参数。 实例暂停shell12suspendsuspend -f","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"suspend","slug":"Linux/系统管理/suspend","permalink":"http://yoursite.com/categories/Linux/系统管理/suspend/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"suspend","slug":"suspend","permalink":"http://yoursite.com/tags/suspend/"}]},{"title":"Linux-sudo","slug":"Linux-sudo","date":"2019-05-02T01:54:37.016Z","updated":"2019-02-27T04:16:08.000Z","comments":true,"path":"2019/05/02/Linux-sudo/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-sudo/","excerpt":"sudo 命令sudo 命令以系统管理者的身份执行指令，也就是说，经由sudo所执行的指令就好像是root亲自执行。","text":"sudo 命令sudo 命令以系统管理者的身份执行指令，也就是说，经由sudo所执行的指令就好像是root亲自执行。使用权限：在/etc/sudoers中有出现的使用者。 语法1sudo -V 1sudo -h 1sudo -l 1sudo -v 1sudo -k 1sudo -s 1sudo -H 1sudo [ -b ] [ -p prompt ] [ -u username/#uid] -s 1sudo command 参数 -V 显示版本编号 -h 会显示版本编号及指令的使用方式说明 -l 显示出自己（执行 sudo 的使用者）的权限 -v 因为 sudo 在第一次执行时或是在 N 分钟内没有执行（N 预设为五）会问密码，这个参数是重新做一次确认，如果超过 N 分钟，也会问密码 -k 将会强迫使用者在下一次执行 sudo 时问密码（不论有没有超过 N 分钟） -b 将要执行的指令放在背景执行 -p prompt 可以更改问密码的提示语，其中 %u 会代换为使用者的帐号名称， %h 会显示主机名称 -u username/#uid 不加此参数，代表要以 root 的身份执行指令，而加了此参数，可以以 username 的身份执行指令（#uid 为该 username 的使用者号码） -s 执行环境变数中的 SHELL 所指定的 shell ，或是 /etc/passwd 里所指定的 shell -H 将环境变数中的 HOME （家目录）指定为要变更身份的使用者家目录（如不加 -u 参数就是系统管理者 root ） command 要以系统管理者身份（或以 -u 更改为其他人）执行的指令 实例临时管理员权限1sudo -s","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"sudo","slug":"Linux/系统管理/sudo","permalink":"http://yoursite.com/categories/Linux/系统管理/sudo/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"sudo","slug":"sudo","permalink":"http://yoursite.com/tags/sudo/"}]},{"title":"Linux-su","slug":"Linux-su","date":"2019-05-02T01:54:36.997Z","updated":"2019-02-27T11:56:53.000Z","comments":true,"path":"2019/05/02/Linux-su/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-su/","excerpt":"su 命令su 命令用于变更为其他使用者的身份，除root外，需要键入该使用者的密码。","text":"su 命令su 命令用于变更为其他使用者的身份，除root外，需要键入该使用者的密码。使用权限：所有使用者。 语法1su [-fmp] [-c command] [-s shell] [--help] [--version] [-] [USER [ARG]] 参数 -f 或 –fast 不必读启动档（如 csh.cshrc 等），仅用于 csh 或 tcsh -m -p 或 –preserve-environment 执行 su 时不改变环境变数 -c command 或 –command=command 变更为帐号为 USER 的使用者并执行指令（command）后再变回原来使用者 -s shell 或 –shell=shell 指定要执行的 shell （bash csh tcsh 等），预设值为 /etc/passwd 内的该使用者（USER） shell –help 显示说明文件 –version 显示版本资讯 –l 或 –login 这个参数加了之后，就好像是重新 login 为该使用者一样，大部份环境变数（HOME SHELL USER等等）都是以该使用者（USER）为主，并且工作目录也会改变，如果没有指定 USER ，内定是 root USER 欲变更的使用者帐号 ARG 传入新的 shell 参数 实例变更账号为riit并在执行ls指令后退出变回原使用者1su -c ls root 变更账号为root并传入-f参数给新执行的shell1su root -f 变更账号为clsung 并改变工作目录至clsung的家目录（home dir）1su - clsung 切换用户1su username","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"su","slug":"Linux/系统管理/su","permalink":"http://yoursite.com/categories/Linux/系统管理/su/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"su","slug":"su","permalink":"http://yoursite.com/tags/su/"}]},{"title":"Linux-statserial","slug":"Linux-statserial","date":"2019-05-02T01:54:36.990Z","updated":"2019-02-20T07:23:58.000Z","comments":true,"path":"2019/05/02/Linux-statserial/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-statserial/","excerpt":"statserial 命令statserial 命令用于显示串口状态。statserial可显示各个接脚的 状态，常用来判断串口是否正常。","text":"statserial 命令statserial 命令用于显示串口状态。statserial可显示各个接脚的 状态，常用来判断串口是否正常。 语法1statserial [-dnx][串口设备名称] 参数 -d 以10进制数字来表示串口的状态。 -n 仅显示一次串口的状态后即结束程序。 -x 与-n参数类似，但是以16进制来表示。 实例显示串口状态1# statserial /dev/tty1 只显示一次串口状态1# statserial -n /dev/tty1","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"statserial","slug":"Linux/网络通讯/statserial","permalink":"http://yoursite.com/categories/Linux/网络通讯/statserial/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"statserial","slug":"statserial","permalink":"http://yoursite.com/tags/statserial/"}]},{"title":"Linux-stat","slug":"Linux-stat","date":"2019-05-02T01:54:36.985Z","updated":"2019-02-13T14:04:21.000Z","comments":true,"path":"2019/05/02/Linux-stat/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-stat/","excerpt":"stat 命令stat 命令用于显示inode内容。stat以文字的格式来显示inode的内容。","text":"stat 命令stat 命令用于显示inode内容。stat以文字的格式来显示inode的内容。 语法1stat [文件或目录] 实例查看testfile文件的inode内容1stat testfile 输出结果：12345678# stat testfile #输入命令 File: `testfile&apos; Size: 102 Blocks: 8 IO Block: 4096 regular fileDevice: 807h/2055d Inode: 1265161 Links: 1Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)Access: 2014-08-13 14:07:20.000000000 +0800Modify: 2014-08-13 14:07:07.000000000 +0800Change: 2014-08-13 14:07:07.000000000 +0800","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"stat","slug":"Linux/磁盘管理/stat","permalink":"http://yoursite.com/categories/Linux/磁盘管理/stat/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"stat","slug":"stat","permalink":"http://yoursite.com/tags/stat/"}]},{"title":"Linux-split","slug":"Linux-split","date":"2019-05-02T01:54:36.977Z","updated":"2019-02-06T18:47:31.000Z","comments":true,"path":"2019/05/02/Linux-split/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-split/","excerpt":"split 命令split 命令用于将一个文件分割成数个。该指令将大文件分割成较小的文件，在默认情况下将按照每1000行切割成一个小文件。","text":"split 命令split 命令用于将一个文件分割成数个。该指令将大文件分割成较小的文件，在默认情况下将按照每1000行切割成一个小文件。 语法1split [--help][--version][-&lt;行数&gt;][-b &lt;字节&gt;][-C &lt;字节&gt;][-l &lt;行数&gt;][要切割的文件][输出文件名] 参数 -&lt;行数&gt; : 指定每多少行切成一个小文件 -b&lt;字节&gt; : 指定每多少字节切成一个小文件 –help : 在线帮助 –version : 显示版本信息 –C&lt;字节&gt; : 与参数”-b”相似，但是在切 割时将尽量维持每行的完整性 [输出文件名] : 设置切割后文件的前置文件名， split会自动在前置文件名后再加上编号 实例使用指令“split”将文件“README”每6行切割成一个文件1split -6 README #将README文件每六行分割成一个文件 以上命令执行后，指令”split”会将原来的大文件”README”切割成多个以”x”开头的小文件。而在这些小文件中，每个文件都只有6行内容。使用指令”ls”查看当前目录结构，如下所示：123$ ls #执行ls指令 #获得当前目录结构 README xaa xad xag xab xae xah xac xaf xai","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"split","slug":"Linux/文件管理/split","permalink":"http://yoursite.com/categories/Linux/文件管理/split/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"split","slug":"split","permalink":"http://yoursite.com/tags/split/"}]},{"title":"Linux-spell","slug":"Linux-spell","date":"2019-05-02T01:54:36.971Z","updated":"2019-02-10T16:17:30.000Z","comments":true,"path":"2019/05/02/Linux-spell/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-spell/","excerpt":"spell 命令spell 命令可建立拼写检查程序。spell可从标准输入设备读取字符串，结束后显示拼错的词汇。","text":"spell 命令spell 命令可建立拼写检查程序。spell可从标准输入设备读取字符串，结束后显示拼错的词汇。 语法1spell 实例检查文件testfile是否有拼写错误，在命令行提示符下输入如下命令：1spell testfile 如果文件中有单词拼写错误，则输出如下信息：12345678$ spell testfile #检查testfile 拼写错误 scurity #以下为有错误的单词 tp LANs Securty practicl applcations necesary 如果所检查的文件没有单词拼写错误，那么，命令运行后不会给出任何信息。检查从标准输入读取的字符串。例如在命令行中输入如下命令：1spell 按回车键后，输入一串字符串，然后按Ctrl+D 组合键退出spell，屏幕上将显示拼写有错误的单词。如下所示：1234$ spell #检查标准输入的字符串的拼写错误 hell,this is a linx sustem! #拼写错误的字符串 linx #以下为有拼写错误的单词 sustem","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"spell","slug":"Linux/文档编辑/spell","permalink":"http://yoursite.com/categories/Linux/文档编辑/spell/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"spell","slug":"spell","permalink":"http://yoursite.com/tags/spell/"}]},{"title":"Linux-sort","slug":"Linux-sort","date":"2019-05-02T01:54:36.963Z","updated":"2019-02-10T16:09:51.000Z","comments":true,"path":"2019/05/02/Linux-sort/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-sort/","excerpt":"sort 命令sort 命令用于将文本文件内容加以排序。sort可针对文本文件的内容，以行为单位来排序。","text":"sort 命令sort 命令用于将文本文件内容加以排序。sort可针对文本文件的内容，以行为单位来排序。 语法1sort [-bcdfimMnr][-o&lt;输出文件&gt;][-t&lt;分隔字符&gt;][+&lt;起始栏位&gt;-&lt;结束栏位&gt;][--help][--verison][文件] 参数 -b 忽略每行前面开始出的空格字符。 -c 检查文件是否已经按照顺序排序。 -d 排序时，处理英文字母、数字及空格字符外，忽略其他的字符。 -f 排序时，将小写字母视为大写字母。 -i 排序时，除了040至176之间的ASCII字符外，忽略其他的字符。 -m 将几个排序好的文件进行合并。 -M 将前面3个字母依照月份的缩写进行排序。 -n 依照数值的大小排序。 -o&lt;输出文件&gt; 将排序后的结果存入指定的文件。 -r 以相反的顺序来排序。 -t&lt;分隔字符&gt; 指定排序时所用的栏位分隔字符。 +&lt;起始栏位&gt;-&lt;结束栏位&gt; 以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。 –help 显示帮助。 –version 显示版本信息。 实例在使用sort命令以默认的方式对文件的行进行排序。1sort testfile sort 命令将以默认的方式将文本文件的第一列以ASCII 码的次序排列，并将结果输出到标准输出。使用 cat命令显示testfile文件可知其原有的排序如下：1234$ cat testfile #testfile文件原有排序 test 30 Hello 95 Linux 85 使用sort命令重排后的结果如下：1234$ sort testfile #重排结果 Hello 95 Linux 85 test 30","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"sort","slug":"Linux/文档编辑/sort","permalink":"http://yoursite.com/categories/Linux/文档编辑/sort/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"sort","slug":"sort","permalink":"http://yoursite.com/tags/sort/"}]},{"title":"Linux-sndconfig","slug":"Linux-sndconfig","date":"2019-05-02T01:54:36.957Z","updated":"2019-03-01T09:58:46.000Z","comments":true,"path":"2019/05/02/Linux-sndconfig/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-sndconfig/","excerpt":"sndconfig 命令sndconfig 命令用于设置声卡。","text":"sndconfig 命令sndconfig 命令用于设置声卡。sndconfig为声卡设置程序，支持PnP设置，可自动检测并设置PnP声卡。 语法1sndconfig [--help][--noautoconfig][--noprobe] 参数 –help 显示帮助。 –noautoconfig 不自动设置PnP的声卡。 –noprobe 不自动检测PnP声卡。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"sndconfig","slug":"Linux/系统设置/sndconfig","permalink":"http://yoursite.com/categories/Linux/系统设置/sndconfig/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"sndconfig","slug":"sndconfig","permalink":"http://yoursite.com/tags/sndconfig/"}]},{"title":"Linux-smbd","slug":"Linux-smbd","date":"2019-05-02T01:54:36.950Z","updated":"2019-02-20T07:40:13.000Z","comments":true,"path":"2019/05/02/Linux-smbd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-smbd/","excerpt":"smbd 命令smbd 命令用于Samba服务器程序。smbd为Samba服务器程序，可分享文件与打印机等网络资源供Windows相关的用户端程序存取。","text":"smbd 命令smbd 命令用于Samba服务器程序。smbd为Samba服务器程序，可分享文件与打印机等网络资源供Windows相关的用户端程序存取。 语法1smbd [-aDhoP][-d&lt;排错层级&gt;][-i&lt;范围&gt;][-l&lt;记录文件&gt;][-O&lt;连接槽选项&gt;][-p&lt;连接端口编号&gt;][-s&lt;配置文件&gt;] 参数 -a 所有的连线记录都会加到记录文件中。 -d&lt;排错层级&gt; 指定记录文件所记载事件的详细程度。 -D 使用此参数时，smbd会以服务程序的方式在后台执行。 -h 显示帮助。 -i&lt;范围&gt; 指定NetBIOS名称的范围。 -l&lt;记录文件&gt; 指定记录文件的名称。 -o 每次启动时，会覆盖原有的记录文件。 -O&lt;连接槽选项&gt; 设置连接槽选项。 -p&lt;连接端口编号&gt; 设置连接端口编号。 -P 仅用来测试smbd程序的正确性。 -s&lt;配置文件&gt; 指定smbd的设置文件。 实例启动Samba服务器1# smbd -D","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"smbd","slug":"Linux/网络通讯/smbd","permalink":"http://yoursite.com/categories/Linux/网络通讯/smbd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"smbd","slug":"smbd","permalink":"http://yoursite.com/tags/smbd/"}]},{"title":"Linux-smbclient","slug":"Linux-smbclient","date":"2019-05-02T01:54:36.944Z","updated":"2019-02-20T07:45:22.000Z","comments":true,"path":"2019/05/02/Linux-smbclient/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-smbclient/","excerpt":"smbclient 命令smbclient 命令可存取SMB/CIFS服务器的用户端程序。SMB与CIFS为服务器通信协议，常用于Windows95/98/NT等系统。smbclient(samba client)可让Linux系统存取Windows系统所分享的资源。","text":"smbclient 命令smbclient 命令可存取SMB/CIFS服务器的用户端程序。SMB与CIFS为服务器通信协议，常用于Windows95/98/NT等系统。smbclient(samba client)可让Linux系统存取Windows系统所分享的资源。 语法1smbclient [网络资源][密码][-EhLN][-B&lt;IP地址&gt;][-d&lt;排错层级&gt;][-i&lt;范围&gt;][-I&lt;IP地址&gt;][-l&lt;记录文件&gt;][-M&lt;NetBIOS名称&gt;][-n&lt;NetBIOS名称&gt;][-O&lt;连接槽选项&gt;][-p&lt;TCP连接端口&gt;][-R&lt;名称解析顺序&gt;][-s&lt;目录&gt;][-t&lt;服务器字码&gt;][-T&lt;tar选项&gt;][-U&lt;用户名称&gt;][-W&lt;工作群组&gt;] 参数 [ 网络资源 ] [ 网络资源 ]的格式为//服务器名称/资源分享名称。 [ 密码 ] 输入存取网络资源所需的密码。 -B&lt;IP地址&gt; 传送广播数据包时所用的IP地址。 -d&lt;排错层级&gt; 指定记录文件所记载事件的详细程度。 -E 将信息送到标准错误输出设备。 -h 显示帮助。 -i&lt;范围&gt; 设置NetBIOS名称范围。 -I&lt;IP地址&gt; 指定服务器的IP地址。 -l&lt;记录文件&gt; 指定记录文件的名称。 -L 显示服务器端所分享出来的所有资源。 -M&lt;NetBIOS名称&gt; 可利用WinPopup协议，将信息送给选项中所指定的主机。 -n&lt;NetBIOS名称&gt; 指定用户端所要使用的NetBIOS名称。 -N 不用询问密码。 -O&lt;连接槽选项&gt; 设置用户端TCP连接槽的选项。 -p&lt;TCP连接端口&gt; 指定服务器端TCP连接端口编号。 -R&lt;名称解析顺序&gt; 设置NetBIOS名称解析的顺序。 -s&lt;目录&gt; 指定smb.conf所在的目录。 -t&lt;服务器字码&gt; 设置用何种字符码来解析服务器端的文件名称。 -T&lt; tar选项 &gt; 备份服务器端分享的全部文件，并打包成tar格式的文件。 -U&lt;用户名称&gt; 指定用户名称。 -W&lt;工作群组&gt; 指定工作群组名称。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"smbclient","slug":"Linux/网络通讯/smbclient","permalink":"http://yoursite.com/categories/Linux/网络通讯/smbclient/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"smbclient","slug":"smbclient","permalink":"http://yoursite.com/tags/smbclient/"}]},{"title":"Linux-slocate","slug":"Linux-slocate","date":"2019-05-02T01:54:36.937Z","updated":"2019-02-06T18:36:37.000Z","comments":true,"path":"2019/05/02/Linux-slocate/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-slocate/","excerpt":"slocate 命令slocate 命令用于查找文件或目录。slocate本身具有一个数据库，里面存放了系统中文件与目录的相关信息。","text":"slocate 命令slocate 命令用于查找文件或目录。slocate本身具有一个数据库，里面存放了系统中文件与目录的相关信息。 语法1slocate [-u][--help][--version][-d &lt;目录&gt;][查找的文件] 参数 d&lt;目录&gt;或–database=&lt;目录&gt; 指定数据库所在的目录。 -u 更新slocate数据库。 –help 显示帮助。 –version 显示版本信息。 实例使用指令“slocate”显示文件 名中含有关键字“fdisk”的文件路径信息1$ slocate fdisk #显示文件名中含有fdisk关键字的文件的路径信息 执行成功后，输出信息为12345678$ slocate fdisk #显示文件名中含有fdisk 关键字的文件的路径信息 /root/cfdisk #搜索到的文件路径列表 /root/fdisk /root/sfdisk /usr/include/grub/ieee1275/ofdisk.h /usr/share/doc/util-Linux/README.cfdisk /usr/share/doc/util-Linux/README.fdisk.gz /usr/share/doc/util-Linux/examples/sfdisk.examples.gz","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"slocate","slug":"Linux/文件管理/slocate","permalink":"http://yoursite.com/categories/Linux/文件管理/slocate/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"slocate","slug":"slocate","permalink":"http://yoursite.com/tags/slocate/"}]},{"title":"Linux-sliplogin","slug":"Linux-sliplogin","date":"2019-05-02T01:54:36.929Z","updated":"2019-02-27T03:51:40.000Z","comments":true,"path":"2019/05/02/Linux-sliplogin/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-sliplogin/","excerpt":"sliplogin 命令sliplogin 命令用于将SLIP接口加入标准输入。","text":"sliplogin 命令sliplogin 命令用于将SLIP接口加入标准输入。sliplogin可将SLIP接口加入标准输入，把一般终端机的连线变成SLIP连线。通常可用来建立SLIP服务器，让远端电脑以SLIP连线到服务器。sliplogin活去检查/etc/slip/slip.hosts文件中是否有相同的用户名称。通过检查后，sliplogin会调用执行shell script来设置IP地址，子网掩码等网络界面环境。此shell script通常是/etc/slip/slip.login。 语法1sliplogin [用户名称] 实例改变用户的连接方式1sliplogin kk // 改变用户的连接方式","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"sliplogin","slug":"Linux/系统管理/sliplogin","permalink":"http://yoursite.com/categories/Linux/系统管理/sliplogin/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"sliplogin","slug":"sliplogin","permalink":"http://yoursite.com/tags/sliplogin/"}]},{"title":"Linux-sleep","slug":"Linux-sleep","date":"2019-05-02T01:54:36.923Z","updated":"2019-02-24T06:15:05.000Z","comments":true,"path":"2019/05/02/Linux-sleep/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-sleep/","excerpt":"sleep 命令sleep 命令可以用来将目前动作延迟一段时间。使用权限：所有使用者。","text":"sleep 命令sleep 命令可以用来将目前动作延迟一段时间。使用权限：所有使用者。 语法1sleep [--help] [--version] number[smhd] 参数 –help : 显示辅助讯息 –version : 显示版本编号 number : 时间长度，后面可接 s、m、h 或 d 其中 s 为秒，m 为 分钟，h 为小时，d 为日数 实例休眠5分钟1sleep 5m 显示目前时间后延迟1分钟，之后再次显示时间。1date; sleep 1m; date","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"sleep","slug":"Linux/系统管理/sleep","permalink":"http://yoursite.com/categories/Linux/系统管理/sleep/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"sleep","slug":"sleep","permalink":"http://yoursite.com/tags/sleep/"}]},{"title":"Linux-skill","slug":"Linux-skill","date":"2019-05-02T01:54:36.916Z","updated":"2019-02-27T12:31:43.000Z","comments":true,"path":"2019/05/02/Linux-skill/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-skill/","excerpt":"skill 命令skill 命令送个讯号给正在执行的程序，预设的讯息为 TERM (中断)，较常使用的讯息为 HUP、INT、KILL、STOP、CONT 和 0。","text":"skill 命令skill 命令送个讯号给正在执行的程序，预设的讯息为 TERM (中断)，较常使用的讯息为 HUP、INT、KILL、STOP、CONT 和 0。讯息有三种写法：分别为 -9、-SIGKILL、-KILL，可以使用 -l 或 -L 已列出可使用的讯息。使用权限：所有使用者。其他相关的命令：kill s 语法1skill [signal to send] [options] 选择程序的规则 一般参数 -f 快速模式/尚未完成 -i 互动模式/ 每个动作将要被确认 -v 详细输出/ 列出所选择程序的资讯 -w 智能警告讯息/ 尚未完成 -n 没有动作/ 显示程序代号 参数选择程序的规则可以是：终端机代号、使用者名称、程序代号、命令名称。 -t 终端机代号 ( tty 或 pty ) -u 使用者名称 -p 程序代号 ( pid ) -c 命令名称可使用的讯号 以下列出已知的讯号名称、讯号代号、功能。 名称（代号） 功能/描述 ALRM 14 离开 HUP 1 离开 INT 2 离开 KILL 9 离开/强迫关闭 PIPE 13 离开 POLL 离开 PROF 离开 TERM 15 离开 USR1 离开 USR2 离开 VTALRM 离开 STKFLT 离开/只适用于i386、m68k、arm 和 ppc 硬件 UNUSED 离开/只适用于i386、m68k、arm 和 ppc 硬件 TSTP 停止/产生与内容相关的行为 TTIN 停止/产生与内容相关的行为 TTOU 停止/产生与内容相关的行为 STOP 停止/强迫关闭 CONT 重新启动/如果在停止状态则重新启动，否则忽略 PWR 忽略/在某些系统中会离开 WINCH 忽略 CHLD 忽略 ABRT 6 核心 FPE 8 核心 ILL 4 核心 QUIT 3 核心 SEGV 11 核心 TRAP 5 核心 SYS 核心/或许尚未实作 EMT 核心/或许尚未实作 BUS 核心/核心失败 XCPU 核心/核心失败 XFSZ 核心/核心失败 实例停止所有在PTY装置上的程序1skill -KILL -v pts/* 停止三个使用者user1、user2、user31skill -STOP user1 user2 user3","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"skill","slug":"Linux/系统管理/skill","permalink":"http://yoursite.com/categories/Linux/系统管理/skill/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"skill","slug":"skill","permalink":"http://yoursite.com/tags/skill/"}]},{"title":"Linux-shutdown","slug":"Linux-shutdown","date":"2019-05-02T01:54:36.910Z","updated":"2019-02-27T04:05:34.000Z","comments":true,"path":"2019/05/02/Linux-shutdown/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-shutdown/","excerpt":"shutdown 命令shutdown 命令用来进行关机程序，并且在关机以前传送讯息给所有使用者正在运行的程序，shurdown也可以用来重开机。","text":"shutdown 命令shutdown 命令用来进行关机程序，并且在关机以前传送讯息给所有使用者正在运行的程序，shurdown也可以用来重开机。使用权限：系统管理者。 语法1shutdown [-t seconds] [-rkhncfF] time [message] 参数 -t seconds : 设定在几秒钟之后进行关机程序。 -k : 并不会真的关机，只是将警告讯息传送给所有使用者。 -r : 关机后重新开机。 -h : 关机后停机。 -n : 不采用正常程序来关机，用强迫的方式杀掉所有执行中的程序后自行关机。 -c : 取消目前已经进行中的关机动作。 -f : 关机时，不做 fcsk 动作(检查 Linux 档系统)。 -F : 关机时，强迫进行 fsck 动作。 time : 设定关机的时间。 message : 传送给所有使用者的警告讯息。 实例立即关机1shutdown -h now 指定5分钟后关机1shutdown +5 “System will shutdown after 5 minutes” //5分钟够关机并显示警告信息","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"shutdown","slug":"Linux/系统管理/shutdown","permalink":"http://yoursite.com/categories/Linux/系统管理/shutdown/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"shutdown","slug":"shutdown","permalink":"http://yoursite.com/tags/shutdown/"}]},{"title":"Linux-shapecfg","slug":"Linux-shapecfg","date":"2019-05-02T01:54:36.902Z","updated":"2019-02-20T07:48:06.000Z","comments":true,"path":"2019/05/02/Linux-shapecfg/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-shapecfg/","excerpt":"shapecfg 命令shapecfg 命令用于管制网络设备的流量。自Linux-2.15开始，便支持流量管制的功能 。","text":"shapecfg 命令shapecfg 命令用于管制网络设备的流量。自Linux-2.15开始，便支持流量管制的功能 。 语法123shapecfg attach [流量管制器][网络设备]或 shapecfg speed [流量管制器][带宽] 参数 attach 将流量管制器与实际的网络设备结合。 speed 设置流量管制器的对外传输带宽。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"shapecfg","slug":"Linux/网络通讯/shapecfg","permalink":"http://yoursite.com/categories/Linux/网络通讯/shapecfg/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"shapecfg","slug":"shapecfg","permalink":"http://yoursite.com/tags/shapecfg/"}]},{"title":"Linux-sfdisk","slug":"Linux-sfdisk","date":"2019-05-02T01:54:36.895Z","updated":"2019-02-19T14:05:06.000Z","comments":true,"path":"2019/05/02/Linux-sfdisk/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-sfdisk/","excerpt":"sfdisk 命令sfdisk 命令是硬盘分区工具程序。sfdisk为硬盘分区工具程序，可显示分区设置信息，并检查分区是否正常。","text":"sfdisk 命令sfdisk 命令是硬盘分区工具程序。sfdisk为硬盘分区工具程序，可显示分区设置信息，并检查分区是否正常。 语法1sfdisk [-?Tvx][-d &lt;硬盘&gt;][-g &lt;硬盘&gt;][-l &lt;硬盘&gt;][-s &lt;分区&gt;][-V &lt;硬盘&gt;] 参数 -?或–help 显示帮助。 -d&lt;硬盘&gt; 显示硬盘分区的设置。 -g&lt;硬盘&gt;或–show-geometry&lt;硬盘&gt; 显示硬盘的CHS参数。 -l&lt;硬盘&gt; 显示后硬盘分区的相关设置。 -s&lt;分区&gt; 显示分区的大小，单位为区块。 -T或–list-types 显示所有sfdisk能辨识的文件系统ID。 -v或–version 显示版本信息。 -V&lt;硬盘&gt;或–verify&lt;硬盘&gt; 检查硬盘分区是否正常。 -x或–show-extend 显示扩展分区中的逻辑分区。 实例显示分区信息12345678910111213141516# sfdisk -lDisk /dev/sda: 1305 cylinders, 255 heads, 63 sectors/trackUnits = cylinders of 8225280 bytes, blocks of 1024 bytes, counting from 0Device Boot Start End #cyls #blocks Id System/dev/sda1 * 0+ 12 13- 104391 83 Linux/dev/sda2 13 1304 1292 10377990 8e Linux LVM/dev/sda3 0 - 0 0 0 Empty/dev/sda4 0 - 0 0 0 EmptyDisk /dev/sdb: 652 cylinders, 255 heads, 63 sectors/tracksfdisk: ERROR: sector 0 does not have an msdos signature/dev/sdb: unrecognized partitionNo partitions found","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"sfdisk","slug":"Linux/磁盘维护/sfdisk","permalink":"http://yoursite.com/categories/Linux/磁盘维护/sfdisk/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"sfdisk","slug":"sfdisk","permalink":"http://yoursite.com/tags/sfdisk/"}]},{"title":"Linux-setup","slug":"Linux-setup","date":"2019-05-02T01:54:36.889Z","updated":"2019-03-01T09:55:46.000Z","comments":true,"path":"2019/05/02/Linux-setup/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-setup/","excerpt":"setup 命令setup 命令设置公用程序，是一个启动图形设置系统的命令。","text":"setup 命令setup 命令设置公用程序，是一个启动图形设置系统的命令。setup 命令：用来配置X，打印设置，时区设置，系统服务，网络配置，配置，防火墙配置，验证配置，鼠标配置。 语法1setup setup是一个设置公用程序，提供图形界面的操作方式。在setup中可设置7类的选项： １.登陆认证方式 ２.键盘组态设置 ３.鼠标组态设置 ４.开机时所要启动的系统服务 ５.声卡组态设置 ６.时区设置 ７.X Windows组态设置","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"setup","slug":"Linux/系统设置/setup","permalink":"http://yoursite.com/categories/Linux/系统设置/setup/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"setup","slug":"setup","permalink":"http://yoursite.com/tags/setup/"}]},{"title":"Linux-setserial","slug":"Linux-setserial","date":"2019-05-02T01:54:36.880Z","updated":"2019-02-20T07:04:42.000Z","comments":true,"path":"2019/05/02/Linux-setserial/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-setserial/","excerpt":"setserial 命令setserial 明林用于设置或显示串口的相关信息。setserial可用来设置串口或显示目前的设置。","text":"setserial 命令setserial 明林用于设置或显示串口的相关信息。setserial可用来设置串口或显示目前的设置。 语法1setserial [-abgGqvVz][设备][串口参数] 参数 -a 显示详细信息。 -b 显示摘要信息。 -g 显示串口的相关信息。 -G 以指令列表的格式来显示信息。 -q 执行时显示较少的信息。 -v 执行时显示较多的信息。 -V 显示版本信息。 -z 设置前，先将所有的标记归零。 实例显示串口信息12# setserial -g /dev/ttyS2 /dev/ttyS2, UART: unknown, Port: 0x03e8, IRQ: 4","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"setserial","slug":"Linux/网络通讯/setserial","permalink":"http://yoursite.com/categories/Linux/网络通讯/setserial/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"setserial","slug":"setserial","permalink":"http://yoursite.com/tags/setserial/"}]},{"title":"Linux-setleds","slug":"Linux-setleds","date":"2019-05-02T01:54:36.874Z","updated":"2019-03-02T06:26:25.000Z","comments":true,"path":"2019/05/02/Linux-setleds/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-setleds/","excerpt":"setleds 命令setleds 命令用来设定键盘上方三个 LED 的状态。在 Linux 中，每一个虚拟主控台都有独立的设定。","text":"setleds 命令setleds 命令用来设定键盘上方三个 LED 的状态。在 Linux 中，每一个虚拟主控台都有独立的设定。 语法1setleds [-v] [-L] [-D] [-F] [&#123;+|-&#125;num] [&#123;+|-&#125;caps] [&#123;+|-&#125;scroll] 参数 -F：预设的选项，设定虚拟主控台的状态。 -D：除了改变虚拟主控台的状态外，还改变预设的状态。 -L：不改变虚拟主控台的状态，但直接改变 LED 显示的状态。这会使得 LDE 显示和目前虚拟主控台的状态不符合。我们可以在稍后用 -L 且不含其它选项的 setleds 命令回复正常状态。 -num +num：将数字键打开或关闭。 -caps +caps：把大小写键打开或关闭。 -scroll +scroll：把选项键打开或关闭。 实例将数字键打开，其余二个灯关闭1# setleds +num -caps -scroll","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"设备管理","slug":"Linux/设备管理","permalink":"http://yoursite.com/categories/Linux/设备管理/"},{"name":"setleds","slug":"Linux/设备管理/setleds","permalink":"http://yoursite.com/categories/Linux/设备管理/setleds/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"设备管理","slug":"设备管理","permalink":"http://yoursite.com/tags/设备管理/"},{"name":"setleds","slug":"setleds","permalink":"http://yoursite.com/tags/setleds/"}]},{"title":"Linux-setenv","slug":"Linux-setenv","date":"2019-05-02T01:54:36.864Z","updated":"2019-03-01T10:01:23.000Z","comments":true,"path":"2019/05/02/Linux-setenv/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-setenv/","excerpt":"setenv 命令setenv 命令用于查询或显示环境变量。","text":"setenv 命令setenv 命令用于查询或显示环境变量。setenv为tsch中查询或设置环境变量的指令。 语法1setenv [变量名称][变量值] 实例显示环境变量1setenv 设置环境变量1# setenv USER lx138","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"setenv","slug":"Linux/系统设置/setenv","permalink":"http://yoursite.com/categories/Linux/系统设置/setenv/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"setenv","slug":"setenv","permalink":"http://yoursite.com/tags/setenv/"}]},{"title":"Linux-setconsole","slug":"Linux-setconsole","date":"2019-05-02T01:54:36.858Z","updated":"2019-03-01T10:04:13.000Z","comments":true,"path":"2019/05/02/Linux-setconsole/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-setconsole/","excerpt":"setconsole 命令setconsole 命令用于设置系统终端。","text":"setconsole 命令setconsole 命令用于设置系统终端。setconsole可用来指定系统终端。 语法1setconsole [serial][ttya][ttyb] 参数 serial 使用PROM终端。 ttya,cua0或ttyS0 使用第１个串口设备作为终端。 ttyb,cua1或ttyS1 使用第２个串口设备作为终端。 video 使用主机上的现卡作为终端。 实例设置终端1# setconsole ttyS0","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"setconsole","slug":"Linux/系统设置/setconsole","permalink":"http://yoursite.com/categories/Linux/系统设置/setconsole/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"setconsole","slug":"setconsole","permalink":"http://yoursite.com/tags/setconsole/"}]},{"title":"Linux-set","slug":"Linux-set","date":"2019-05-02T01:54:36.849Z","updated":"2019-03-01T06:52:38.000Z","comments":true,"path":"2019/05/02/Linux-set/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-set/","excerpt":"set 命令set 命令用于设置shell。","text":"set 命令set 命令用于设置shell。set指令能设置所使用的shell的执行方式，可依照不同的需求来做设置。 语法1set [+-abCdefhHklmnpPtuvx] 参数 -a 标示已修改的变量，以供输出至环境变量。 -b 使被中止的后台程序立刻回报执行状态。 -C 转向所产生的文件无法覆盖已存在的文件。 -d Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。 -e 若指令传回值不等于0，则立即退出shell。 -f 取消使用通配符。 -h 自动记录函数的所在位置。 -H Shell 可利用”!”加&lt;指令编号&gt;的方式来执行history中记录的指令。 -k 指令所给的参数都会被视为此指令的环境变量。 -l 记录for循环的变量名称。 -m 使用监视模式。 -n 只读取指令，而不实际执行。 -p 启动优先顺序模式。 -P 启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。 -t 执行完随后的指令，即退出shell。 -u 当执行时使用到未定义过的变量，则显示错误信息。 -v 显示shell所读取的输入值。 -x 执行指令后，会先显示该指令及所下的参数。 +&lt;参数&gt; 取消某个set曾启动的参数。 实例显示环境变量1set","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"set","slug":"Linux/系统设置/set","permalink":"http://yoursite.com/categories/Linux/系统设置/set/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"set","slug":"set","permalink":"http://yoursite.com/tags/set/"}]},{"title":"Linux-sed","slug":"Linux-sed","date":"2019-05-02T01:54:36.842Z","updated":"2019-02-10T16:14:01.000Z","comments":true,"path":"2019/05/02/Linux-sed/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-sed/","excerpt":"sed 命令sed 命令是利用script来处理文本文件。sed可依照script的指令来处理、编辑文本文件。sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。","text":"sed 命令sed 命令是利用script来处理文本文件。sed可依照script的指令来处理、编辑文本文件。sed主要用来自动编辑一个或多个文件；简化对文件的反复操作；编写转换程序等。 语法1sed [-hnV][-e&lt;script&gt;][-f&lt;script文件&gt;][文本文件] 参数 -e&lt; script &gt;或–expression=&lt; script &gt; 以选项中指定的script来处理输入的文本文件。 -f&lt; script文件 &gt;或–file=&lt; script文件 &gt; 以选项中指定的script文件来处理输入的文本文件。 -h或–help 显示帮助。 -n或–quiet或–silent 仅显示script处理后的结果。 -V或–version 显示版本信息。 动作说明 a ：新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～ c ：取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！ d ：删除，因为是删除啊，所以 d 后面通常不接任何咚咚； i ：插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)； p ：打印，亦即将某个选择的数据印出。通常 p 会与参数 sed -n 一起运行～ s ：取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦！ 实例在testfile文件的第四行后添加一行，并将结果输出到标准输出，使用以下命令：1sed -e 4a \\newLine testfile 首先查看testfile中的内容如下：12345$ cat testfile #查看testfile 中的内容 HELLO LINUX! Linux is a free unix-type opterating system. This is a linux testfile! Linux test 使用sed命令之后，输出结果如下：123456$ sed -e 4a\\newline testfile #使用sed 在第四行后添加新字符串 HELLO LINUX! #testfile文件原有的内容 Linux is a free unix-type opterating system. This is a linux testfile! Linux test newline 以行为单位的新增/删除将/etc/passwd的内容列出并且列印行号，同时，请将第2~5行删除。12345[root@www ~]# nl /etc/passwd | sed &apos;2,5d&apos;1 root:x:0:0:root:/root:/bin/bash6 sync:x:5:0:sync:/sbin:/bin/sync7 shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown.....(后面省略)..... sed 的动作为 ‘2,5d’ ，那个 d 就是删除！因为 2-5 行给他删除了，所以显示的数据就没有 2-5 行罗～ 另外，注意一下，原本应该是要下达 sed -e 才对，没有 -e 也行啦！同时也要注意的是， sed 后面接的动作，请务必以 ‘’ 两个单引号括住喔！只要删除第 2 行1nl /etc/passwd | sed &apos;2d&apos; 要删除第 3 到最后一行1nl /etc/passwd | sed &apos;3,$d&apos; 在第二行后(亦即是加在第三行)加上『drink tea?』字样！123456[root@www ~]# nl /etc/passwd | sed &apos;2a drink tea&apos;1 root:x:0:0:root:/root:/bin/bash2 bin:x:1:1:bin:/bin:/sbin/nologindrink tea3 daemon:x:2:2:daemon:/sbin:/sbin/nologin.....(后面省略)..... 那如果是要在第二行前1nl /etc/passwd | sed &apos;2i drink tea&apos; 如果是要增加两行以上，在第二行后面加入两行字，例如 Drink tea or ….. 与 drink beer?12345678[root@www ~]# nl /etc/passwd | sed &apos;2a Drink tea or ......\\&gt; drink beer ?&apos;1 root:x:0:0:root:/root:/bin/bash2 bin:x:1:1:bin:/bin:/sbin/nologinDrink tea or ......drink beer ?3 daemon:x:2:2:daemon:/sbin:/sbin/nologin.....(后面省略)..... 每一行之间都必须要以反斜杠『 \\ 』来进行新行的添加喔！所以，上面的例子中，我们可以发现在第一行的最后面就有 \\ 存在。 以行为单位的替换与显示将第2-5行的内容取代成为『No 2-5 number』呢？12345[root@www ~]# nl /etc/passwd | sed &apos;2,5c No 2-5 number&apos;1 root:x:0:0:root:/root:/bin/bashNo 2-5 number6 sync:x:5:0:sync:/sbin:/bin/sync.....(后面省略)..... 透过这个方法我们就能够将数据整行取代了！仅列出 /etc/passwd 文件内的第 5-7 行1234[root@www ~]# nl /etc/passwd | sed -n &apos;5,7p&apos;5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin6 sync:x:5:0:sync:/sbin:/bin/sync7 shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown 可以透过这个 sed 的以行为单位的显示功能， 就能够将某一个文件内的某些行号选择出来显示。 数据的搜寻并显示搜索 /etc/passwd有root关键字的行12345678nl /etc/passwd | sed &apos;/root/p&apos;1 root:x:0:0:root:/root:/bin/bash1 root:x:0:0:root:/root:/bin/bash2 daemon:x:1:1:daemon:/usr/sbin:/bin/sh3 bin:x:2:2:bin:/bin:/bin/sh4 sys:x:3:3:sys:/dev:/bin/sh5 sync:x:4:65534:sync:/bin:/bin/sync....下面忽略 如果root找到，除了输出所有行，还会输出匹配行。使用-n的时候将只打印包含模板的行。12nl /etc/passwd | sed -n &apos;/root/p&apos;1 root:x:0:0:root:/root:/bin/bash 数据的搜寻并删除删除/etc/passwd所有包含root的行，其他行输出12345nl /etc/passwd | sed &apos;/root/d&apos;2 daemon:x:1:1:daemon:/usr/sbin:/bin/sh3 bin:x:2:2:bin:/bin:/bin/sh....下面忽略#第一行的匹配root已经删除了 数据的搜寻并执行命令搜索/etc/passwd,找到root对应的行，执行后面花括号中的一组命令，每个命令之间用分号分隔，这里把bash替换为blueshell，再输出这行：12nl /etc/passwd | sed -n &apos;/root/&#123;s/bash/blueshell/;p;q&#125;&apos; 1 root:x:0:0:root:/root:/bin/blueshell 最后的q是退出。 数据的搜寻并替换除了整行的处理模式之外， sed 还可以用行为单位进行部分数据的搜寻并取代。基本上 sed 的搜寻与替代的与 vi 相当的类似！他有点像这样：1sed &apos;s/要被取代的字串/新的字串/g&apos; 先观察原始信息，利用 /sbin/ifconfig 查询 IP123456[root@www ~]# /sbin/ifconfig eth0eth0 Link encap:Ethernet HWaddr 00:90:CC:A6:34:84inet addr:192.168.1.100 Bcast:192.168.1.255 Mask:255.255.255.0inet6 addr: fe80::290:ccff:fea6:3484/64 Scope:LinkUP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1.....(以下省略)..... 本机的ip是192.168.1.100。将 IP 前面的部分予以删除12[root@www ~]# /sbin/ifconfig eth0 | grep &apos;inet addr&apos; | sed &apos;s/^.*addr://g&apos;192.168.1.100 Bcast:192.168.1.255 Mask:255.255.255.0 接下来则是删除后续的部分，亦即： 192.168.1.100 Bcast:192.168.1.255 Mask:255.255.255.0将 IP 后面的部分予以删除12[root@www ~]# /sbin/ifconfig eth0 | grep &apos;inet addr&apos; | sed &apos;s/^.*addr://g&apos; | sed &apos;s/Bcast.*$//g&apos;192.168.1.100 多点编辑一条sed命令，删除/etc/passwd第三行到末尾的数据，并把bash替换为blueshell123nl /etc/passwd | sed -e &apos;3,$d&apos; -e &apos;s/bash/blueshell/&apos;1 root:x:0:0:root:/root:/bin/blueshell2 daemon:x:1:1:daemon:/usr/sbin:/bin/sh -e表示多点编辑，第一个编辑命令删除/etc/passwd第三行到末尾的数据，第二条命令搜索bash替换为blueshell。 直接修改文件内容(危险动作)sed 可以直接修改文件的内容，不必使用管道命令或数据流重导向！ 不过，由於这个动作会直接修改到原始的文件，所以请你千万不要随便拿系统配置来测试！ 我们还是使用文件 regular_express.txt 文件来测试看看吧！regular_express.txt 文件内容如下：1234567[root@www ~]# cat regular_express.txt runoob.google.taobao.facebook.zhihu-weibo- 利用 sed 将 regular_express.txt 内每一行结尾若为 . 则换成 !12345678[root@www ~]# sed -i &apos;s/\\.$/\\!/g&apos; regular_express.txt[root@www ~]# cat regular_express.txt runoob!google!taobao!facebook!zhihu-weibo- :q:q利用 sed 直接在 regular_express.txt 最后一行加入 # This is a test:123456789[root@www ~]# sed -i &apos;$a # This is a test&apos; regular_express.txt[root@www ~]# cat regular_express.txt runoob!google!taobao!facebook!zhihu-weibo-# This is a test 由于$ 代表的是最后一行，而 a 的动作是新增，因此该文件最后新增 # This is a test！sed 的 -i 选项可以直接修改文件内容，这功能非常有帮助！举例来说，如果你有一个 100 万行的文件，你要在第 100 行加某些文字，此时使用 vim 可能会疯掉！因为文件太大了！那怎办？就利用 sed 啊！透过 sed 直接修改/取代的功能，你甚至不需要使用 vim 去修订！","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"sed","slug":"Linux/文档编辑/sed","permalink":"http://yoursite.com/categories/Linux/文档编辑/sed/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"sed","slug":"sed","permalink":"http://yoursite.com/tags/sed/"}]},{"title":"Linux-screen","slug":"Linux-screen","date":"2019-05-02T01:54:36.831Z","updated":"2019-02-27T03:55:53.000Z","comments":true,"path":"2019/05/02/Linux-screen/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-screen/","excerpt":"screen 命令screen 命令用于多重视窗管理程序。","text":"screen 命令screen 命令用于多重视窗管理程序。screen为多重视窗管理程序。此处所谓的视窗，是指一个全屏幕的文字模式画面。通常只有在使用telnet登入主机或是使用老式的终端机时，才有可能用到screen程序。 语法1screen [-AmRvx -ls -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s &lt;shell&gt;][-S &lt;作业名称&gt;] 参数 -A 将所有的视窗都调整为目前终端机的大小。 -d&lt;作业名称&gt; 将指定的screen作业离线。 -h&lt;行数&gt; 指定视窗的缓冲区行数。 -m 即使目前已在作业中的screen作业，仍强制建立新的screen作业。 -r&lt;作业名称&gt; 恢复离线的screen作业。 -R 先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。 -s&lt; shell &gt; 指定建立新视窗时，所要执行的shell。 -S&lt;作业名称&gt; 指定screen作业的名称。 -v 显示版本信息。 -x 恢复之前离线的screen作业。 -ls或–list 显示目前所有的screen作业。 -wipe 检查目前所有的screen作业，并删除已经无法使用的screen作业。 实例创建screen终端1screen","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"screen","slug":"Linux/系统管理/screen","permalink":"http://yoursite.com/categories/Linux/系统管理/screen/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"screen","slug":"screen","permalink":"http://yoursite.com/tags/screen/"}]},{"title":"Linux-scp","slug":"Linux-scp","date":"2019-05-02T01:54:36.825Z","updated":"2019-01-29T13:17:30.000Z","comments":true,"path":"2019/05/02/Linux-scp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-scp/","excerpt":"scp 命令Linux scp命令用于Linux之间复制文件和目录。scp是Linux系统下基于ssh登录进行安全的远程文件拷贝命令。","text":"scp 命令Linux scp命令用于Linux之间复制文件和目录。scp是Linux系统下基于ssh登录进行安全的远程文件拷贝命令。 语法123scp [-1246BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file][-l limit] [-o ssh_option] [-P port] [-S program][[user@]host1:]file1 [...] [[user@]host2:]file2 简易写法1scp [可选参数] file_source file_target 参数说明 -1： 强制scp命令使用协议ssh1 -2： 强制scp命令使用协议ssh2 -4： 强制scp命令只使用IPv4寻址 -6： 强制scp命令只使用IPv6寻址 -B： 使用批处理模式（传输过程中不询问传输口令或短语） -C： 允许压缩。（将-C标志传递给ssh，从而打开压缩功能） -p：保留原文件的修改时间，访问时间和访问权限。 -q： 不显示传输进度条。 -r： 递归复制整个目录。 -v：详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。 -c cipher： 以cipher将数据传输进行加密，这个选项将直接传递给ssh。 -F ssh_config： 指定一个替代的ssh配置文件，此参数直接传递给ssh。 -i identity_file： 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。 -l limit： 限定用户所能使用的带宽，以Kbit/s为单位。 -o ssh_option： 如果习惯于使用ssh_config(5)中的参数传递方式， -P port：注意是大写的P, port是指定数据传输用到的端口号 -S program： 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。 从本地复制到远程1234567scp local_file remote_username@remote_ip:remote_folder 或者 scp local_file remote_username@remote_ip:remote_file 或者 scp local_file remote_ip:remote_folder 或者 scp local_file remote_ip:remote_file 第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名； 第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名； 若是复制目录则为123scp -r local_folder remote_username@remote_ip:remote_folder 或者 scp -r local_folder remote_ip:remote_folder 从远程复制到本地12scp root@www.runoob.com:/home/root/others/music /home/space/music/1.mp3 scp -r www.runoob.com:/home/root/others/ /home/space/music/","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"scp","slug":"Linux/文件管理/scp","permalink":"http://yoursite.com/categories/Linux/文件管理/scp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"scp","slug":"scp","permalink":"http://yoursite.com/tags/scp/"}]},{"title":"Linux-samba","slug":"Linux-samba","date":"2019-05-02T01:54:36.818Z","updated":"2019-02-20T07:01:56.000Z","comments":true,"path":"2019/05/02/Linux-samba/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-samba/","excerpt":"samba 命令samba 命令用于Samba服务器控制。samba为script文件，可启动、停止Samba服务器或回报目前的状态。","text":"samba 命令samba 命令用于Samba服务器控制。samba为script文件，可启动、停止Samba服务器或回报目前的状态。 语法1samba [start][stop][status][restart] 参数 start 启动Samba服务器的服务。 stop 停止Samba服务器的服务。 status 显示Samba服务器目前的状态。 restart 重新启动Samba服务器。 实例启动Samba1# samba start","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"samba","slug":"Linux/网络通讯/samba","permalink":"http://yoursite.com/categories/Linux/网络通讯/samba/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"samba","slug":"samba","permalink":"http://yoursite.com/tags/samba/"}]},{"title":"Linux-rwho","slug":"Linux-rwho","date":"2019-05-02T01:54:36.813Z","updated":"2019-02-27T04:09:44.000Z","comments":true,"path":"2019/05/02/Linux-rwho/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rwho/","excerpt":"rwho 命令rwho 命令用于查看系统用户。","text":"rwho 命令rwho 命令用于查看系统用户。rwho指令的效果类似who指令，但它会显示局域网里所有主机的用户。主机必须提供rwhod常驻服务的功能，方可使用rwho指令。 语法1rwho [-a] 参数 -a 列出所有的用户，包括闲置时间超过1个小时以上的用户。 实例显示本地局域网内的所有用户1rwho","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"rwho","slug":"Linux/系统管理/rwho","permalink":"http://yoursite.com/categories/Linux/系统管理/rwho/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"rwho","slug":"rwho","permalink":"http://yoursite.com/tags/rwho/"}]},{"title":"Linux-rsh","slug":"Linux-rsh","date":"2019-05-02T01:54:36.805Z","updated":"2019-02-27T03:48:52.000Z","comments":true,"path":"2019/05/02/Linux-rsh/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rsh/","excerpt":"rsh 命令rsh 命令用于远端登入的Shell。 rsh(remote shell)提供用户环境，也就是Shell，以便指令能够在指定的远端主机上执行。","text":"rsh 命令rsh 命令用于远端登入的Shell。 rsh(remote shell)提供用户环境，也就是Shell，以便指令能够在指定的远端主机上执行。 语法1rsh [-dn][-l &lt;用户名称&gt;][主机名称或IP地址][执行指令] 参数 -d 使用Socket层级的排错功能。 -l&lt;用户名称&gt; 指定要登入远端主机的用户名称。 -n 把输入的指令号向代号为/dev/null的特殊外围设备。 实例开启rsh服务12345# chkconfig --list //检测rlogin服务是否开启# chkconfig rsh on //开启rsh服务# chkconfig -list //检测开启的服务 远程命令执行1# rsh -l hnlinux 192.168.1.88 /bin/ls //远程执行ls命令","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"rsh","slug":"Linux/系统管理/rsh","permalink":"http://yoursite.com/categories/Linux/系统管理/rsh/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"rsh","slug":"rsh","permalink":"http://yoursite.com/tags/rsh/"}]},{"title":"Linux-rpm","slug":"Linux-rpm","date":"2019-05-02T01:54:36.798Z","updated":"2019-03-01T06:08:01.000Z","comments":true,"path":"2019/05/02/Linux-rpm/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rpm/","excerpt":"rpm 命令rpm 命令用于管理套件。","text":"rpm 命令rpm 命令用于管理套件。rpm(redhat package manager) 原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM 套件管理方式的出现，让 Linux 易于安装，升级，间接提升了 Linux 的适用度。 语法1rpm [-acdhilqRsv][-b&lt;完成阶段&gt;&lt;套间档&gt;+][-e&lt;套件挡&gt;][-f&lt;文件&gt;+][-i&lt;套件档&gt;][-p&lt;套件档&gt;＋][-U&lt;套件档&gt;][-vv][--addsign&lt;套件档&gt;+][--allfiles][--allmatches][--badreloc][--buildroot&lt;根目录&gt;][--changelog][--checksig&lt;套件档&gt;+][--clean][--dbpath&lt;数据库目录&gt;][--dump][--excludedocs][--excludepath&lt;排除目录&gt;][--force][--ftpproxy&lt;主机名称或IP地址&gt;][--ftpport&lt;通信端口&gt;][--help][--httpproxy&lt;主机名称或IP地址&gt;][--httpport&lt;通信端口&gt;][--ignorearch][--ignoreos][--ignoresize][--includedocs][--initdb][justdb][--nobulid][--nodeps][--nofiles][--nogpg][--nomd5][--nopgp][--noorder][--noscripts][--notriggers][--oldpackage][--percent][--pipe&lt;执行指令&gt;][--prefix&lt;目的目录&gt;][--provides][--queryformat&lt;档头格式&gt;][--querytags][--rcfile&lt;配置档&gt;][--rebulid&lt;套件档&gt;][--rebuliddb][--recompile&lt;套件档&gt;][--relocate&lt;原目录&gt;=&lt;新目录&gt;][--replacefiles][--replacepkgs][--requires][--resign&lt;套件档&gt;+][--rmsource][--rmsource&lt;文件&gt;][--root&lt;根目录&gt;][--scripts][--setperms][--setugids][--short-circuit][--sign][--target=&lt;安装平台&gt;+][--test][--timecheck&lt;检查秒数&gt;][--triggeredby&lt;套件档&gt;][--triggers][--verify][--version][--whatprovides&lt;功能特性&gt;][--whatrequires&lt;功能特性&gt;] 参数 -a 查询所有套件。 -b&lt;完成阶段&gt;&lt;套件档&gt;+或-t &lt;完成阶段&gt;&lt;套件档&gt;+ 设置包装套件的完成阶段，并指定套件档的文件名称。 -c 只列出组态配置文件，本参数需配合”-l”参数使用。 -d 只列出文本文件，本参数需配合”-l”参数使用。 -e&lt;套件档&gt;或–erase&lt;套件档&gt; 删除指定的套件。 -f&lt;文件&gt;+ 查询拥有指定文件的套件。 -h或–hash 套件安装时列出标记。 -i 显示套件的相关信息。 -i&lt;套件档&gt;或–install&lt;套件档&gt; 安装指定的套件档。 -l 显示套件的文件列表。 -p&lt;套件档&gt;+ 查询指定的RPM套件档。 -q 使用询问模式，当遇到任何问题时，rpm指令会先询问用户。 -R 显示套件的关联性信息。 -s 显示文件状态，本参数需配合”-l”参数使用。 -U&lt;套件档&gt;或–upgrade&lt;套件档&gt; 升级指定的套件档。 -v 显示指令执行过程。 -vv 详细显示指令执行过程，便于排错。 -addsign&lt;套件档&gt;+ 在指定的套件里加上新的签名认证。 –allfiles 安装所有文件。 –allmatches 删除符合指定的套件所包含的文件。 –badreloc 发生错误时，重新配置文件。 –buildroot&lt;根目录&gt; 设置产生套件时，欲当作根目录的目录。 –changelog 显示套件的更改记录。 –checksig&lt;套件档&gt;+ 检验该套件的签名认证。 –clean 完成套件的包装后，删除包装过程中所建立的目录。 –dbpath&lt;数据库目录&gt; 设置欲存放RPM数据库的目录。 –dump 显示每个文件的验证信息。本参数需配合”-l”参数使用。 –excludedocs 安装套件时，不要安装文件。 –excludepath&lt;排除目录&gt; 忽略在指定目录里的所有文件。 –force 强行置换套件或文件。 –ftpproxy&lt;主机名称或IP地址&gt; 指定FTP代理服务器。 –ftpport&lt;通信端口&gt; 设置FTP服务器或代理服务器使用的通信端口。 –help 在线帮助。 –httpproxy&lt;主机名称或IP地址&gt; 指定HTTP代理服务器。 –httpport&lt;通信端口&gt; 设置HTTP服务器或代理服务器使用的通信端口。 –ignorearch 不验证套件档的结构正确性。 –ignoreos 不验证套件档的结构正确性。 –ignoresize 安装前不检查磁盘空间是否足够。 –includedocs 安装套件时，一并安装文件。 –initdb 确认有正确的数据库可以使用。 –justdb 更新数据库，当不变动任何文件。 –nobulid 不执行任何完成阶段。 –nodeps 不验证套件档的相互关联性。 –nofiles 不验证文件的属性。 –nogpg 略过所有GPG的签名认证。 –nomd5 不使用MD5编码演算确认文件的大小与正确性。 –nopgp 略过所有PGP的签名认证。 –noorder 不重新编排套件的安装顺序，以便满足其彼此间的关联性。 –noscripts 不执行任何安装Script文件。 –notriggers 不执行该套件包装内的任何Script文件。 –oldpackage 升级成旧版本的套件。 –percent 安装套件时显示完成度百分比。 –pipe&lt;执行指令&gt; 建立管道，把输出结果转为该执行指令的输入数据。 –prefix&lt;目的目录&gt; 若重新配置文件，就把文件放到指定的目录下。 –provides 查询该套件所提供的兼容度。 –queryformat&lt;档头格式&gt; 设置档头的表示方式。 –querytags 列出可用于档头格式的标签。 –rcfile&lt;配置文件&gt; 使用指定的配置文件。 –rebulid&lt;套件档&gt; 安装原始代码套件，重新产生二进制文件的套件。 –rebuliddb 以现有的数据库为主，重建一份数据库。 –recompile&lt;套件档&gt; 此参数的效果和指定”–rebulid”参数类似，当不产生套件档。 –relocate&lt;原目录&gt;=&lt;新目录&gt; 把本来会放到原目录下的文件改放到新目录。 –replacefiles 强行置换文件。 –replacepkgs 强行置换套件。 –requires 查询该套件所需要的兼容度。 –resing&lt;套件档&gt;+ 删除现有认证，重新产生签名认证。 –rmsource 完成套件的包装后，删除原始代码。 –rmsource&lt;文件&gt; 删除原始代码和指定的文件。 –root&lt;根目录&gt; 设置欲当作根目录的目录。 –scripts 列出安装套件的Script的变量。 –setperms 设置文件的权限。 –setugids 设置文件的拥有者和所属群组。 –short-circuit 直接略过指定完成阶段的步骤。 –sign 产生PGP或GPG的签名认证。 –target=&lt;安装平台&gt;+ 设置产生的套件的安装平台。 –test 仅作测试，并不真的安装套件。 –timecheck&lt;检查秒数&gt; 设置检查时间的计时秒数。 –triggeredby&lt;套件档&gt; 查询该套件的包装者。 –triggers 展示套件档内的包装Script。 –verify 此参数的效果和指定”-q”参数相同。 –version 显示版本信息。 –whatprovides&lt;功能特性&gt; 查询该套件对指定的功能特性所提供的兼容度。 –whatrequires&lt;功能特性&gt; 查询该套件对指定的功能特性所需要的兼容度。 实例安装软件1234# rpm -hvi dejagnu-1.4.2-10.noarch.rpm 警告：dejagnu-1.4.2-10.noarch.rpm: V3 DSA 签名：NOKEY, key ID db42a60e准备... ########################################### [100%] 显示软件安装信息123# rpm -qi dejagnu-1.4.2-10.noarch.rpm【第1次更新 教程、类似命令关联】","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"rpm","slug":"Linux/系统设置/rpm","permalink":"http://yoursite.com/categories/Linux/系统设置/rpm/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"rpm","slug":"rpm","permalink":"http://yoursite.com/tags/rpm/"}]},{"title":"Linux-rmt","slug":"Linux-rmt","date":"2019-05-02T01:54:36.792Z","updated":"2019-02-13T13:54:55.000Z","comments":true,"path":"2019/05/02/Linux-rmt/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rmt/","excerpt":"rmt 命令rmt 命令通过进程间通信远程控制磁带机。通过rmt指令，用户可通过IPC连线，远端操控磁带机的倾倒和还原操作。","text":"rmt 命令rmt 命令通过进程间通信远程控制磁带机。通过rmt指令，用户可通过IPC连线，远端操控磁带机的倾倒和还原操作。 语法1rmt","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"rmt","slug":"Linux/磁盘管理/rmt","permalink":"http://yoursite.com/categories/Linux/磁盘管理/rmt/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"rmt","slug":"rmt","permalink":"http://yoursite.com/tags/rmt/"}]},{"title":"Linux-rmmod","slug":"Linux-rmmod","date":"2019-05-02T01:54:36.785Z","updated":"2019-03-01T09:41:09.000Z","comments":true,"path":"2019/05/02/Linux-rmmod/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rmmod/","excerpt":"rmmod 命令rmmod 命令用于删除模块。","text":"rmmod 命令rmmod 命令用于删除模块。执行rmmod指令，可删除不需要的模块。Linux操作系统的核心具有模块化的特性，应此在编译核心时，务须把全部的功能都放如核心。你可以将这些功能编译成一个个单独的模块，待有需要时再分别载入它们。 语法1rmmod [-as][模块名称...] 参数 -a 删除所有目前不需要的模块。 -s 把信息输出至syslog常驻服务，而非终端机界面。 实例显示已安装的模块1lsmod 卸载模块12# rmmod -v pppoe //卸载模块pppoeChecking ppoe for persistent data 安装模块123# insmod -v pppoe &gt;1.log //安装模块~# tail -b 30 1.log //显示文件信息","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"rmmod","slug":"Linux/系统设置/rmmod","permalink":"http://yoursite.com/categories/Linux/系统设置/rmmod/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"rmmod","slug":"rmmod","permalink":"http://yoursite.com/tags/rmmod/"}]},{"title":"Linux-rmdir","slug":"Linux-rmdir","date":"2019-05-02T01:54:36.779Z","updated":"2019-02-13T13:51:53.000Z","comments":true,"path":"2019/05/02/Linux-rmdir/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rmdir/","excerpt":"rmdir 命令rmdir 命令删除空的目录。","text":"rmdir 命令rmdir 命令删除空的目录。 语法1rmdir [-p] dirName 参数 -p 是当子目录被删除后使它也成为空目录的话，则顺便一并删除。 实例将工作目录下，名为AAA的子目录删除1rmdir AAA 在工作目录下的BBB目录中，删除名为Test的子目录。若Test删除后，BBB目录成为空目录，则BBB亦予删除。1rmdir -p BBB/Test","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"rmdir","slug":"Linux/磁盘管理/rmdir","permalink":"http://yoursite.com/categories/Linux/磁盘管理/rmdir/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"rmdir","slug":"rmdir","permalink":"http://yoursite.com/tags/rmdir/"}]},{"title":"Linux-rm","slug":"Linux-rm","date":"2019-05-02T01:54:36.771Z","updated":"2019-02-06T18:32:27.000Z","comments":true,"path":"2019/05/02/Linux-rm/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rm/","excerpt":"rm 命令rm 命令用于删除一个文件或者目录。","text":"rm 命令rm 命令用于删除一个文件或者目录。 语法1rm [options] name... 参数 -i 删除前逐一询问确认。 -f 即使原档案属性设为唯读，亦直接删除，无需逐一确认。 -r 将目录及以下之档案亦逐一删除。 实例删除文件可以直接使用rm命令，若删除目录则必须配合选项“-r”123456# rm test.txt rm：是否删除 一般文件 &quot;test.txt&quot;? y # rm homework rm: 无法删除目录&quot;homework&quot;: 是一个目录 # rm -r homework rm：是否删除 目录 &quot;homework&quot;? y 删除当前目录下的所有文件及目录1rm -r * 注：文件一旦通过rm命令删除，则无法恢复，所以格外小心地使用该命令。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"rm","slug":"Linux/文件管理/rm","permalink":"http://yoursite.com/categories/Linux/文件管理/rm/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"rm","slug":"rm","permalink":"http://yoursite.com/tags/rm/"}]},{"title":"Linux-rlogin","slug":"Linux-rlogin","date":"2019-05-02T01:54:36.765Z","updated":"2019-02-27T03:44:10.000Z","comments":true,"path":"2019/05/02/Linux-rlogin/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rlogin/","excerpt":"rlogin 命令rlogin 命令用于远端登入。","text":"rlogin 命令rlogin 命令用于远端登入。执行rlogin指令开启终端机阶段操作，并登入远端主机。 语法1rlogin [-8EL][-e &lt;脱离字符&gt;][-l &lt;用户名称&gt;][主机名称或IP地址] 必要参数 -E 忽略escape字符 -8 只识别8位字的字符 -L 允许rlogin会话运行在litout模式 -ec 设置escape字符为c -c 断开连接前要求确认 -a 强制要求远程主机在发送完一个空的本地用户名之后请求一个密码 -f 向远端主机发送一个本地认证 -F 向远程主机发送一个可转寄的本地认证 -7 强制执行7为的传输 -d 打开用于远端主机通信的TCP套接口的调试 -k 要求包含远端主机的tisckets -x 启动数据传输的DES加密 -4 只使用 kerkberos的版本4的认证 选择参数 -e&lt;字符&gt; 设置退出字符 -l&lt;用户&gt; 指定登陆的用户 -t&lt;终端类型&gt; 设置终端类型 实例显示rlogin服务是否开启1chkconfig --list //检测rlogin服务是否开启 开启rlogin服务1chkconfig rlogin on //开启rlogin服务 登录远程主机1rlogin ip 指定用户名登录远程主机1rlogin ip -l username","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"rlogin","slug":"Linux/系统管理/rlogin","permalink":"http://yoursite.com/categories/Linux/系统管理/rlogin/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"rlogin","slug":"rlogin","permalink":"http://yoursite.com/tags/rlogin/"}]},{"title":"Linux-rhmask","slug":"Linux-rhmask","date":"2019-05-02T01:54:36.759Z","updated":"2019-02-07T12:36:04.000Z","comments":true,"path":"2019/05/02/Linux-rhmask/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rhmask/","excerpt":"rhmask 命令rhmask 命令用于对文件进行加密和解密操作。执行rhmask指令可制作加密过的文件，方便用户在公开的网络上传输该文件，而不至于被任意盗用。","text":"rhmask 命令rhmask 命令用于对文件进行加密和解密操作。执行rhmask指令可制作加密过的文件，方便用户在公开的网络上传输该文件，而不至于被任意盗用。 语法1rhmask [加密文件][输出文件] 或 rhmask [-d][加密文件][源文件][输出文件] 参数 -d 产生加密过的文件。 实例使用指令“rhmask”将加密文件“code.txt”进行加密，另存为输出文件“demo.txt”1rhmask code.txt demo.txt 以上命令执行成功后，文件“code.txt”将被加密后，另存为已经加密的文件“demo.txt”注：该指令有两种语法，用户可以有选择性地进行使用即可。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"rhmask","slug":"Linux/文件管理/rhmask","permalink":"http://yoursite.com/categories/Linux/文件管理/rhmask/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"rhmask","slug":"rhmask","permalink":"http://yoursite.com/tags/rhmask/"}]},{"title":"Linux-rgrep","slug":"Linux-rgrep","date":"2019-05-02T01:54:36.752Z","updated":"2019-02-10T15:51:46.000Z","comments":true,"path":"2019/05/02/Linux-rgrep/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rgrep/","excerpt":"rgrep 命令rgrep 命令用于递归查找文件里符合条件的字符串。rgrep 指令的功能和grep指令类似，可查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设rgrep指令会把含有范本样式的那一列显示出来。","text":"rgrep 命令rgrep 命令用于递归查找文件里符合条件的字符串。rgrep 指令的功能和grep指令类似，可查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设rgrep指令会把含有范本样式的那一列显示出来。 语法1rgrep [-?BcDFhHilnNrv][-R&lt;范本样式&gt;][-W&lt;列长度&gt;][-x&lt;扩展名&gt;][--help][--version][范本样式][文件或目录...] 参数 -? 显示范本样式与范例的说明。 -B 忽略二进制的数据。 -c 计算符合范本样式的列数。 -D 排错模式，只列出指令搜寻的目录清单，而不会读取文件内容。 -F 当遇到符号连接时，rgrep预设是忽略不予处理，加上本参数后，rgrep指令就会读取该连接所指向的原始文件的内容。 -h 特别将符合范本样式的字符串标示出来。 -H 只列出符合范本样式的字符串，而非显示整列的内容。 -i 忽略字符大小写的差别。 -l 列出文件内容符合指定的范本样式的文件名称。 -n 在显示符合坊本样式的那一列之前，标示出该列的列数编号。 -N 不要递归处理。 -r 递归处理，将指定目录下的所有文件及子目录一并处理。 -R&lt;范本样式&gt; 此参数的效果和指定”-r”参数类似，但只主力符合范本样式文件名称的文件。 -v 反转查找。 -W&lt;列长度&gt; 限制符合范本样式的字符串所在列，必须拥有的字符数。 -x&lt;扩展名&gt; 只处理符合指定扩展名的文件名称的文件。 –help 在线帮助。 –version 显示版本信息。 实例在当前目录下查找句子中包含“Hello”字符串的文件，可使用如下命令：1rgrep Hello * 其搜索结果如下：123$ rgrep Hello * #在当前目录下查找句子中包含“Hello”字符串的文件 testfile_1:Hello 95 #testfile_1中包含“Hello”字符串的句子 testfile_2:Hello 2005 #testfile_2中包含“Hello”字符串的句子","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"rgrep","slug":"Linux/文档编辑/rgrep","permalink":"http://yoursite.com/categories/Linux/文档编辑/rgrep/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"rgrep","slug":"rgrep","permalink":"http://yoursite.com/tags/rgrep/"}]},{"title":"Linux-restore","slug":"Linux-restore","date":"2019-05-02T01:54:36.745Z","updated":"2019-03-02T05:57:43.000Z","comments":true,"path":"2019/05/02/Linux-restore/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-restore/","excerpt":"restore 命令restore 命令用来还原由dump操作所备份下来的文件或整个文件系统（一个分区）。","text":"restore 命令restore 命令用来还原由dump操作所备份下来的文件或整个文件系统（一个分区）。restore指令所进行的操作和dump指令相反，dump操作可用来备份文件，而restore操作则是写回这些已备份的文件。 语法1restore [-cCvy][-b &lt;区块大小&gt;][-D &lt;文件系统&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;] 或 restore [-chimvy][-b &lt;区块大小&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;] 或 restore [-crvy][-b &lt;区块大小&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;] 或 restore [-cRvy][-b &lt;区块大小&gt;][-D &lt;文件系统&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;] 或 restore [chtvy][-b &lt;区块大小&gt;][-D &lt;文件系统&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;][文件...] 或 restore [-chmvxy][-b &lt;区块大小&gt;][-D &lt;文件系统&gt;][-f &lt;备份文件&gt;][-s &lt;文件编号&gt;][文件...] 参数 -b&lt;区块大小&gt; 设置区块大小，单位是Byte。 -c 不检查dump操作的备份格式，仅准许读取使用旧格式的备份文件。 -C 使用对比模式，将备份的文件与现行的文件相互对比。 -D&lt;文件系统&gt; 允许用户指定文件系统的名称。 -f&lt;备份文件&gt; 从指定的文件中读取备份数据，进行还原操作。 -h 仅解出目录而不包括与该目录相关的所有文件。 -i 使用互动模式，在进行还原操作时，restore指令将依序询问用户。 -m 解开符合指定的inode编号的文件或目录而非采用文件名称指定。 -r 进行还原操作。 -R 全面还原文件系统时，检查应从何处开始进行。 -s&lt;文件编号&gt; 当备份数据超过一卷磁带时，您可以指定备份文件的编号。 -t 指定文件名称，若该文件已存在备份文件中，则列出它们的名称。 -v 显示指令执行过程。 -x 设置文件名称，且从指定的存储媒体里读入它们，若该文件已存在在备份文件中，则将其还原到文件系统内。 -y 不询问任何问题，一律以同意回答并继续执行指令。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"restore","slug":"Linux/备份压缩/restore","permalink":"http://yoursite.com/categories/Linux/备份压缩/restore/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"restore","slug":"restore","permalink":"http://yoursite.com/tags/restore/"}]},{"title":"Linux-resize","slug":"Linux-resize","date":"2019-05-02T01:54:36.739Z","updated":"2019-03-01T07:17:50.000Z","comments":true,"path":"2019/05/02/Linux-resize/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-resize/","excerpt":"resize 命令resize 命令用于设置终端机视窗的大小。","text":"resize 命令resize 命令用于设置终端机视窗的大小。执行resize指令可设置虚拟终端机的视窗大小。 语法1resize [-cu][-s &lt;列数&gt; &lt;行数&gt;] 参数 -c 就算用户环境并非C Shell，也用C Shell指令改变视窗大小。 -s &lt;列数&gt; &lt;行数&gt; 设置终端机视窗的垂直高度和水平宽度。 -u 就算用户环境并非Bourne Shell，也用Bourne Shell指令改变视窗大小。 实例使用C shell12345[root@linux runoob]# resize -cset noglob;setenv COLUMNS &apos;99&apos;;setenv LINES &apos;34&apos;;unset noglob; 使用Bourne shell1234[root@hnlinux runoob]# resize -uCOLUMNS=99;LINES=34;export COLUMNS LINES; 设置指定大小1[root@hnlinux runoob]# resize -s 80 160","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"resize","slug":"Linux/系统设置/resize","permalink":"http://yoursite.com/categories/Linux/系统设置/resize/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"resize","slug":"resize","permalink":"http://yoursite.com/tags/resize/"}]},{"title":"Linux-reset","slug":"Linux-reset","date":"2019-05-02T01:54:36.733Z","updated":"2019-02-28T13:43:53.000Z","comments":true,"path":"2019/05/02/Linux-reset/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-reset/","excerpt":"reset 命令reset 命令其实和tset是同一个命令，它的用途是设定终端机的状态。一般而言，这个命令会自动的从环境变数、命令列或是其他的组态档决定目前终端机的型态。如果指定型态是‘？’的话，这个程序会要求使用者输入终端设备的型别。","text":"reset 命令reset 命令其实和tset是同一个命令，它的用途是设定终端机的状态。一般而言，这个命令会自动的从环境变数、命令列或是其他的组态档决定目前终端机的型态。如果指定型态是‘？’的话，这个程序会要求使用者输入终端设备的型别。由于这个程序会将终端机设回原始的状态，除了在 login 时使用外，当系统终端机因为程序不正常执行而进入一些奇怪的状态时，你也可以用它来重设终端机o 例如不小心把二进位档用 cat 指令进到终端机，常会有终端机不再回应键盘输入，或是回应一些奇怪字元的问题。此时就可以用 reset 将终端机回复至原始状态。 语法1tset [-IQqrs] [-] [-e ch] [-i ch] [-k ch] [-m mapping] [terminal] 参数 -p 将终端机类别显示在屏幕上，但不做设定的动作。这个命令可以用来取得目前终端机的类别。 -e ch 将 erase 字元设成 ch -i ch 将中断字元设成 ch -k ch 将删除一行的字元设成 ch -I 不要做设定的动作，如果没有使用选项 -Q 的话，erase、中断及删除字元的目前值依然会送到屏幕上。 -Q 不要显示 erase、中断及删除字元的值到屏幕上。 -r 将终端机类别印在屏幕上。 -s 将设定 TERM 用的命令用字串的型式送到终端机中，通常在 .login 或 .profile 中用。 实例让使用者输入一个终端机型别并终端机设到该型别的预设状态1reset ? 将erase字元设定control -h1reset -e ^B 将设定用的字串显示在屏幕上12345# reset -sErase is control-B (^B).Kill is control-U (^U).Interrupt is control-C (^C).TERM=xterm;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"reset","slug":"Linux/系统设置/reset","permalink":"http://yoursite.com/categories/Linux/系统设置/reset/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"reset","slug":"reset","permalink":"http://yoursite.com/tags/reset/"}]},{"title":"Linux-repquota","slug":"Linux-repquota","date":"2019-05-02T01:54:36.726Z","updated":"2019-02-13T15:06:09.000Z","comments":true,"path":"2019/05/02/Linux-repquota/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-repquota/","excerpt":"repquota 命令repquota 命令用于检查磁盘空间限制的状态。执行repquota指令，可报告磁盘空间限制的状况，清楚得知美味用户或每个群组已使用多少空间。","text":"repquota 命令repquota 命令用于检查磁盘空间限制的状态。执行repquota指令，可报告磁盘空间限制的状况，清楚得知美味用户或每个群组已使用多少空间。 语法1repquota [-aguv][文件系统...] 参数 -a 列出在/etc/fstab文件里，有加入quota设置的分区的使用状况，包括用户和群组。 -g 列出所有群组的磁盘空间限制。 -u 列出所有用户的磁盘空间限制。 -v 显示该用户或群组的所有空间限制。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"repquota","slug":"Linux/磁盘管理/repquota","permalink":"http://yoursite.com/categories/Linux/磁盘管理/repquota/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"repquota","slug":"repquota","permalink":"http://yoursite.com/tags/repquota/"}]},{"title":"Linux-renice","slug":"Linux-renice","date":"2019-05-02T01:54:36.719Z","updated":"2019-02-27T11:50:26.000Z","comments":true,"path":"2019/05/02/Linux-renice/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-renice/","excerpt":"renice 命令renice 命令用于重新指定一个或多个行程（process)的优先序（一个或多个将根据参数而定）。","text":"renice 命令renice 命令用于重新指定一个或多个行程（process)的优先序（一个或多个将根据参数而定）。注:每一个行程(Process)都有唯一的(unique)id。使用权限：所有使用者。 语法1renice priority [[-p] pid ...] [[-g] pgrp ...] [[-u] user ...] 参数 -p pid 重新指定行程的 id 为 pid 的行程的优先序 -g pgrp 重新指定行程群组(process group)的 id 为 pgrp 的行程 (一个或多个) 的优先序 -u user 重新指定行程拥有者为 user 的行程的优先序 实例将行程 id 为 987 及 32 的行程与行程拥有者为 daemon 及 root 的优先序号码加 11renice +1 987 -u daemon root -p 32","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"renice","slug":"Linux/系统管理/renice","permalink":"http://yoursite.com/categories/Linux/系统管理/renice/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"renice","slug":"renice","permalink":"http://yoursite.com/tags/renice/"}]},{"title":"Linux-reboot","slug":"Linux-reboot","date":"2019-05-02T01:54:36.713Z","updated":"2019-02-27T03:21:18.000Z","comments":true,"path":"2019/05/02/Linux-reboot/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-reboot/","excerpt":"reboot 命令reboot 命令用于用来重新启动计算机。","text":"reboot 命令reboot 命令用于用来重新启动计算机。若系统的runlevel为0或6，则重新开机，否则以shutdown指令（加上-r参数）来取代。 语法1reboot [-n] [-w] [-d] [-f] [-i] 参数 -n : 在重开机前不做将记忆体资料写回硬盘的动作 -w : 并不会真的重开机，只是把记录写到 /var/log/wtmp 档案里 -d : 不把记录写到 /var/log/wtmp 档案里（-n 这个参数包含了 -d） -f : 强迫重开机，不呼叫 shutdown 这个指令 -i : 在重开机之前先把所有网络相关的装置先停止 实例重新启动1reboot","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"reboot","slug":"Linux/系统管理/reboot","permalink":"http://yoursite.com/categories/Linux/系统管理/reboot/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"reboot","slug":"reboot","permalink":"http://yoursite.com/tags/reboot/"}]},{"title":"Linux-read","slug":"Linux-read","date":"2019-05-02T01:54:36.707Z","updated":"2019-02-07T13:19:43.000Z","comments":true,"path":"2019/05/02/Linux-read/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-read/","excerpt":"read 命令read 命令用于从标准输入读取数值。read 内部命令被用来从标准输入读取单行数据。这个命令可以用来读取键盘输入，当使用重定向的时候，可以读取文件中的一行数据。","text":"read 命令read 命令用于从标准输入读取数值。read 内部命令被用来从标准输入读取单行数据。这个命令可以用来读取键盘输入，当使用重定向的时候，可以读取文件中的一行数据。 语法1read [-ers] [-a aname] [-d delim] [-i text] [-n nchars] [-N nchars] [-p prompt] [-t timeout] [-u fd] [name ...] 参数 -a 后跟一个变量，该变量会被认为是个数组，然后给其赋值，默认是以空格为分割符。 -d 后面跟一个标志符，其实只有其后的第一个字符有用，作为结束的标志。 -p 后面跟提示信息，即在输入前打印提示信息。 -e 在输入的时候可以使用命令补全功能。 -n 后跟一个数字，定义输入文本的长度，很实用。 -r 屏蔽\\，如果没有该选项，则\\作为一个转义字符，有的话 \\就是个正常的字符了。 -s 安静模式，在输入字符时不再屏幕上显示，例如login时输入密码。 -t 后面跟秒数，定义输入字符的等待时间。 -u 后面跟fd，从文件描述符中读入，该文件描述符可以是exec新开启的。 实例简单读取12345678#!/bin/bash#这里默认会换行 echo &quot;输入网站名: &quot; #读取从键盘的输入 read website echo &quot;你输入的网站名是 $website&quot; exit 0 #退出 测试结果：123输入网站名: www.runoob.com你输入的网站名是 www.runoob.com -p 参数，允许在read命令行中直接指定一个提示12345#!/bin/bashread -p &quot;输入网站名:&quot; websiteecho &quot;你输入的网站名是 $website&quot; exit 0 测试结果：12输入网站名:www.runoob.com你输入的网站名是 www.runoob.com -t 参数指定read命令等待输入的秒数，当计时满时，read命令返回一个非零退出状态123456789#!/bin/bashif read -t 5 -p &quot;输入网站名:&quot; namethen echo &quot;你输入的网站名是 $website&quot;else echo &quot;\\n抱歉，你输入超时了。&quot;fiexit 0 执行程序不输入，等待5秒后：12输入网站名:抱歉，你输入超时了 除了输入时间计时，还可以使用 -n 参数设置 read 命令计数输入的字符。当输入的字符数目达到预定数目时，自动退出，并将输入的数据赋值给变量。12345678910111213#!/bin/bashread -n1 -p &quot;Do you want to continue [Y/N]?&quot; answercase $answer inY | y) echo &quot;fine ,continue&quot;;;N | n) echo &quot;ok,good bye&quot;;;*) echo &quot;error choice&quot;;;esacexit 0 该例子使用了-n 选项，后接数值 1，指示 read 命令只要接受到一个字符就退出。只要按下一个字符进行回答，read 命令立即接受输入并将其传给变量，无需按回车键。只接收 2 个输入就退出：12345#!/bin/bashread -n2 -p &quot;请随便输入两个字符: &quot; anyecho &quot;\\n您输入的两个字符是:$any&quot;exit 0 执行程序输入两个字符：12请随便输入两个字符: 12您输入的两个字符是:12 -s 选项能够使 read 命令中输入的数据不显示在命令终端上（实际上，数据是显示的，只是 read 命令将文本颜色设置成与背景相同的颜色）。输入密码常用这个选项。12345#!/bin/bashread -s -p &quot;请输入您的密码:&quot; passecho &quot;\\n您输入的密码是 $pass&quot;exit 0 执行程序输入密码后是不显示的：12请输入您的密码:您输入的密码是 runoob 读取文件每次调用 read 命令都会读取文件中的 “一行” 文本。当文件没有可读的行时，read 命令将以非零状态退出。通过什么样的方法将文件中的数据传给 read 呢？使用 cat 命令并通过管道将结果直接传送给包含 read 命令的 while 命令。测试文件 test.txt 内容如下：123123456runoob 测试代码：12345678910#!/bin/bash count=1 # 赋值语句，不加空格cat test.txt | while read line # cat 命令的输出作为read命令的输入,read读到&gt;的值放在line中do echo &quot;Line $count:$line&quot; count=$[ $count + 1 ] # 注意中括号中的空格。doneecho &quot;finish&quot;exit 0 执行结果为：1234Line 1:123Line 2:456Line 3:runoobfinish 使用 -e 参数，以下实例输入字符 a 后按下 Tab 键就会输出相关的文件名(该目录存在的)：1234$ read -e -p &quot;输入文件名:&quot; str 输入文件名:aa.out a.py a.pyc abc.txt 输入文件名:a","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"read","slug":"Linux/文件管理/read","permalink":"http://yoursite.com/categories/Linux/文件管理/read/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"read","slug":"read","permalink":"http://yoursite.com/tags/read/"}]},{"title":"Linux-rdev","slug":"Linux-rdev","date":"2019-05-02T01:54:36.697Z","updated":"2019-03-02T06:30:04.000Z","comments":true,"path":"2019/05/02/Linux-rdev/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rdev/","excerpt":"rdev 命令rdev 命令可以用来查询/设置内核映像文件的根设备，RAM 磁盘大小或视频模式。","text":"rdev 命令rdev 命令可以用来查询/设置内核映像文件的根设备，RAM 磁盘大小或视频模式。不带任何参数的 rdev 命令将输出当前根文件系统的 /etc/mtab 文件行。不带任何参数的 ramsize, vidmode, 和 rootflags 将显示帮助信息。 语法1rdev [-rsvh ] [-o offset ] [ image [value [ offset ] ] ]&lt;/p&gt; 但是随著使用者想要设定的参数的不同，底下的方式也是一样：1rdev [ -o offset ] [ image [ root_device [ offset ] ] ] 1swapdev [ -o offset ] [ image [ swap_device [ offset ] ] ] 1ramsize [ -o offset ] [ image [ size [ offset ] ] ] 1videomode [ -o offset ] [ image [ mode [ offset ] ] ] 1rootflags [ -o offset ] [ image [ flags [ offset ] ] ] 参数 -r： 使得 rdev 作为 ramsize 运行。 -R： 使得 rdev 作为 rootflags 运行。 -v： 使得 rdev 作为 vidmode 运行。 -h： 提供帮助。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"设备管理","slug":"Linux/设备管理","permalink":"http://yoursite.com/categories/Linux/设备管理/"},{"name":"rdev","slug":"Linux/设备管理/rdev","permalink":"http://yoursite.com/categories/Linux/设备管理/rdev/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"设备管理","slug":"设备管理","permalink":"http://yoursite.com/tags/设备管理/"},{"name":"rdev","slug":"rdev","permalink":"http://yoursite.com/tags/rdev/"}]},{"title":"Linux-rdate","slug":"Linux-rdate","date":"2019-05-02T01:54:36.691Z","updated":"2019-03-01T07:14:42.000Z","comments":true,"path":"2019/05/02/Linux-rdate/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rdate/","excerpt":"rdate 命令rdate 命令用于显示其他主机的日期与时间。","text":"rdate 命令rdate 命令用于显示其他主机的日期与时间。执行rdate指令，向其他主机询问系统时间并显示出来。 语法1rdate [-ps][主机名称或IP地址...] 参数 -p 显示远端主机的日期与时间。 -s 把从远端主机收到的日期和时间，回存到本地主机的系统时间。 -u 传输协议使用UDP协议 -l 使用syslog显示错误信息 -t&lt;时间&gt; 设置超时时间","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"rdate","slug":"Linux/系统设置/rdate","permalink":"http://yoursite.com/categories/Linux/系统设置/rdate/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"rdate","slug":"rdate","permalink":"http://yoursite.com/tags/rdate/"}]},{"title":"Linux-rcp","slug":"Linux-rcp","date":"2019-05-02T01:54:36.686Z","updated":"2019-02-06T18:17:57.000Z","comments":true,"path":"2019/05/02/Linux-rcp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-rcp/","excerpt":"rcp 命令rcp 命令用于复制远程或目录。rcp命令用在远端复制文件或目录，如同时指定两个以上的文件或目录，且最后一个的目的地是一个已经存在的目录，则它会把前面指定的所有文件或目录复制到该目录中。","text":"rcp 命令rcp 命令用于复制远程或目录。rcp命令用在远端复制文件或目录，如同时指定两个以上的文件或目录，且最后一个的目的地是一个已经存在的目录，则它会把前面指定的所有文件或目录复制到该目录中。 语法123rcp [-pr][源文件或目录][目标文件或目录]或rcp [-pr][源文件或目录...][目标文件] 参数 -p 保留源文件或目录的属性，包括拥有者，所属群组，权限与时间。 -r 递归处理，将指定目录下的文件与子目录一并处理。 实例使用rcp指令复制远程文件到本地进行保存。设本地主机房前账户为rootlocal，远程主机账户为root，要将远程主机（218.6.132.5）主目录下的文件“testfile”复制到本地目录“test”中1234rcp root@218.6.132.5:./testfile testfile #复制远程文件到本地 rcp root@218.6.132.5:home/rootlocal/testfile testfile #要求当前登录账户cmd 登录到远程主机 rcp 218.6.132.5:./testfile testfile 注：指令“rcp”执行以后不会有返回信息，仅需要在目录“test”下查看是否存在文件“testfile”.若存在，则表示远程复制操作成功，否则远程复制操作失败。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"rcp","slug":"Linux/文件管理/rcp","permalink":"http://yoursite.com/categories/Linux/文件管理/rcp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"rcp","slug":"rcp","permalink":"http://yoursite.com/tags/rcp/"}]},{"title":"Linux-quotaon","slug":"Linux-quotaon","date":"2019-05-02T01:54:36.679Z","updated":"2019-02-13T15:10:51.000Z","comments":true,"path":"2019/05/02/Linux-quotaon/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-quotaon/","excerpt":"quotaon 命令quotaon 命令用于开启磁盘空间限制。执行quotaon指令可开启yoghurt和群组的空间限制，各分区的文件系统根目录必须有quota.user和quota.group配置文件。","text":"quotaon 命令quotaon 命令用于开启磁盘空间限制。执行quotaon指令可开启yoghurt和群组的空间限制，各分区的文件系统根目录必须有quota.user和quota.group配置文件。 语法1quotaon [-aguv][文件系统...] 参数 -a 开启在/ect/fstab文件里，有加入quota设置的分区的空间限制。 -g 开启群组的磁盘空间限制。 -u 开启用户的磁盘空间限制。 -v 显示指令指令执行过程。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"quotaon","slug":"Linux/磁盘管理/quotaon","permalink":"http://yoursite.com/categories/Linux/磁盘管理/quotaon/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"quotaon","slug":"quotaon","permalink":"http://yoursite.com/tags/quotaon/"}]},{"title":"Linux-quotaoff","slug":"Linux-quotaoff","date":"2019-05-02T01:54:36.673Z","updated":"2019-02-13T14:56:52.000Z","comments":true,"path":"2019/05/02/Linux-quotaoff/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-quotaoff/","excerpt":"quotaoff 命令quotaoff 命令关闭磁盘空间限制。执行quotaoff指令可关闭用户和群组的磁盘空间限制。","text":"quotaoff 命令quotaoff 命令关闭磁盘空间限制。执行quotaoff指令可关闭用户和群组的磁盘空间限制。 语法1quotaoff [-aguv][文件系统...] 参数 -a 关闭在/etc/fstab文件里，有加入quota设置的分区的空间限制。 -g 关闭群组的磁盘空间限制。 -u 关闭用户的磁盘空间限制。 -v 显示指令执行过程。 实例关闭配额限制1quotaoff -a","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"quotaoff","slug":"Linux/磁盘管理/quotaoff","permalink":"http://yoursite.com/categories/Linux/磁盘管理/quotaoff/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"quotaoff","slug":"quotaoff","permalink":"http://yoursite.com/tags/quotaoff/"}]},{"title":"Linux-quotacheck","slug":"Linux-quotacheck","date":"2019-05-02T01:54:36.666Z","updated":"2019-02-13T14:52:28.000Z","comments":true,"path":"2019/05/02/Linux-quotacheck/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-quotacheck/","excerpt":"quotacheck 命令quotacheck 命令用于检查磁盘的使用空间与限制。执行quotacheck指令，扫描挂入系统的分区，并在各分区的文件系统根目录下产生quota.user和quota.group文件，设置用户和群组的磁盘空间限制。","text":"quotacheck 命令quotacheck 命令用于检查磁盘的使用空间与限制。执行quotacheck指令，扫描挂入系统的分区，并在各分区的文件系统根目录下产生quota.user和quota.group文件，设置用户和群组的磁盘空间限制。 语法1quotacheck [-adgRuv][文件系统...] 参数 -a 扫描在/etc/fstab文件里，有加入quota设置的分区。 -d 详细显示指令执行过程，便于排错或了解程序执行的情形。 -g 扫描磁盘空间时，计算每个群组识别码所占用的目录和文件数目。 -R 排除根目录所在的分区。 -u 扫描磁盘空间时，计算每个用户识别码所占用的目录和文件数目。 -v 显示指令执行过程。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"quotacheck","slug":"Linux/磁盘管理/quotacheck","permalink":"http://yoursite.com/categories/Linux/磁盘管理/quotacheck/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"quotacheck","slug":"quotacheck","permalink":"http://yoursite.com/tags/quotacheck/"}]},{"title":"Linux-quota","slug":"Linux-quota","date":"2019-05-02T01:54:36.659Z","updated":"2019-02-13T13:37:23.000Z","comments":true,"path":"2019/05/02/Linux-quota/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-quota/","excerpt":"quota 命令quota 命令用于显示磁盘已使用的空间与限制。执行quota指令，可查询磁盘空间的限制，并得知已使用多少空间。","text":"quota 命令quota 命令用于显示磁盘已使用的空间与限制。执行quota指令，可查询磁盘空间的限制，并得知已使用多少空间。 语法1quota [-quvV][用户名称...] 或 quota [-gqvV][群组名称...] 参数 -g 列出群组的磁盘空间限制。 -q 简明列表，只列出超过限制的部分。 -u 列出用户的磁盘空间限制。 -v 显示该用户或群组，在所有挂入系统的存储设备的空间限制。 -V 显示版本信息。 实例12# quota -guvs &lt;==显示目前执行者（就是 root ）的 quota 值 # quota -uvs test &lt;==显示 test 这个使用者的 quota 值","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"quota","slug":"Linux/磁盘管理/quota","permalink":"http://yoursite.com/categories/Linux/磁盘管理/quota/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"quota","slug":"quota","permalink":"http://yoursite.com/tags/quota/"}]},{"title":"Linux-pwunconv","slug":"Linux-pwunconv","date":"2019-05-02T01:54:36.651Z","updated":"2019-03-01T05:59:22.000Z","comments":true,"path":"2019/05/02/Linux-pwunconv/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-pwunconv/","excerpt":"pwunconv 命令pwunconv 命令用于关闭用户的投影密码。","text":"pwunconv 命令pwunconv 命令用于关闭用户的投影密码。执行pwunconv指令可以关闭用户投影密码，它会把密码从shadow文件内，重回存到passwdwen文件里。 语法1pwunconv 实例关闭用户的投影密码1pwunconv","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"pwunconv","slug":"Linux/系统设置/pwunconv","permalink":"http://yoursite.com/categories/Linux/系统设置/pwunconv/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"pwunconv","slug":"pwunconv","permalink":"http://yoursite.com/tags/pwunconv/"}]},{"title":"Linux-pwd","slug":"Linux-pwd","date":"2019-05-02T01:54:36.644Z","updated":"2019-02-13T13:33:39.000Z","comments":true,"path":"2019/05/02/Linux-pwd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-pwd/","excerpt":"pwd 命令pwd 命令用于显示工作目录。执行pwd指令可立刻得知您目前所在的工作目录的绝对路径名称。","text":"pwd 命令pwd 命令用于显示工作目录。执行pwd指令可立刻得知您目前所在的工作目录的绝对路径名称。 语法1pwd [--help][--version] 参数 –help 在线帮助。 –version 显示版本信息。 实例查看当前所在目录12# pwd/root/test #输出结果","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"pwd","slug":"Linux/磁盘管理/pwd","permalink":"http://yoursite.com/categories/Linux/磁盘管理/pwd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"pwd","slug":"pwd","permalink":"http://yoursite.com/tags/pwd/"}]},{"title":"Linux-pwconv","slug":"Linux-pwconv","date":"2019-05-02T01:54:36.637Z","updated":"2019-03-01T07:12:41.000Z","comments":true,"path":"2019/05/02/Linux-pwconv/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-pwconv/","excerpt":"pwconv 命令pwconv 命令用于开启用户的投影密码。","text":"pwconv 命令pwconv 命令用于开启用户的投影密码。Linux系统里的用户和群组密码，分别存放在名称为passwd和group的文件中， 这两个文件位于/etc目录下。因系统运作所需，任何人都得以读取它们，造成安全上的破绽。投影密码将文件内的密码改存在/etc目录下的shadow和gshadow文件内，只允许系统管理者读取，同时把原密码置换为”x”字符，有效的强化了系统的安全性。 语法1pwconv 实例开启用户的投影密码1pwconv","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"pwconv","slug":"Linux/系统设置/pwconv","permalink":"http://yoursite.com/categories/Linux/系统设置/pwconv/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"pwconv","slug":"pwconv","permalink":"http://yoursite.com/tags/pwconv/"}]},{"title":"Linux-pstree","slug":"Linux-pstree","date":"2019-05-02T01:54:36.628Z","updated":"2019-02-27T03:15:02.000Z","comments":true,"path":"2019/05/02/Linux-pstree/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-pstree/","excerpt":"pstree 命令pstree 命令将所有行程以树状图显示，树状图将会以 pid (如果有指定) 或是以 init 这个基本行程为根 (root)，如果有指定使用者 id，则树状图会只显示该使用者所拥有的行程。","text":"pstree 命令pstree 命令将所有行程以树状图显示，树状图将会以 pid (如果有指定) 或是以 init 这个基本行程为根 (root)，如果有指定使用者 id，则树状图会只显示该使用者所拥有的行程。使用权限：所有使用者。 语法123pstree [-a] [-c] [-h|-Hpid] [-l] [-n] [-p] [-u] [-G|-U] [pid|user]或pstree -V 参数 -a 显示该行程的完整指令及参数, 如果是被记忆体置换出去的行程则会加上括号 -c 如果有重覆的行程名, 则分开列出（预设值是会在前面加上 *） 实例显示进程的关系123456789101112131415161718192021222324252627282930$ pstree systemd-+-ModemManager---2*[&#123;ModemManager&#125;] |-NetworkManager-+-dhclient | `-2*[&#123;NetworkManager&#125;] |-accounts-daemon---2*[&#123;accounts-daemon&#125;] |-agetty |-atd |-containerd-+-containerd-shim-+-java---55*[&#123;java&#125;] | | `-10*[&#123;containerd-shim&#125;] | `-9*[&#123;containerd&#125;] |-cron |-dbus-daemon |-dockerd-+-docker-proxy---5*[&#123;docker-proxy&#125;] | `-10*[&#123;dockerd&#125;] |-lvmetad |-lxcfs---10*[&#123;lxcfs&#125;] |-networkd-dispat---&#123;networkd-dispat&#125; |-ntpd---&#123;ntpd&#125; |-polkitd---2*[&#123;polkitd&#125;] |-rsyslogd---3*[&#123;rsyslogd&#125;] |-sshd---sshd---zsh---pstree |-systemd---(sd-pam) |-systemd-journal |-systemd-logind |-systemd-resolve |-systemd-udevd |-unattended-upgr---&#123;unattended-upgr&#125; |-wpa_supplicant `-wrapper-+-java---12*[&#123;java&#125;] `-&#123;wrapper&#125; 特别表明在运行的进程1pstree -apnh //显示进程间的关系 同时显示用户名称1pstree -u //显示用户名称","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"pstree","slug":"Linux/系统管理/pstree","permalink":"http://yoursite.com/categories/Linux/系统管理/pstree/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"pstree","slug":"pstree","permalink":"http://yoursite.com/tags/pstree/"}]},{"title":"Linux-ps","slug":"Linux-ps","date":"2019-05-02T01:54:36.612Z","updated":"2019-02-26T14:34:23.000Z","comments":true,"path":"2019/05/02/Linux-ps/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ps/","excerpt":"ps 命令ps 命令用于显示当前进程（process）的状态。","text":"ps 命令ps 命令用于显示当前进程（process）的状态。 语法1ps [options] [--help] 参数 ps 的参数非常多, 在此仅列出几个常用的参数并大略介绍含义 -A 列出所有的行程 -w 显示加宽可以显示较多的资讯 -au 显示较详细的资讯 -aux 显示所有包含其他使用者的行程 au(x) 输出格式 : USER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND USER: 行程拥有者 PID: pid %CPU: 占用的 CPU 使用率 %MEM: 占用的记忆体使用率 VSZ: 占用的虚拟记忆体大小 RSS: 占用的记忆体大小 TTY: 终端的次要装置号码 (minor device number of tty) STAT: 该行程的状态: D: 不可中断的静止 (通悸□□缜b进行 I/O 动作) R: 正在执行中 S: 静止状态 T: 暂停执行 Z: 不存在但暂时无法消除 W: 没有足够的记忆体分页可分配 &lt;: 高优先序的行程 N: 低优先序的行程 L: 有记忆体分页分配并锁在记忆体内 (实时系统或捱A I/O) START: 行程开始时间 TIME: 执行的时间 COMMAND:所执行的指令 实例显示进程信息12ps -A 显示指定用户信息1ps -u root //显示root进程用户信息 显示所有进程信息，连同命令行1ps -ef","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"ps","slug":"Linux/系统管理/ps","permalink":"http://yoursite.com/categories/Linux/系统管理/ps/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"ps","slug":"ps","permalink":"http://yoursite.com/tags/ps/"}]},{"title":"Linux-procinfo","slug":"Linux-procinfo","date":"2019-05-02T01:54:36.605Z","updated":"2019-02-27T02:43:02.000Z","comments":true,"path":"2019/05/02/Linux-procinfo/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-procinfo/","excerpt":"procinfo 命令procinfo 命令用于显示系统状态。","text":"procinfo 命令procinfo 命令用于显示系统状态。procinfo(process information)指令从/proc目录里读取相关数据，将数据妥善整理过后输出到标准输出设备。 语法1procinfo [-abdDfhimsSv][-F &lt;输出文件&gt;][-n &lt;间隔秒数&gt;] 参数 -a 显示所有信息。 -b 显示磁盘设备的区块数目，而非存取数目。 -d 显示系统信息每秒间的变化差额，而非总和的数值。本参数必须配合”-f”参数使用 -D 此参数效果和指定”-d”参数类似，但内存和交换文件的信息为总和数值。 -f 进入全画面的互动式操作界面。 -F&lt;输出文件&gt; 把信息状态输出到文件保存起来，而非预设的标准输出设备。 -h 在线帮助。 -i 显示完整的IRP列表。 -m 显示系统模块和外围设备等相关信息。 -n&lt;间隔秒数&gt; 设置全画面互动模式的信息更新速度，单位以秒计算。 -s 显示系统的内存，磁盘空间，IRP和DMA等信息，此为预设值。 -S 搭配参数”-d”或”-D”使用时，每秒都会更新信息，不论是否有使用参数”-n”。 -v 显示版本信息。 实例显示系统状态1procinfo","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"procinfo","slug":"Linux/系统管理/procinfo","permalink":"http://yoursite.com/categories/Linux/系统管理/procinfo/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"procinfo","slug":"procinfo","permalink":"http://yoursite.com/tags/procinfo/"}]},{"title":"Linux-pppstats","slug":"Linux-pppstats","date":"2019-05-02T01:54:36.597Z","updated":"2019-02-20T06:59:28.000Z","comments":true,"path":"2019/05/02/Linux-pppstats/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-pppstats/","excerpt":"pppstats 命令pppstats 命令用于显示ppp连线状态。利用pppstats指令可让你得知ppp连接网络的相关信息。","text":"pppstats 命令pppstats 命令用于显示ppp连线状态。利用pppstats指令可让你得知ppp连接网络的相关信息。 语法1pppstats [-adrv][-c&lt;执行次数&gt;][-w&lt;间隔秒数&gt;][网络界面] 参数 -a 显示绝对统计值。 -c&lt;执行次数&gt; 设置回报状况的次数。 -d 显示相对统计值。 -r 显示数据包压缩比率的统计值。 -v 显示VJTCP文件头的压缩效率统计值。 -w&lt;间隔秒数&gt; 设置显示统计信息的间隔时间。 实例显示ppp的了连接状态1# pppstats","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"pppstats","slug":"Linux/网络通讯/pppstats","permalink":"http://yoursite.com/categories/Linux/网络通讯/pppstats/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"pppstats","slug":"pppstats","permalink":"http://yoursite.com/tags/pppstats/"}]},{"title":"Linux-pppsetup","slug":"Linux-pppsetup","date":"2019-05-02T01:54:36.590Z","updated":"2019-02-20T07:28:06.000Z","comments":true,"path":"2019/05/02/Linux-pppsetup/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-pppsetup/","excerpt":"pppsetup 命令pppsetup 命令用于设置ppp连线。这是Slackware发行版内附程序，它具有互动式的问答界面，让用户轻易完成PPP的连线设置。","text":"pppsetup 命令pppsetup 命令用于设置ppp连线。这是Slackware发行版内附程序，它具有互动式的问答界面，让用户轻易完成PPP的连线设置。 语法1pppsetup 实例设置ppp拨号1# pppsetup","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"pppsetup","slug":"Linux/网络通讯/pppsetup","permalink":"http://yoursite.com/categories/Linux/网络通讯/pppsetup/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"pppsetup","slug":"pppsetup","permalink":"http://yoursite.com/tags/pppsetup/"}]},{"title":"Linux-ppp-off","slug":"Linux-ppp-off","date":"2019-05-02T01:54:36.582Z","updated":"2019-02-20T06:17:29.000Z","comments":true,"path":"2019/05/02/Linux-ppp-off/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ppp-off/","excerpt":"ppp-off 命令ppp-off 命令用于关闭ppp连线。这是Slackware 发行版内附的程序，让用户切断PPP的网络连线。","text":"ppp-off 命令ppp-off 命令用于关闭ppp连线。这是Slackware 发行版内附的程序，让用户切断PPP的网络连线。 语法1ppp-off 实例关闭ppp连线1ppp-off","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"ppp-off","slug":"Linux/网络通讯/ppp-off","permalink":"http://yoursite.com/categories/Linux/网络通讯/ppp-off/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"ppp-off","slug":"ppp-off","permalink":"http://yoursite.com/tags/ppp-off/"}]},{"title":"Linux-ping","slug":"Linux-ping","date":"2019-05-02T01:54:36.572Z","updated":"2019-02-20T06:55:48.000Z","comments":true,"path":"2019/05/02/Linux-ping/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ping/","excerpt":"ping 命令ping 命令用于检测主机。执行ping指令会使用ICMP传输协议，发出要求回应的信息，若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运行正常。","text":"ping 命令ping 命令用于检测主机。执行ping指令会使用ICMP传输协议，发出要求回应的信息，若远端主机的网络功能没有问题，就会回应该信息，因而得知该主机运行正常。 语法1ping [-dfnqrRv][-c&lt;完成次数&gt;][-i&lt;间隔秒数&gt;][-I&lt;网络界面&gt;][-l&lt;前置载入&gt;][-p&lt;范本样式&gt;][-s&lt;数据包大小&gt;][-t&lt;存活数值&gt;][主机名称或IP地址] 参数 -d 使用Socket的SO_DEBUG功能。 -c&lt;完成次数&gt; 设置完成要求回应的次数。 -f 极限检测。 -i&lt;间隔秒数&gt; 指定收发信息的间隔时间。 -I&lt;网络界面&gt; 使用指定的网络界面送出数据包。 -l&lt;前置载入&gt; 设置在送出要求信息之前，先行发出的数据包。 -n 只输出数值。 -p&lt;范本样式&gt; 设置填满数据包的范本样式。 -q 不显示指令执行过程，开头和结尾的相关信息除外。 -r 忽略普通的Routing Table，直接将数据包送到远端主机上。 -R 记录路由过程。 -s&lt;数据包大小&gt; 设置数据包的大小。 -t&lt;存活数值&gt; 设置存活数值TTL的大小。 -v 详细显示指令的执行过程。 实例检测是否与主机连通123456789101112131415161718# ping www.w3cschool.cc //ping主机PING aries.m.alikunlun.com (114.80.174.110) 56(84) bytes of data.64 bytes from 114.80.174.110: icmp_seq=1 ttl=64 time=0.025 ms64 bytes from 114.80.174.110: icmp_seq=2 ttl=64 time=0.036 ms64 bytes from 114.80.174.110: icmp_seq=3 ttl=64 time=0.034 ms64 bytes from 114.80.174.110: icmp_seq=4 ttl=64 time=0.034 ms64 bytes from 114.80.174.110: icmp_seq=5 ttl=64 time=0.028 ms64 bytes from 114.80.174.110: icmp_seq=6 ttl=64 time=0.028 ms64 bytes from 114.80.174.110: icmp_seq=7 ttl=64 time=0.034 ms64 bytes from 114.80.174.110: icmp_seq=8 ttl=64 time=0.034 ms64 bytes from 114.80.174.110: icmp_seq=9 ttl=64 time=0.036 ms64 bytes from 114.80.174.110: icmp_seq=10 ttl=64 time=0.041 ms--- aries.m.alikunlun.com ping statistics ---10 packets transmitted, 30 received, 0% packet loss, time 29246msrtt min/avg/max/mdev = 0.021/0.035/0.078/0.011 ms//需要手动终止Ctrl+C 指定接收包的次数12345678910# ping -c 2 www.w3cschool.ccPING aries.m.alikunlun.com (114.80.174.120) 56(84) bytes of data.64 bytes from 114.80.174.120: icmp_seq=1 ttl=54 time=6.18 ms64 bytes from 114.80.174.120: icmp_seq=2 ttl=54 time=15.4 ms--- aries.m.alikunlun.com ping statistics ---2 packets transmitted, 2 received, 0% packet loss, time 1016msrtt min/avg/max/mdev = 6.185/10.824/15.464/4.640 ms//收到两次包后，自动退出 多参数使用123456789101112# ping -i 3 -s 1024 -t 255 g.cn //ping主机PING g.cn (203.208.37.104) 1024(1052) bytes of data.1032 bytes from bg-in-f104.1e100.net (203.208.37.104): icmp_seq=0 ttl=243 time=62.5 ms1032 bytes from bg-in-f104.1e100.net (203.208.37.104): icmp_seq=1 ttl=243 time=63.9 ms1032 bytes from bg-in-f104.1e100.net (203.208.37.104): icmp_seq=2 ttl=243 time=61.9 ms--- g.cn ping statistics ---3 packets transmitted, 3 received, 0% packet loss, time 6001msrtt min/avg/max/mdev = 61.959/62.843/63.984/0.894 ms, pipe 2[root@linux ~]# //-i 3 发送周期为 3秒 -s 设置发送包的大小 -t 设置TTL值为 255","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"ping","slug":"Linux/网络通讯/ping","permalink":"http://yoursite.com/categories/Linux/网络通讯/ping/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"ping","slug":"ping","permalink":"http://yoursite.com/tags/ping/"}]},{"title":"Linux-pico","slug":"Linux-pico","date":"2019-05-02T01:54:36.564Z","updated":"2019-02-10T15:46:06.000Z","comments":true,"path":"2019/05/02/Linux-pico/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-pico/","excerpt":"pico 命令pico 命令用于编辑文字文件。pico是个简单易用、以显示导向为主的文字编辑程序，它伴随着处理电子邮件和新闻组的程序pine而来。","text":"pico 命令pico 命令用于编辑文字文件。pico是个简单易用、以显示导向为主的文字编辑程序，它伴随着处理电子邮件和新闻组的程序pine而来。 语法1pico [-bdefghjkmqtvwxz][-n&lt;间隔秒数&gt;][-o&lt;工作目录&gt;][-r&lt;编辑页宽&gt;][-s&lt;拼字检查器&gt;][+&lt;列数编号&gt;][文件] 参数 -b 开启置换的功能。 -d 开启删除的功能。 -e 使用完整的文件名称。 -f 支持键盘上的F1、F2…等功能键。 -g 显示光标。 -h 在线帮助。 -j 开启切换的功能。 -k 预设pico在使用剪下命令时，会把光标所在的列的内容全部删除。 -m 开启鼠标支持的功能，您可用鼠标点选命令列表。 -n&lt;间隔秒数&gt; 设置多久检查一次新邮件。 -o&lt;工作目录&gt; 设置工作目录。 -q 忽略预设值。 -r&lt;编辑页宽&gt; 设置编辑文件的页宽。 -s&lt;拼字检查器&gt; 另外指定拼字检查器。 -t 启动工具模式。 -v 启动阅读模式，用户只能观看，无法编辑文件的内容。 -w 关闭自动换行，通过这个参数可以编辑内容很长的列。 -x 关闭换面下方的命令列表。 -z 让pico可被Ctrl+z中断，暂存在后台作业里。 +&lt;列数编号&gt; 执行pico指令进入编辑模式时，从指定的列数开始编辑。 实例使用pico命令来编辑testfile文件，输入以下命令：1pico testfile 输出结果如下：1234567GNU nano 2.0.9 文件: testfile #从左到右分别为编辑器版本号、文件名 #编辑区 Linux networks are becoming more and more common, but security is often an over$ Linux Network Securty focuses on securing Linux in a networked environment, whe$ [ 已读取3 行] #以下为菜单栏 ^G 求助^O 写入^R 读档^Y 上页^K 剪切文字^C 在标位置 ^X 离开^J 对齐^W 搜寻^V 下页^U 还原剪切^T 拼写检查","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"pico","slug":"Linux/文档编辑/pico","permalink":"http://yoursite.com/categories/Linux/文档编辑/pico/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"pico","slug":"pico","permalink":"http://yoursite.com/tags/pico/"}]},{"title":"Linux-patch","slug":"Linux-patch","date":"2019-05-02T01:54:36.554Z","updated":"2019-02-06T18:07:36.000Z","comments":true,"path":"2019/05/02/Linux-patch/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-patch/","excerpt":"patch 命令patch 命令用于修补文件。patch指令让用户利用设置修补文件的方式，修改、更新原始文件。倘若一次仅修改一个文件，可直接在指令列中下达指令依序执行。如果配合修补文件的方式则能一次修补大批文件，这也是Linux系统核心的升级方法之一。","text":"patch 命令patch 命令用于修补文件。patch指令让用户利用设置修补文件的方式，修改、更新原始文件。倘若一次仅修改一个文件，可直接在指令列中下达指令依序执行。如果配合修补文件的方式则能一次修补大批文件，这也是Linux系统核心的升级方法之一。 语法1patch [-bceEflnNRstTuvZ][-B &lt;备份字首字符串&gt;][-d &lt;工作目录&gt;][-D &lt;标示符号&gt;][-F &lt;监别列数&gt;][-g &lt;控制数值&gt;][-i &lt;修补文件&gt;][-o &lt;输出文件&gt;][-p &lt;剥离层级&gt;][-r &lt;拒绝文件&gt;][-V &lt;备份方式&gt;][-Y &lt;备份字首字符串&gt;][-z &lt;备份字尾字符串&gt;][--backup-if -mismatch][--binary][--help][--nobackup-if-mismatch][--verbose][原始文件 &lt;修补文件&gt;] 或 path [-p &lt;剥离层级&gt;] &lt; [修补文件] 参数 -b或–backup 备份每一个原始文件。 -B&lt;备份字首字符串&gt;或–prefix=&lt;备份字首字符串&gt; 设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称。 -c或–context 把修补数据解译成关联性的差异。 -d&lt;工作目录&gt;或–directory=&lt;工作目录&gt; 设置工作目录。 -D&lt;标示符号&gt;或–ifdef=&lt;标示符号&gt; 用指定的符号把改变的地方标示出来。 -e或–ed 把修补数据解译成ed指令可用的叙述文件。 -E或–remove-empty-files 若修补过后输出的文件其内容是一片空白，则移除该文件。 -f或–force 此参数的效果和指定”-t”参数类似，但会假设修补数据的版本为新 版本。 -F&lt;监别列数&gt;或–fuzz&lt;监别列数&gt; 设置监别列数的最大值。 -g&lt;控制数值&gt;或–get=&lt;控制数值&gt; 设置以RSC或SCCS控制修补作业。 -i&lt;修补文件&gt;或–input=&lt;修补文件&gt; 读取指定的修补问家你。 -l或–ignore-whitespace 忽略修补数据与输入数据的跳格，空格字符。 -n或–normal 把修补数据解译成一般性的差异。 -N或–forward 忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使 用过。 -o&lt;输出文件&gt;或–output=&lt;输出文件&gt; 设置输出文件的名称，修补过的文件会以该名称存放。 -p&lt;剥离层级&gt;或–strip=&lt;剥离层级&gt; 设置欲剥离几层路径名称。 -f&lt;拒绝文件&gt;或–reject-file=&lt;拒绝文件&gt; 设置保存拒绝修补相关信息的文件名称，预设的文件名称为.rej。 -R或–reverse 假设修补数据是由新旧文件交换位置而产生。 -s或–quiet或–silent 不显示指令执行过程，除非发生错误。 -t或–batch 自动略过错误，不询问任何问题。 -T或–set-time 此参数的效果和指定”-Z”参数类似，但以本地时间为主。 -u或–unified 把修补数据解译成一致化的差异。 -v或–version 显示版本信息。 -V&lt;备份方式&gt;或–version-control=&lt;备份方式&gt; 用”-b”参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用”-z”参数变更，当使用”-V”参数指定不同备份方式时，也会产生不同字尾的备份字符串。 -Y&lt;备份字首字符串&gt;或–basename-prefix=–&lt;备份字首字符串&gt; 设置文件备份时，附加在文件基本名称开头的字首字符串。 -z&lt;备份字尾字符串&gt;或–suffix=&lt;备份字尾字符串&gt; 此参数的效果和指定”-B”参数类似，差别在于修补作业使用的路径与文件名若为src/linux/fs/super.c，加上”backup/“字符串后，文件super.c会备份于/src/linux/fs/backup目录里。 -Z或–set-utc 把修补过的文件更改，存取时间设为UTC。 –backup-if-mismatch 在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件。 –binary 以二进制模式读写数据，而不通过标准输出设备。 –help 在线帮助。 –nobackup-if-mismatch 在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件。 –verbose 详细显示指令的执行过程。 实例使用patch指令将文件”testfile1”升级，其升级补丁文件为”testfile.patch”，输入如下命令：1$ patch -p0 testfile1 testfile.patch #使用补丁程序升级文件 使用该命令前，可以先使用指令”cat”查看”testfile1”的内容。在需要修改升级的文件与原文件之间使用指令”diff”比较可以生成补丁文件。具体操作如下所示：12345678910111213141516171819202122$ cat testfile1 #查看testfile1的内容 Hello,This is the firstfile! $ cat testfile2 #查看testfile2的内容 Hello,Thisisthesecondfile! $ diff testfile1 testfile2 #比较两个文件 1c1 &lt;Hello,Thisisthefirstfile! --- &gt;Hello,Thisisthesecondfile! #将比较结果保存到tetsfile.patch文件 $ diff testfile1 testfile2&gt;testfile.patch $ cat testfile.patch #查看补丁包的内容 1c1 &lt;Hello,Thisisthefirstfile! --- &gt;Hello,Thisisthesecondfile! #使用补丁包升级testfile1文件 $ patch -p0 testfile1 testfile.patch patching file testfile1 $cat testfile1 #再次查看testfile1的内容 #testfile1文件被修改为与testfile2一样的内容 Hello,This is the secondfile! 注意：上述命令代码中，”$ diff testfile1 testfile2&gt;testfile. patch”所使用的操作符”＞”表示将该操作符左边的文件数据写入到右边所指向的文件中。在这里，即是指将两个文件比较后的结果写入到文件”testfile.patch”中。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"patch","slug":"Linux/文件管理/patch","permalink":"http://yoursite.com/categories/Linux/文件管理/patch/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"patch","slug":"patch","permalink":"http://yoursite.com/tags/patch/"}]},{"title":"Linux-paste","slug":"Linux-paste","date":"2019-05-02T01:54:36.547Z","updated":"2019-02-06T17:53:16.000Z","comments":true,"path":"2019/05/02/Linux-paste/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-paste/","excerpt":"paste 命令paste 命令用于合并文件的列。paste指令会把每个文件以列对列的方式，一列一列地加以合并。","text":"paste 命令paste 命令用于合并文件的列。paste指令会把每个文件以列对列的方式，一列一列地加以合并。 语法1paste [-s][-d &lt;间隔字符&gt;][--help][--version][文件...] 参数 -d&lt;间隔字符&gt;或–delimiters=&lt;间隔字符&gt; 用指定的间隔字符取代跳格字符。 -s或–serial 串列进行而非平行处理。 –help 在线帮助。 –version 显示帮助信息。 [文件…] 指定操作的文件路径 实例使用paste指令将文件”file”、”testfile”、”testfile1”进行合并，输入如下命令：1paste file testfile testfile1 #合并指定文件的内容 但是，在执行以上命令之前，首先使用”cat”指令对3个文件内容进行查看，显示如下所示：123456789$ cat file #file文件的内容 xiongdan 200 lihaihui 233 lymlrl 231 $ cat testfile #testfile文件的内容 liangyuanm ss $ cat testfile1 #testfile1文件的内容 huanggai 56 zhixi 73 当合并指令”$ paste file testfile testfile1”执行后，程序界面中将显示合并后的文件内容，如下所示：123456xiongdan 200 lihaihui 233 lymlrl 231 liangyuanm ss huanggai 56 zhixi 73 若使用paste指令的参数”-s”，则可以将一个文件中的多行数据合并为一行进行显示。例如，将文件”file”中的3行数据合并为一行数据进行显示，输入如下命令1$ paste -s file #合并指定文件的多行数据 上面的命令执行后，显示的数据内容如下所示：1xiongdan 200 lihaihui 233 lymlrl 231 注意：参数”-s”只是将testfile文件的内容调整显示方式，并不会改变原文件的内容格式。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"paste","slug":"Linux/文件管理/paste","permalink":"http://yoursite.com/categories/Linux/文件管理/paste/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"paste","slug":"paste","permalink":"http://yoursite.com/tags/paste/"}]},{"title":"Linux-passwd","slug":"Linux-passwd","date":"2019-05-02T01:54:36.538Z","updated":"2019-03-01T07:33:25.000Z","comments":true,"path":"2019/05/02/Linux-passwd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-passwd/","excerpt":"passwd 命令passwd 命令用来更改使用者的密码。","text":"passwd 命令passwd 命令用来更改使用者的密码。 语法1passwd [-k] [-l] [-u [-f]] [-d] [-S] [username] 必要参数 -d 删除密码 -f 强制执行 -k 更新只能发送在过期之后 -l 停止账号使用 -S 显示密码信息 -u 启用已被停止的账户 -x 设置密码的有效期 -g 修改群组密码 -i 过期后停止用户账号 选择参数 –help 显示帮助信息 –version 显示版本信息 实例修改用户密码 12345# passwd runoob //设置runoob用户的密码Enter new UNIX password: //输入新密码，输入的密码无回显Retype new UNIX password: //确认密码passwd: password updated successfully# 显示账号密码信息 12# passwd -S runoobrunoob P 05/13/2010 0 99999 7 -1 删除用户密码 12# passwd -d lx138 passwd: password expiry information changed.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"passwd","slug":"Linux/系统设置/passwd","permalink":"http://yoursite.com/categories/Linux/系统设置/passwd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"passwd","slug":"passwd","permalink":"http://yoursite.com/tags/passwd/"}]},{"title":"Linux-od","slug":"Linux-od","date":"2019-05-02T01:54:36.533Z","updated":"2019-02-06T17:48:58.000Z","comments":true,"path":"2019/05/02/Linux-od/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-od/","excerpt":"od 命令od 命令用于输出文件内容。od指令会读取所给予的文件的内容，并将其内容以八进制字码呈现出来。","text":"od 命令od 命令用于输出文件内容。od指令会读取所给予的文件的内容，并将其内容以八进制字码呈现出来。 语法1od [-abcdfhilovx][-A &lt;字码基数&gt;][-j &lt;字符数目&gt;][-N &lt;字符数目&gt;][-s &lt;字符串字符数&gt;][-t &lt;输出格式&gt;][-w &lt;每列字符数&gt;][--help][--version][文件...] 参数 -a 此参数的效果和同时指定”-ta”参数相同。 -A&lt;字码基数&gt; 选择要以何种基数计算字码。 -b 此参数的效果和同时指定”-toC”参数相同。 -c 此参数的效果和同时指定”-tC”参数相同。 -d 此参数的效果和同时指定”-tu2”参数相同。 -f 此参数的效果和同时指定”-tfF”参数相同。 -h 此参数的效果和同时指定”-tx2”参数相同。 -i 此参数的效果和同时指定”-td2”参数相同。 -j&lt;字符数目&gt;或–skip-bytes=&lt;字符数目&gt; 略过设置的字符数目。 -l 此参数的效果和同时指定”-td4”参数相同。 -N&lt;字符数目&gt;或–read-bytes=&lt;字符数目&gt; 到设置的字符数目为止。 -o 此参数的效果和同时指定”-to2”参数相同。 -s&lt;字符串字符数&gt;或–strings=&lt;字符串字符数&gt; 只显示符合指定的字符数目的字符串。 -t&lt;输出格式&gt;或–format=&lt;输出格式&gt; 设置输出格式。 -v或–output-duplicates 输出时不省略重复的数据。 -w&lt;每列字符数&gt;或–width=&lt;每列字符数&gt; 设置每列的最大字符数。 -x 此参数的效果和同时指定”-h”参数相同。 –help 在线帮助。 –version 显示版本信息。 实例创建tmp文件123$ echo abcdef g &gt; tmp$ cat tmpabcdef g 使用od命令123$ od -b tmp0000000 141 142 143 144 145 146 040 147 0120000011 使用单字节八进制解释进行输出，注意左侧的默认地址格式为八字节123$ od -c tmp0000000 a b c d e f g \\n0000011 使用ASCII码进行输出，注意其中包括转义字符123$ od -t d1 tmp0000000 97 98 99 100 101 102 32 103 100000011 使用单字节十进制进行解释123$ od -A d -c tmp0000000 a b c d e f g \\n0000009","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"od","slug":"Linux/文件管理/od","permalink":"http://yoursite.com/categories/Linux/文件管理/od/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"od","slug":"od","permalink":"http://yoursite.com/tags/od/"}]},{"title":"Linux-ntsysv","slug":"Linux-ntsysv","date":"2019-05-02T01:54:36.525Z","updated":"2019-03-01T06:56:49.000Z","comments":true,"path":"2019/05/02/Linux-ntsysv/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ntsysv/","excerpt":"ntsysv 命令ntsysv 命令用于设置系统的各种服务。","text":"ntsysv 命令ntsysv 命令用于设置系统的各种服务。这是Red Hat公司遵循GPL规则所开发的程序，它具有互动式操作界面，您可以轻易地利用方向键和空格键等，开启，关闭操作系统在每个执行等级中，所要执行的系统服务。 语法1ntsysv [--back][--level &lt;等级代号&gt;] 参数 –back 在互动式界面里，显示Back钮，而非Cancel钮。 –level &lt;等级代号&gt; 在指定的执行等级中，决定要开启或关闭哪些系统服务。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"ntsysv","slug":"Linux/系统设置/ntsysv","permalink":"http://yoursite.com/categories/Linux/系统设置/ntsysv/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"ntsysv","slug":"ntsysv","permalink":"http://yoursite.com/tags/ntsysv/"}]},{"title":"Linux-nice","slug":"Linux-nice","date":"2019-05-02T01:54:36.519Z","updated":"2019-02-26T14:41:15.000Z","comments":true,"path":"2019/05/02/Linux-nice/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-nice/","excerpt":"nice 命令nice 命令以更改过的优先序来执行程序，如果未指定程序，则会印出目前的排程优先序，内定的adjustment为10，范围为-20（最高优先序）到19（最低优先序）。","text":"nice 命令nice 命令以更改过的优先序来执行程序，如果未指定程序，则会印出目前的排程优先序，内定的adjustment为10，范围为-20（最高优先序）到19（最低优先序）。使用权限：所有使用者。 语法1nice [-n adjustment] [-adjustment] [--adjustment=adjustment] [--help] [--version] [command [arg...]] 参数 -n adjustment, -adjustment, –adjustment=adjustment 皆为将该原有优先序的增加 adjustment –help 显示求助讯息 –version 显示版本资讯 实例设置程序运行是的优先级123456789101112131415161718192021222324# vi &amp; //后台运行[1] 15297# nice vi &amp; //设置默认优先级[2] 15298[1]+ Stopped vi# nice -n 19 vi &amp; //设置优先级为19[3] 15299[2]+ Stopped nice vi# nice -n -20 vi &amp; //设置优先级为 -20[4] 15300[3]+ Stopped nice -n 19 vi# ps -l //显示进程F S UID PID PPID C PRI NI ADDR SZ WCHAN TTY TIME CMD4 S 0 15278 15212 0 80 0 - 1208 wait pts/2 00:00:00 bash0 T 0 15297 15278 0 80 0 - 2687 signal pts/2 00:00:00 vi0 T 0 15298 15278 0 90 10 - 2687 signal pts/2 00:00:00 vi0 T 0 15299 15278 1 99 19 - 2687 signal pts/2 00:00:00 vi4 T 0 15300 15278 3 60 -20 - 2687 signal pts/2 00:00:00 vi4 R 0 15301 15278 0 80 0 - 625 - pts/2 00:00:00 ps[4]+ Stopped nice -n -20 vi 将ls的优先序加1并执行1nice -n 1 ls 将ls的优先序加10并执行1nice ls 注意：优先序 (priority) 为操作系统用来决定 CPU 分配的参数，Linux 使用『回合制(round-robin)』的演算法来做 CPU 排程，优先序越高，所可能获得的 CPU时间就越多。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"nice","slug":"Linux/系统管理/nice","permalink":"http://yoursite.com/categories/Linux/系统管理/nice/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"nice","slug":"nice","permalink":"http://yoursite.com/tags/nice/"}]},{"title":"Linux-newgrp","slug":"Linux-newgrp","date":"2019-05-02T01:54:36.513Z","updated":"2019-02-27T12:30:25.000Z","comments":true,"path":"2019/05/02/Linux-newgrp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-newgrp/","excerpt":"newgrp 命令newgrp 命令用于登入另一个群组。","text":"newgrp 命令newgrp 命令用于登入另一个群组。newgrp指令类似login指令，当它是以相同的帐号，另一个群组名称，再次登入系统。欲使用newgrp指令切换群组，您必须是该群组的用户，否则将无法登入指定的群组。单一用户要同时隶属多个群组，需利用交替用户的设置。若不指定群组名称，则newgrp指令会登入该用户名称的预设群组。 语法1newgrp [群组名称] 实例改变群组 1newgrp root","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"newgrp","slug":"Linux/系统管理/newgrp","permalink":"http://yoursite.com/categories/Linux/系统管理/newgrp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"newgrp","slug":"newgrp","permalink":"http://yoursite.com/tags/newgrp/"}]},{"title":"Linux-newaliases","slug":"Linux-newaliases","date":"2019-05-02T01:54:36.507Z","updated":"2019-02-20T07:15:09.000Z","comments":true,"path":"2019/05/02/Linux-newaliases/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-newaliases/","excerpt":"newaliases 命令newaliases 命令会使用一个在 /etc/aliases 中的档案做使用者名称转换的动作。当 sendmail 收到一个要送给 xxx 的信时，它会依据 aliases档的内容送给另一个使用者。","text":"newaliases 命令newaliases 命令会使用一个在 /etc/aliases 中的档案做使用者名称转换的动作。当 sendmail 收到一个要送给 xxx 的信时，它会依据 aliases档的内容送给另一个使用者。 这个功能可以创造一个只有在信件系统内才有效的使用者。例如 mailing list 就会用到这个功能，在 mailinglist 中，我们可能会创造一个叫 redlinux@link.ece.uci.edu 的 mailinglist，但实际上并没有一个叫 redlinux 的使用者。实际 aliases 档的内容是将送给这个使用者的信都收给 mailing list 处理程序负责分送的工作。/etc/aliases 是一个文字模式的档案，sendmail 需要一个二进位格式的 /etc/aliases.db。newaliases 的功能传是将 /etc/aliases 转换成一个 sendmail 所能了解的数据库。使用权限：系统管理者。 语法1newaliases 实例1# newaliases 下面命令会做相同的事1# sendmail -bi","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"newaliases","slug":"Linux/网络通讯/newaliases","permalink":"http://yoursite.com/categories/Linux/网络通讯/newaliases/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"newaliases","slug":"newaliases","permalink":"http://yoursite.com/tags/newaliases/"}]},{"title":"Linux-netstat","slug":"Linux-netstat","date":"2019-05-02T01:54:36.500Z","updated":"2019-02-20T06:52:01.000Z","comments":true,"path":"2019/05/02/Linux-netstat/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-netstat/","excerpt":"netstat 命令netstat 命令用于显示网络状态。利用netstat指令可让你得知整个Linux系统的网络状况。","text":"netstat 命令netstat 命令用于显示网络状态。利用netstat指令可让你得知整个Linux系统的网络状况。 语法1netstat [-acCeFghilMnNoprstuvVwx][-A&lt;网络类型&gt;][--ip] 参数 -a或–all 显示所有连线中的Socket。 -A&lt;网络类型&gt;或–&lt;网络类型&gt; 列出该网络类型连线中的相关地址。 -c或–continuous 持续列出网络状态。 -C或–cache 显示路由器配置的快取信息。 -e或–extend 显示网络其他相关信息。 -F或–fib 显示FIB。 -g或–groups 显示多重广播功能群组组员名单。 -h或–help 在线帮助。 -i或–interfaces 显示网络界面信息表单。 -l或–listening 显示监控中的服务器的Socket。 -M或–masquerade 显示伪装的网络连线。 -n或–numeric 直接使用IP地址，而不通过域名服务器。 -N或–netlink或–symbolic 显示网络硬件外围设备的符号连接名称。 -o或–timers 显示计时器。 -p或–programs 显示正在使用Socket的程序识别码和程序名称。 -r或–route 显示Routing Table。 -s或–statistice 显示网络工作信息统计表。 -t或–tcp 显示TCP传输协议的连线状况。 -u或–udp 显示UDP传输协议的连线状况。 -v或–verbose 显示指令执行过程。 -V或–version 显示版本信息。 -w或–raw 显示RAW传输协议的连线状况。 -x或–unix 此参数的效果和指定”-A unix”参数相同。 –ip或–inet 此参数的效果和指定”-A inet”参数相同。 实例显示详细的网络状况1netstat -a 显示当前户籍UDP连接状况1netstat -nu 显示UDP端口号的使用情况12345678910111213141516# netstat -apuActive Internet connections (servers and established)Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name udp 0 0 *:32768 *:* - udp 0 0 *:nfs *:* - udp 0 0 *:641 *:* 3006/rpc.statd udp 0 0 192.168.0.3:netbios-ns *:* 3537/nmbd udp 0 0 *:netbios-ns *:* 3537/nmbd udp 0 0 192.168.0.3:netbios-dgm *:* 3537/nmbd udp 0 0 *:netbios-dgm *:* 3537/nmbd udp 0 0 *:tftp *:* 3346/xinetd udp 0 0 *:999 *:* 3366/rpc.rquotad udp 0 0 *:sunrpc *:* 2986/portmap udp 0 0 *:ipp *:* 6938/cupsd udp 0 0 *:1022 *:* 3392/rpc.mountd udp 0 0 *:638 *:* 3006/rpc.statd 显示网卡列表1netstat -i 显示组播组的关系1netstat -g 显示网络统计信息1netstat -s 显示监听的套接口1netstat -l","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"netstat","slug":"Linux/网络通讯/netstat","permalink":"http://yoursite.com/categories/Linux/网络通讯/netstat/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"netstat","slug":"netstat","permalink":"http://yoursite.com/tags/netstat/"}]},{"title":"Linux-netconfig","slug":"Linux-netconfig","date":"2019-05-02T01:54:36.492Z","updated":"2019-02-20T06:19:42.000Z","comments":true,"path":"2019/05/02/Linux-netconfig/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-netconfig/","excerpt":"netconfig 命令netconfig 命令用于设置网络环境。这是Slackware 发行版内附程序，它具有互动式的问答界面，让用户轻易完成网络环境的设置。","text":"netconfig 命令netconfig 命令用于设置网络环境。这是Slackware 发行版内附程序，它具有互动式的问答界面，让用户轻易完成网络环境的设置。 语法1netconfig","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"netconfig","slug":"Linux/网络通讯/netconfig","permalink":"http://yoursite.com/categories/Linux/网络通讯/netconfig/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"netconfig","slug":"netconfig","permalink":"http://yoursite.com/tags/netconfig/"}]},{"title":"Linux-netconf","slug":"Linux-netconf","date":"2019-05-02T01:54:36.486Z","updated":"2019-02-20T07:19:28.000Z","comments":true,"path":"2019/05/02/Linux-netconf/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-netconf/","excerpt":"netconf 命令netconf 命令用于设置各项网络功能。netconf是Red Hat Linux发行版专门用来调整Linux各项设置的程序。","text":"netconf 命令netconf 命令用于设置各项网络功能。netconf是Red Hat Linux发行版专门用来调整Linux各项设置的程序。 语法1netconf","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"netconf","slug":"Linux/网络通讯/netconf","permalink":"http://yoursite.com/categories/Linux/网络通讯/netconf/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"netconf","slug":"netconf","permalink":"http://yoursite.com/tags/netconf/"}]},{"title":"Linux-ncftp","slug":"Linux-ncftp","date":"2019-05-02T01:54:36.480Z","updated":"2019-02-12T14:37:37.000Z","comments":true,"path":"2019/05/02/Linux-ncftp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ncftp/","excerpt":"ncftp 命令ncftp 命令用于传输文件。ftp让用户得以下载存放于服务器主机的文件，也能将文件上传到远端主机放置。NcFTP是文字模式ftp程序的佼佼者，它具备多样特色，包括显示传输速率，下载进度，自动续传，标注书签，可通过防火墙和代理服务器。当不指定用户名时，ncftp命令会自动尝试使用匿名帐户anonymous去连接远程ftp服务器，不需要用户输入账号和密码。","text":"ncftp 命令ncftp 命令用于传输文件。ftp让用户得以下载存放于服务器主机的文件，也能将文件上传到远端主机放置。NcFTP是文字模式ftp程序的佼佼者，它具备多样特色，包括显示传输速率，下载进度，自动续传，标注书签，可通过防火墙和代理服务器。当不指定用户名时，ncftp命令会自动尝试使用匿名帐户anonymous去连接远程ftp服务器，不需要用户输入账号和密码。 语法1ncftp [主机或IP地址] 参数 -u&lt;用户名&gt; 指定登录FTP服务器的用户名 -p&lt;密码&gt; 设置用户密码 -P&lt;端口号&gt; 指定FTP端口号，默认为21 -j&lt;账号&gt; 指定账号 -h 帮助信息 -v 版本信息 实例使用ncftp命令匿名连接FTP服务器。例如想匿名连接ftp.kernel.org服务器，同时不想输入anonymous等匿名用户名，可直接使用ncftp命令：1ncftp ftp.kernel.org 得到如下信息：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647$ ncftp ftp.kernel.org #匿名连接ftp.kernel.org服务器 NcFTP 3.2.1 (Jul 29, 2007) by Mike Gleason (http://www.NcFTP.com/contact/). #ncftp版权、版本等信息 Copyright (c) 1992-2005 by Mike Gleason. All rights reserved. Connecting to 149.20.20.133... #连接服务器 Welcome to ftp.kernel.org. Logging in... #匿名登录 Welcome to the #欢迎信息 LINUX KERNEL ARCHIVES ftp.kernel.org &quot;Much more than just kernels&quot; IF YOU&apos;RE ACCESSING THIS SITE VIA A WEB BROWSER PLEASE USE THE HTTP URL BELOW INSTEAD! ----&gt; If you are looking for mirror sites, please go &lt;---- ----&gt; to mirrors.kernel.org instead &lt;---- This site is provided as a public service by the Linux Kernel Organization, a California nonprofit corporation. Bandwidth is provided by The Internet Software Consortium, Inc. Our servers are located in San Francisco and Palo Alto, California; Corvallis, Oregon; Amsterdam, Netherlands and Ume., Sweden; use in violation of any applicable laws strictly prohibited. Due to U.S. Exports Regulations, all cryptographic software on this site is subject to the following legal notice: This site includes publicly available encryption source code which, together with object code resulting from the compiling of publicly available source code, may be exported from the United States under License Exception &quot;TSU&quot; pursuant to 15 C.F.R. Section 740.13(e). This legal notice applies to cryptographic software only. Please see the Bureau of Industry and Security (http://www.bis.doc.gov/) for more information about current U.S. regulations. Neither the Linux Kernel Organization, nor its sponsors make any guarantees, explicit or implicit, about the contents of this site. Use at your own risk. This site is accessible via the following mechanisms: FTP ftp://ftp.kernel.org/pub/ HTTP http://www.kernel.org/pub/ RSYNC rsync://rsync.kernel.org/pub/ NFS and SMB/CIFS are no longer available. For comments on this site, please contact &lt;ftpadmin@kernel.org&gt;. Please do not use this address for questions that are not related to the operation of this site. Please see our homepage at http://www.kernel.org/ for links to Linux documentation resources. Login successful. Logged in to ftp.kernel.org. ncftp / &gt; 提示：ncftp的命令提示符为”ncftp / &gt;”，而不是ftp中的”ftp / &gt;”。使用ncftp命令操作、下载文件。ncftp的命令基本上与ftp相同，例如可以使用”cd”命令切换在FTP服务器中的当前目录，使用”ls”命令列出当前目录内容，使用”get”命令下载”/pub”目录下的README文件、使用”quit”离开ncftp等。操作结果如下：12345678910111213141516ncftp / &gt; pwd #查看当前路径 ftp://ftp.kernel.org #当前路径为根目录 ncftp / &gt; ls #查看当前目录列表 bin/ for_mirrors_only/ pub/ dev/ lib/ usr@ etc/ lost+found/ welcome.msg@ ncftp / &gt; cd pub #切换目录到pub 子目录 Directory successfully changed. ncftp /pub &gt; ls #查看pub 的目录列表 dist/ media/ scm/ index.html RCS/ site/ linux/ README software/ lost+found/ README_ABOUT_BZ2_FILES tools/ ncftp /pub &gt; get README #下载README 文件 README: 1.87 KB 10.39 KB/s ncftp /pub &gt; quit #离开ncftp 与ftp不同的是，ncftp此时会提示用户是否将FTP服务器保存为书签，以便于下次登录，用户可以进行自定义书签名等操作，如下所示：123456You have not saved a bookmark for this site. #离开提示信息 Would you like to save a bookmark to: ftp://ftp.kernel.org/pub/ Save? (yes/no) yes #确认是否保存 Enter a name for this bookmark, or hit enter for &quot;kernel&quot;: kernel #输入书签名 Bookmark &quot;kernel&quot; saved.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"ncftp","slug":"Linux/文件传输/ncftp","permalink":"http://yoursite.com/categories/Linux/文件传输/ncftp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"ncftp","slug":"ncftp","permalink":"http://yoursite.com/tags/ncftp/"}]},{"title":"Linux-nc","slug":"Linux-nc","date":"2019-05-02T01:54:36.472Z","updated":"2019-02-20T06:22:59.000Z","comments":true,"path":"2019/05/02/Linux-nc/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-nc/","excerpt":"nc 命令nc 命令用于设置路由器。执行本指令可设置路由器的相关参数。","text":"nc 命令nc 命令用于设置路由器。执行本指令可设置路由器的相关参数。 语法1nc [-hlnruz][-g&lt;网关...&gt;][-G&lt;指向器数目&gt;][-i&lt;延迟秒数&gt;][-o&lt;输出文件&gt;][-p&lt;通信端口&gt;][-s&lt;来源位址&gt;][-v...][-w&lt;超时秒数&gt;][主机名称][通信端口...] 参数 -g&lt;网关&gt; 设置路由器跃程通信网关，最多可设置8个。 -G&lt;指向器数目&gt; 设置来源路由指向器，其数值为4的倍数。 -h 在线帮助。 -i&lt;延迟秒数&gt; 设置时间间隔，以便传送信息及扫描通信端口。 -l 使用监听模式，管控传入的资料。 -n 直接使用IP地址，而不通过域名服务器。 -o&lt;输出文件&gt; 指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存。 -p&lt;通信端口&gt; 设置本地主机使用的通信端口。 -r 乱数指定本地与远端主机的通信端口。 -s&lt;来源位址&gt; 设置本地主机送出数据包的IP地址。 -u 使用UDP传输协议。 -v 显示指令执行过程。 -w&lt;超时秒数&gt; 设置等待连线的时间。 -z 使用0输入/输出模式，只在扫描通信端口时使用。 实例TCP端口扫描12345# nc -v -z -w2 192.168.0.3 1-100 192.168.0.3: inverse host lookup failed: Unknown host(UNKNOWN) [192.168.0.3] 80 (http) open(UNKNOWN) [192.168.0.3] 23 (telnet) open(UNKNOWN) [192.168.0.3] 22 (ssh) open 扫描192.168.0.3 的端口 范围是 1-100扫描UDP端口1# nc -u -z -w2 192.168.0.1 1-1000 //扫描192.168.0.3 的端口 范围是 1-1000 扫描指定端口123# nc -nvv 192.168.0.1 80 //扫描 80端口(UNKNOWN) [192.168.0.1] 80 (?) openy //用户输入","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"nc","slug":"Linux/网络通讯/nc","permalink":"http://yoursite.com/categories/Linux/网络通讯/nc/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"nc","slug":"nc","permalink":"http://yoursite.com/tags/nc/"}]},{"title":"Linux-mzip","slug":"Linux-mzip","date":"2019-05-02T01:54:36.463Z","updated":"2019-02-13T13:25:57.000Z","comments":true,"path":"2019/05/02/Linux-mzip/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mzip/","excerpt":"mzip 命令mzip 命令时zip/jaz磁盘驱动器控制指令。mzip为mtools工具指令，可设置为zip或jaz磁盘驱动区的保护模式以及执行退出磁盘的动作。","text":"mzip 命令mzip 命令时zip/jaz磁盘驱动器控制指令。mzip为mtools工具指令，可设置为zip或jaz磁盘驱动区的保护模式以及执行退出磁盘的动作。 语法1mzip [-efpqruwx] 参数 -e 退出磁盘。 -f 与-e参数一并使用，不管是否已经挂入磁盘中的文件系统，一律强制退出磁盘。 -p 设置磁盘的写入密码。 -q 显示目前的状态。 -r 将磁盘设为防写状态。 -u 退出磁盘以前，暂时解除磁盘的保护状态。 -w 将磁盘设为可写入状态。 -x 设置磁盘的密码。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mzip","slug":"Linux/磁盘管理/mzip","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mzip/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mzip","slug":"mzip","permalink":"http://yoursite.com/tags/mzip/"}]},{"title":"Linux-mv","slug":"Linux-mv","date":"2019-05-02T01:54:36.458Z","updated":"2019-02-06T17:38:40.000Z","comments":true,"path":"2019/05/02/Linux-mv/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mv/","excerpt":"mv 命令mv 命令用来为文件或目录改名、或将文件或目录移入其他位置。","text":"mv 命令mv 命令用来为文件或目录改名、或将文件或目录移入其他位置。 语法12mv [options] source destmv [options] source... directory 参数 -i: 若指定目录已有同名文件，则先询问是否覆盖旧文件; -f: 在mv操作要覆盖某已有的目标文件时不给任何指示; 命令格式 命令格式 运行结果 mv 文件名 文件名 将源文件名改为目标文件名 mv 文件名 目录名 将文件移动到目标目录 mv 目录名 目录名 目标目录已存在，将源目录移动到目标目录；目标目录不存在则改名 mv 目录名 文件名 出错 实例将文件aaa更名为bbb1mv aaa bbb 将info目录放入logs目录中。注意，如果logs目录不存在，则该命令将info改名为logs1mv info/ logs 再如将/usr/student下所有文件和目录移到当前目录下1mv /usr/student/* .","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mv","slug":"Linux/文件管理/mv","permalink":"http://yoursite.com/categories/Linux/文件管理/mv/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mv","slug":"mv","permalink":"http://yoursite.com/tags/mv/"}]},{"title":"Linux-mtype","slug":"Linux-mtype","date":"2019-05-02T01:54:36.452Z","updated":"2019-02-10T15:41:22.000Z","comments":true,"path":"2019/05/02/Linux-mtype/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mtype/","excerpt":"mtype 命令mtype 命令为mtools工具指令，模拟MS-DOS的type指令，可显示MS-DOS文件的内容。","text":"mtype 命令mtype 命令为mtools工具指令，模拟MS-DOS的type指令，可显示MS-DOS文件的内容。 语法1mtype [-st][文件] 参数 -s 去除8位字符码集的第一个位，使它兼容于7位的ASCII。 -t 将MS-DOS文本文件中的”换行+光标移至行首”字符转换成Linux的换行字符。 实例打开名为dos.txt的MS-DOS文件可使用如下命令：1mtype dos.txt 显示结果如下：12345678$ mtype dos.txt #打开MS-DOS 文件 Linux networks are becoming more and more common, but security is often an overlooked issue. Unfortunately, in today’s environment all networks are potential hacker targets, from top-secret military research networks to small home LANs. Linux Network Securty focuses on securing Linux in a networked environment, where the security of the entire network needs to be considered rather than just isolated machines. It uses a mix of theory and practicl techniques to teach administrators how to install and use security applications, as well as how the applcations work and why they are necessary.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"mtype","slug":"Linux/文档编辑/mtype","permalink":"http://yoursite.com/categories/Linux/文档编辑/mtype/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"mtype","slug":"mtype","permalink":"http://yoursite.com/tags/mtype/"}]},{"title":"Linux-mtoolstest","slug":"Linux-mtoolstest","date":"2019-05-02T01:54:36.445Z","updated":"2019-02-06T17:24:25.000Z","comments":true,"path":"2019/05/02/Linux-mtoolstest/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mtoolstest/","excerpt":"mtoolstest 命令mtoolstest 命令用于测试并显示mtools的相关设置。mtoolstest为mtools工具指令，可读取与分析mtools的配置文件，并在屏幕上显示结果。","text":"mtoolstest 命令mtoolstest 命令用于测试并显示mtools的相关设置。mtoolstest为mtools工具指令，可读取与分析mtools的配置文件，并在屏幕上显示结果。 语法1mtoolstest 实例在命令行中直接输入mtoolstest，即可显示mtools软件包当前的配置信息1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950$ mtoolstest #显示mtools 软件包当前的配置信息 drive J: #mtools软件包当前的配置信息列表 #fn=0 mode=0 builtin file=&quot;/dev/sdb4&quot; fat_bits=16 tracks=0 heads=0 sectors=0 hidden=0 offset=0x0 partition=0 mformat_only drive Z: #fn=0 mode=0 builtin file=&quot;/dev/sdb4&quot; fat_bits=16 tracks=0 heads=0 sectors=0 hidden=0 offset=0x0 partition=0 mformat_only drive X: #fn=0 mode=0 builtin file=&quot;$DISPLAY&quot; fat_bits=0 tracks=0 heads=0 sectors=0 hidden=0 offset=0x0 partition=0 drive A: #fn=2 mode=128 defined in /etc/mtools.conf file=&quot;/dev/fd0&quot; fat_bits=0 tracks=0 heads=0 sectors=0 hidden=0 offset=0x0 partition=0 exclusive drive B: #fn=2 mode=128 defined in /etc/mtools.conf file=&quot;/dev/fd1&quot; fat_bits=0 tracks=0 heads=0 sectors=0 hidden=0 offset=0x0 partition=0 exclusive drive M: #fn=2 mode=0 defined in /etc/mtools.conf file=&quot;/var/lib/dosemu/hdimage.first&quot; fat_bits=0 tracks=0 heads=0 sectors=0 hidden=0 offset=0x80 partition=1 drive N: #fn=2 mode=0 defined in /etc/mtools.conf file=&quot;/var/lib/dosemu/fdimage&quot; fat_bits=0 tracks=0 heads=0 sectors=0 hidden=0 offset=0x0 partition=0 mtools_fat_compatibility=0 mtools_skip_check=0 mtools_lower_case=0","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mtoolstest","slug":"Linux/文件管理/mtoolstest","permalink":"http://yoursite.com/categories/Linux/文件管理/mtoolstest/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mtoolstest","slug":"mtoolstest","permalink":"http://yoursite.com/tags/mtoolstest/"}]},{"title":"Linux-mtools","slug":"Linux-mtools","date":"2019-05-02T01:54:36.440Z","updated":"2019-02-06T17:17:30.000Z","comments":true,"path":"2019/05/02/Linux-mtools/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mtools/","excerpt":"mtools 命令mtools 命令用于显示mtools支持的命令。mtools为MS-DOS文件系统的工具程序，可模拟许多MS-DOS的指令。这些指令都是mtools的符号连接，因此会有一些共同的特性。","text":"mtools 命令mtools 命令用于显示mtools支持的命令。mtools为MS-DOS文件系统的工具程序，可模拟许多MS-DOS的指令。这些指令都是mtools的符号连接，因此会有一些共同的特性。 语法1mtools 参数 -a 长文件名重复时自动更改目标文件的长文件名。 -A 短文件名重复但长文件名不同时自动更改目标文件的短文件名。 -o 长文件名重复时，将目标文件覆盖现有的文件。 -O 短文件名重复但长文件名不同时，将目标文件覆盖现有的文件。 -r 长文件名重复时，要求用户更改目标文件的长文件名。 -R 短文件名重复但长文件名不同时，要求用户更改目标文件的短文件名。 -s 长文件名重复时，则不处理该目标文件。 -S 短文件名重复但长文件名不同时，则不处理该目标文件。 -v 执行时显示详细的说明。 -V 显示版本信息。 实例显示mtools软件包所支持的MS-DOS命令。在命令提示符中直接输入mtools，可显示其所支持的MS-DOS命令123456$ mtools #显示所支持的MS-DOS命令 Supported commands: #命令列表 mattrib, mbadblocks, mcat, mcd, mclasserase, mcopy, mdel, mdeltree mdir, mdoctorfat, mdu, mformat, minfo, mlabel, mmd, mmount mpartition, mrd, mread, mmove, mren, mshowfat, mtoolstest, mtype mwrite, mzip","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mtools","slug":"Linux/文件管理/mtools","permalink":"http://yoursite.com/categories/Linux/文件管理/mtools/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mtools","slug":"mtools","permalink":"http://yoursite.com/tags/mtools/"}]},{"title":"Linux-mshowfat","slug":"Linux-mshowfat","date":"2019-05-02T01:54:36.431Z","updated":"2019-02-07T12:28:17.000Z","comments":true,"path":"2019/05/02/Linux-mshowfat/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mshowfat/","excerpt":"mshowfat 命令mshowfat 命令用于显示MS-DOS文件在FAT中的记录。mshowfat为mtools工具指令,可显示MS-DOS文件在FAT中的记录编号。","text":"mshowfat 命令mshowfat 命令用于显示MS-DOS文件在FAT中的记录。mshowfat为mtools工具指令,可显示MS-DOS文件在FAT中的记录编号。 语法1mshowfat [文件...] 参数 [文件…]： 执行操作的文件相对路径或者绝对路径 实例使用指令mshowfat查看文件“autorun.bat”的FAT信息1mshowfat autorun.bat 以上命令执行成功后，文件“autorun.bat”的FAT相关信息将会显示出来。注：执行操作的文件必须是DOS文件系统下的文件。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mshowfat","slug":"Linux/文件管理/mshowfat","permalink":"http://yoursite.com/categories/Linux/文件管理/mshowfat/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mshowfat","slug":"mshowfat","permalink":"http://yoursite.com/tags/mshowfat/"}]},{"title":"Linux-mren","slug":"Linux-mren","date":"2019-05-02T01:54:36.425Z","updated":"2019-02-06T17:09:47.000Z","comments":true,"path":"2019/05/02/Linux-mren/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mren/","excerpt":"mren 命令Linux mren命令用于更改MS-DOS文件或目录的名称，或是移动文件或目录。mren为MS-DOS工具指令，与DOS下的ren指令相似，可以实现更改MS-DOS文件或目录名称。源文件必须是磁盘上已经存在的文件，若忽略盘符及路径，则表示当前盘及当前目录的文件。新文件名是所要更换的文件名称。新文件名称前不可以加与源文件不同的盘符及路径，因为该命令只能更改同一盘上的文件名称。","text":"mren 命令Linux mren命令用于更改MS-DOS文件或目录的名称，或是移动文件或目录。mren为MS-DOS工具指令，与DOS下的ren指令相似，可以实现更改MS-DOS文件或目录名称。源文件必须是磁盘上已经存在的文件，若忽略盘符及路径，则表示当前盘及当前目录的文件。新文件名是所要更换的文件名称。新文件名称前不可以加与源文件不同的盘符及路径，因为该命令只能更改同一盘上的文件名称。 语法1mren [源文件或目录...][目标文件或目录] 参数 [源文件或目录…]： 执行操作的源文件名或者源文件路径 [目标文件或目录]： 执行操作的目标文件名或者目标文件路径 实例使用指令mren将a盘下的文件“autorun.bat”的文件名修改为“auto.bat”1mren a:\\autorun.bat auto.bat","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mren","slug":"Linux/文件管理/mren","permalink":"http://yoursite.com/categories/Linux/文件管理/mren/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mren","slug":"mren","permalink":"http://yoursite.com/tags/mren/"}]},{"title":"Linux-mread","slug":"Linux-mread","date":"2019-05-02T01:54:36.419Z","updated":"2019-02-06T17:05:44.000Z","comments":true,"path":"2019/05/02/Linux-mread/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mread/","excerpt":"mread 命令mread 命令用于将MS-DOS文件复制到Linux/Unix的目录中。mread为mtools工具命令，可将MS-DOS文件复制到Linux的文件系统中。这个命令目前已经不常用，一般都使用mcopy命令来代替。","text":"mread 命令mread 命令用于将MS-DOS文件复制到Linux/Unix的目录中。mread为mtools工具命令，可将MS-DOS文件复制到Linux的文件系统中。这个命令目前已经不常用，一般都使用mcopy命令来代替。 语法1mread [MS-DOS文件...][Linux文件或目录] 参数 [MS-DOS文件…]: 执行操作的DOS源文件或目录路径 [Linux文件或目录]: 执行操作后的Linux目标文件或目录路径 实例使用mread将盘“a:/”中所有内容复制到当前工作目录下1mread a:\\* ./","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mread","slug":"Linux/文件管理/mread","permalink":"http://yoursite.com/categories/Linux/文件管理/mread/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mread","slug":"mread","permalink":"http://yoursite.com/tags/mread/"}]},{"title":"Linux-mrd","slug":"Linux-mrd","date":"2019-05-02T01:54:36.413Z","updated":"2019-02-13T13:21:29.000Z","comments":true,"path":"2019/05/02/Linux-mrd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mrd/","excerpt":"mrd 命令mrd 命令用于删除MS-DOS文件系统中的目录。mrd为mtools工具指令，模拟MS-DOS的rd指令，可删除MS-DOS的目录。","text":"mrd 命令mrd 命令用于删除MS-DOS文件系统中的目录。mrd为mtools工具指令，模拟MS-DOS的rd指令，可删除MS-DOS的目录。 语法1mrd [目录...]","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mrd","slug":"Linux/磁盘管理/mrd","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mrd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mrd","slug":"mrd","permalink":"http://yoursite.com/tags/mrd/"}]},{"title":"Linux-mpartition","slug":"Linux-mpartition","date":"2019-05-02T01:54:36.407Z","updated":"2019-02-19T13:22:19.000Z","comments":true,"path":"2019/05/02/Linux-mpartition/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mpartition/","excerpt":"mpartition 命令mpartition 命令用于建立或删除MS-DOS的分区。mpartition为mtools工具指令，可建立或删除磁盘分区。","text":"mpartition 命令mpartition 命令用于建立或删除MS-DOS的分区。mpartition为mtools工具指令，可建立或删除磁盘分区。 语法1mpartition [-acdfIprv][-b &lt;磁区数&gt;][-h &lt;磁头数&gt;][l &lt;磁区数&gt;][-s &lt;磁区数&gt;][-t &lt;柱面数&gt;][驱动器代号] 参数 -a 将分区设置为可开机分区。 -b&lt;磁区数&gt; 建立分区时，指定要从第几个磁区开始建立分区。 -c 建立分区。 -d 将分区设置为无法开机的分区。 -f 强制地修改分区而不管检查时发生的错误信息。 -h&lt;磁头数&gt; 建立分区时，指定分区的磁头数。 -I 删除全部的分区。 -l&lt;磁区数&gt; 建立分区时，指定分区的容量大小，单位为磁区数。 -p 当要重新建立分区时，显示命令列。 -r 删除分区。 -s&lt;磁区数&gt; 建立分区时，指定每个磁轨的磁区数。 -t&lt;柱面数&gt; 建立分区时，指定分区的柱面数。 -v 与-p参数一并使用，若没有同时下达修改分区的命令，则显示目前分区的状态。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mpartition","slug":"Linux/磁盘维护/mpartition","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mpartition/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mpartition","slug":"mpartition","permalink":"http://yoursite.com/tags/mpartition/"}]},{"title":"Linux-mouseconfig","slug":"Linux-mouseconfig","date":"2019-05-02T01:54:36.399Z","updated":"2019-03-01T07:01:07.000Z","comments":true,"path":"2019/05/02/Linux-mouseconfig/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mouseconfig/","excerpt":"mouseconfig 命令mouseconfig 命令用于设置鼠标相关参数。","text":"mouseconfig 命令mouseconfig 命令用于设置鼠标相关参数。mouseconfig为鼠标设置程序，可自动设置相关参数，或者用户也可以利用所提供互动模式自行设置鼠标。mouseconfig是Red Hat Linux才有的命令。 语法1mouseconfig [--back][--emulthree][--help][--expert][--kickstart][--noprobe][--test][--device &lt;连接端口&gt;][鼠标类型] 参数 –back 在设置画面上显示Back按钮，而取代预设的Cancel按钮。 –device&lt;连接端口&gt; 指定硬件连接端口。可用的选项有ttyS0，ttyS1，ttyS2，ttyS3与orpsaux。 –emulthree 将二钮鼠标模拟成三钮鼠标。 –help 显示帮助以及所有支持的鼠标类型。 –expert 程序预设可自动判断部分设置值。若要自行设置，请使用–expert参数。 –kickstart 让程序自动检测并保存所有的鼠标设置。 –noprobe 不要检测鼠标设备。 –test 测试模式，不会改变任何设置。 实例以交互模式配置鼠标1# mouseconfig -text","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"mouseconfig","slug":"Linux/系统设置/mouseconfig","permalink":"http://yoursite.com/categories/Linux/系统设置/mouseconfig/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"mouseconfig","slug":"mouseconfig","permalink":"http://yoursite.com/tags/mouseconfig/"}]},{"title":"Linux-mount","slug":"Linux-mount","date":"2019-05-02T01:54:36.393Z","updated":"2019-02-13T13:45:01.000Z","comments":true,"path":"2019/05/02/Linux-mount/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mount/","excerpt":"mount 命令mount 命令是经常使用到的命令，它用于挂在Linux系统外的文件。","text":"mount 命令mount 命令是经常使用到的命令，它用于挂在Linux系统外的文件。 语法1234mount [-hV]mount -a [-fFnrsvw] [-t vfstype]mount [-fnrsvw] [-o options [,...]] device | dirmount [-fnrsvw] [-t vfstype] [-o options] device dir 参数 -V：显示程序版本 -h：显示辅助讯息 -v：显示较讯息，通常和 -f 用来除错。 -a：将 /etc/fstab 中定义的所有档案系统挂上。 -F：这个命令通常和 -a 一起使用，它会为每一个 mount 的动作产生一个行程负责执行。在系统需要挂上大量 NFS 档案系统时可以加快挂上的动作。 -f：通常用在除错的用途。它会使 mount 并不执行实际挂上的动作，而是模拟整个挂上的过程。通常会和 -v 一起使用。 -n：一般而言，mount 在挂上后会在 /etc/mtab 中写入一笔资料。但在系统中没有可写入档案系统存在的情况下可以用这个选项取消这个动作。 -s-r：等于 -o ro -w：等于 -o rw -L：将含有特定标签的硬盘分割挂上。 -U：将档案分割序号为 的档案系统挂下。-L 和 -U 必须在/proc/partition 这种档案存在时才有意义。 -t：指定档案系统的型态，通常不必指定。mount 会自动选择正确的型态。 -o async：打开非同步模式，所有的档案读写动作都会用非同步模式执行。 -o sync：在同步模式下执行。 -o atime、-o noatime：当 atime 打开时，系统会在每次读取档案时更新档案的『上一次调用时间』。当我们使用 flash 档案系统时可能会选项把这个选项关闭以减少写入的次数。 -o auto、-o noauto：打开/关闭自动挂上模式。 -o defaults:使用预设的选项 rw, suid, dev, exec, auto, nouser, and async. -o dev、-o nodev-o exec、-o noexec允许执行档被执行。 -o suid、-o nosuid： 允许执行档在 root 权限下执行。 -o user、-o nouser：使用者可以执行 mount/umount 的动作。 -o remount：将一个已经挂下的档案系统重新用不同的方式挂上。例如原先是唯读的系统，现在用可读写的模式重新挂上。 -o ro：用唯读模式挂上。 -o rw：用可读写模式挂上。 -o loop=：使用 loop 模式用来将一个档案当成硬盘分割挂上系统。 实例将/dev/hda1挂在/mnt之下1mount /dev/hda1 /mnt 将 /dev/hda1 用唯读模式挂在 /mnt 之下。1#mount -o ro /dev/hda1 /mnt 将 /tmp/image.iso 这个光碟的 image 档使用 loop 模式挂在 /mnt/cdrom之下。用这种方法可以将一般网络上可以找到的 Linux 光 碟 ISO 档在不烧录成光碟的情况下检视其内容。1#mount -o loop /tmp/image.iso /mnt/cdrom","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mount","slug":"Linux/磁盘管理/mount","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mount/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mount","slug":"mount","permalink":"http://yoursite.com/tags/mount/"}]},{"title":"Linux-more","slug":"Linux-more","date":"2019-05-02T01:54:36.384Z","updated":"2019-02-06T16:36:59.000Z","comments":true,"path":"2019/05/02/Linux-more/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-more/","excerpt":"more 命令more 命令类似cat，但是会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是空格键就能往下一页显示，按b键就会返回前一页显示，而且还有搜寻字串的功能（与vi相似)，使用中的说明文件则为h键。","text":"more 命令more 命令类似cat，但是会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是空格键就能往下一页显示，按b键就会返回前一页显示，而且还有搜寻字串的功能（与vi相似)，使用中的说明文件则为h键。 语法1more [-dlfpcsu] [-num] [+/pattern] [+linenum] [fileNames..] 参数 -num 一次显示的行数 -d 提示使用者，在画面下方显示 [Press space to continue, ‘q’ to quit.] ，如果使用者按错键，则会显示 [Press ‘h’ for instructions.] 而不是 ‘哔’ 声 -l 取消遇见特殊字元 ^L（送纸字元）时会暂停的功能 -f 计算行数时，以实际上的行数，而非自动换行过后的行数（有些单行字数太长的会被扩展为两行或两行以上） -p 不以卷动的方式显示每一页，而是先清除萤幕后再显示内容 -c 跟 -p 相似，不同的是先显示内容再清除其他旧资料 -s 当遇到有连续两行以上的空白行，就代换为一行的空白行 -u 不显示下引号 （根据环境变数 TERM 指定的 terminal 而有所不同） +/pattern 在每个文档显示前搜寻该字串（pattern），然后从该字串之后开始显示 +num 从第 num 行开始显示 fileNames 欲显示内容的文档，可为复数个数 实例主页显示testfile文档的内容，如有连续两行以上空白行则以一行空白行显示1more -s testfile 从第20行开始显示testfile之后的文档内容1more +20 testfile 常用的操作命令 Enter 向下n行，需要定义。默认为1行 Ctrl+F 向下滚动一屏 空格键 向下滚动一屏 Ctrl+B 返回上一屏 = 输出当前行的行号 ：f 输出文件名和当前行的行号 V 调用vi编辑器 !命令 调用Shell，并执行命令 q 退出more","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"more","slug":"Linux/文件管理/more","permalink":"http://yoursite.com/categories/Linux/文件管理/more/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"more","slug":"more","permalink":"http://yoursite.com/tags/more/"}]},{"title":"Linux-modprobe","slug":"Linux-modprobe","date":"2019-05-02T01:54:36.378Z","updated":"2019-03-01T06:55:07.000Z","comments":true,"path":"2019/05/02/Linux-modprobe/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-modprobe/","excerpt":"modprobe 命令modprobe 命令用于自动处理可载入模块。","text":"modprobe 命令modprobe 命令用于自动处理可载入模块。modprobe可载入指定的个别模块，或是载入一组相依的模块。modprobe会根据depmod所产生的相依关系，决定要载入哪些模块。若在载入过程中发生错误，在modprobe会卸载整组的模块。 语法1modprobe [-acdlrtvV][--help][模块文件][符号名称 = 符号值] 参数 -a或–all 载入全部的模块。 -c或–show-conf 显示所有模块的设置信息。 -d或–debug 使用排错模式。 -l或–list 显示可用的模块。 -r或–remove 模块闲置不用时，即自动卸载模块。 -t或–type 指定模块类型。 -v或–verbose 执行时显示详细的信息。 -V或–version 显示版本信息。 -help 显示帮助。 实例安装软驱模块1modprobe -v floppy 卸载软驱模块1modprobe -v -r floppy","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"modprobe","slug":"Linux/系统设置/modprobe","permalink":"http://yoursite.com/categories/Linux/系统设置/modprobe/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"modprobe","slug":"modprobe","permalink":"http://yoursite.com/tags/modprobe/"}]},{"title":"Linux-modinfo","slug":"Linux-modinfo","date":"2019-05-02T01:54:36.370Z","updated":"2019-03-01T09:47:58.000Z","comments":true,"path":"2019/05/02/Linux-modinfo/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-modinfo/","excerpt":"modinfo 命令modinfo 命令用于显示kernel模块的信息。","text":"modinfo 命令modinfo 命令用于显示kernel模块的信息。modinfo会显示kernel模块的对象文件，以显示该模块的相关信息。 语法1modinfo [-adhpV][模块文件] 参数 -a或–author 显示模块开发人员。 -d或–description 显示模块的说明。 -h或–help 显示modinfo的参数使用方法。 -p或–parameters 显示模块所支持的参数。 -V或–version 显示版本信息。 实例显示sg模块的信息1234567891011# modinfo sgfilename: /lib/modules/2.6.9-42.ELsmp/kernel/drivers/scsi/sg.koauthor: Douglas Gilbertdescription: SCSI generic (sg) driverlicense: GPLversion: 3.5.31 B0B0CB1BB59F0669A1F0D6Bparm: def_reserved_size:size of buffer reserved for each fdparm: allow_dio:allow direct I/O (default: 0 (disallow))alias: char-major-21-*vermagic: 2.6.9-42.ELsmp SMP 686 REGPARM 4KSTACKS gcc-3.4depends: scsi_mod","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"modinfo","slug":"Linux/系统设置/modinfo","permalink":"http://yoursite.com/categories/Linux/系统设置/modinfo/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"modinfo","slug":"modinfo","permalink":"http://yoursite.com/tags/modinfo/"}]},{"title":"Linux-mmove","slug":"Linux-mmove","date":"2019-05-02T01:54:36.364Z","updated":"2019-02-06T16:49:50.000Z","comments":true,"path":"2019/05/02/Linux-mmove/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mmove/","excerpt":"mmove 命令mmove 命令用于MS-DOS文件系统中，移动文件或目录，或更改名称。mmove为mtools工具命令，模拟MS-DOS的move命令，可在MS-DOS文件系统中移动现有的文件或目录，或是更改现有文件或目录的名称。","text":"mmove 命令mmove 命令用于MS-DOS文件系统中，移动文件或目录，或更改名称。mmove为mtools工具命令，模拟MS-DOS的move命令，可在MS-DOS文件系统中移动现有的文件或目录，或是更改现有文件或目录的名称。 语法1mmove [源文件或目录...][目标文件或目录] 参数 [源文件或目录…]: 执行操作的源文件或目录路径 [目标文件或目录]: 执行操作后的目标文件或目录路径 实例使用指令mmove将文件“autorun.bat”移动到目录“test”中1mmove autorun.bat test #移动文件到目录test中 注：用户可以使用mdir命令查看移动后的文件或目录信息。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mmove","slug":"Linux/文件管理/mmove","permalink":"http://yoursite.com/categories/Linux/文件管理/mmove/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mmove","slug":"mmove","permalink":"http://yoursite.com/tags/mmove/"}]},{"title":"Linux-mmount","slug":"Linux-mmount","date":"2019-05-02T01:54:36.357Z","updated":"2019-02-13T13:47:30.000Z","comments":true,"path":"2019/05/02/Linux-mmount/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mmount/","excerpt":"mmount 命令mmount 命令用于挂入MS-DOS文件系统。mmount为mtools工具指令，可根据[mount参数]中的设置，将磁盘内容挂入到Linux目录中。","text":"mmount 命令mmount 命令用于挂入MS-DOS文件系统。mmount为mtools工具指令，可根据[mount参数]中的设置，将磁盘内容挂入到Linux目录中。 语法1mmount [驱动器代号][mount参数] 参数参考mount命令","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mmount","slug":"Linux/磁盘管理/mmount","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mmount/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mmount","slug":"mmount","permalink":"http://yoursite.com/tags/mmount/"}]},{"title":"Linux-mmd","slug":"Linux-mmd","date":"2019-05-02T01:54:36.350Z","updated":"2019-02-13T13:00:04.000Z","comments":true,"path":"2019/05/02/Linux-mmd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mmd/","excerpt":"mmd 命令mmd 命令用于在MS-DOS文件系统中建立目录。mmd为mtools工具指令，模拟MS-DOS的md指令，可在MS-DOS的文件系统中建立目录。","text":"mmd 命令mmd 命令用于在MS-DOS文件系统中建立目录。mmd为mtools工具指令，模拟MS-DOS的md指令，可在MS-DOS的文件系统中建立目录。 语法1mmd [目录...]","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mmd","slug":"Linux/磁盘管理/mmd","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mmd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mmd","slug":"mmd","permalink":"http://yoursite.com/tags/mmd/"}]},{"title":"Linux-mlabel","slug":"Linux-mlabel","date":"2019-05-02T01:54:36.343Z","updated":"2019-02-13T12:57:41.000Z","comments":true,"path":"2019/05/02/Linux-mlabel/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mlabel/","excerpt":"mlabel 命令mlabel 命令用于设定磁盘的标签（Label）。如果磁盘上设定过标签，mlabel会将他显示给使用者。如果没有指定新标签并且没有指定c或s选项，mlabel会提示使用者输入新的标签。如果直接按下Enter，就会将原本的标签删除。","text":"mlabel 命令mlabel 命令用于设定磁盘的标签（Label）。如果磁盘上设定过标签，mlabel会将他显示给使用者。如果没有指定新标签并且没有指定c或s选项，mlabel会提示使用者输入新的标签。如果直接按下Enter，就会将原本的标签删除。 语法1mlabel [-vcs] drive:[new_label] 参数 -v 更多的讯息。 -c 清除原有的标签，不出现提示讯息。 -s 显示目前的标签，不出现提示讯息。 实例将A盘的标签改为newlabel1mlabel a:newlabel","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mlabel","slug":"Linux/磁盘管理/mlabel","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mlabel/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mlabel","slug":"mlabel","permalink":"http://yoursite.com/tags/mlabel/"}]},{"title":"Linux-mktemp","slug":"Linux-mktemp","date":"2019-05-02T01:54:36.335Z","updated":"2019-02-06T16:27:13.000Z","comments":true,"path":"2019/05/02/Linux-mktemp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mktemp/","excerpt":"mktemp 命令mktemp 命令用于建立缓存文件。mktemp 建立的一个缓存文件，供shell script使用。","text":"mktemp 命令mktemp 命令用于建立缓存文件。mktemp 建立的一个缓存文件，供shell script使用。 语法1mktemp [-qu][文件名参数] 参数 -q 执行时若发生错误，不会显示任何信息。 -u 暂存文件会在mktemp结束前先行删除。 [文件名参数] 文件名参数必须是以”自订名称.XXXXXX”的格式。 实例使用mktemp 命令生成临时文件时，文件名参数应当以”文件名.XXXX”的形式给出，mktemp 会根据文件名参数建立一个临时文件。在命令行提示符输入如下命令：1mktemp tmp.xxxx #生成临时文件 使用该命令后，可使用dir 或ls看当前目录，得到如下结果：123cmd@cmd-desktop:~$ mktemp tmp.xxxx #生成临时文件 cmd@cmd-desktop:~$dir #查看当前目录 file test testfile testfile1 tmp.3847 #生成了tmp.3847 此可见，生成的临时文件为tmp.3847，其中，文件名参数中的”XXXX”被4 个随机产生的字符所取代。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mktemp","slug":"Linux/文件管理/mktemp","permalink":"http://yoursite.com/categories/Linux/文件管理/mktemp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mktemp","slug":"mktemp","permalink":"http://yoursite.com/tags/mktemp/"}]},{"title":"Linux-mkswap","slug":"Linux-mkswap","date":"2019-05-02T01:54:36.329Z","updated":"2019-02-19T13:18:26.000Z","comments":true,"path":"2019/05/02/Linux-mkswap/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkswap/","excerpt":"mkswap 命令mkswap 命令用于设置交换区（swap area）。mkswap可将磁盘分区或文件设为Linux的交换区。","text":"mkswap 命令mkswap 命令用于设置交换区（swap area）。mkswap可将磁盘分区或文件设为Linux的交换区。 语法1mkswap [-cf][-v0][-v1][设备名称或文件][交换区大小] 参数 -c 建立交换区前，先检查是否有损坏的区块。 -f 在SPARC电脑上建立交换区时，要加上此参数。 -v0 建立旧式交换区，此为预设值。 -v1 建立新式交换区。 [交换区大小] 指定交换区的大小，单位为1024字节。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkswap","slug":"Linux/磁盘维护/mkswap","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkswap/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkswap","slug":"mkswap","permalink":"http://yoursite.com/tags/mkswap/"}]},{"title":"Linux-mkkickstart","slug":"Linux-mkkickstart","date":"2019-05-02T01:54:36.322Z","updated":"2019-03-01T12:40:04.000Z","comments":true,"path":"2019/05/02/Linux-mkkickstart/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkkickstart/","excerpt":"mkkickstart 命令mkkickstart 命令用于建立安装的组态文件。","text":"mkkickstart 命令mkkickstart 命令用于建立安装的组态文件。mkkickstart可根据目前系统的设置来建立组态文件，供其他电脑在安装时使用。组态文件的内容包括使用语言，网络环境，系统磁盘状态，以及X Windows的设置等信息。 语法1mkkickstart [--bootp][--dhcp][--nonet][--nox][--version][--nfs &lt;远端电脑:路径&gt;] 参数 –bootp 安装与开机时，使用BOOTP。 –dhcp 安装与开机时，使用DHCP。 –nfs&lt;远端电脑:路径&gt; 使用指定的网络路径安装。 –nonet 不要进行网络设置，即假设在没有网络环境的状态下。 –nox 不要进行X Windows的环境设置。 –version 显示版本信息。 实例构建一个安装组态文件1# mkkickstart --nonet -bootp","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"mkkickstart","slug":"Linux/系统设置/mkkickstart","permalink":"http://yoursite.com/categories/Linux/系统设置/mkkickstart/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"mkkickstart","slug":"mkkickstart","permalink":"http://yoursite.com/tags/mkkickstart/"}]},{"title":"Linux-mkisofs","slug":"Linux-mkisofs","date":"2019-05-02T01:54:36.314Z","updated":"2019-02-19T13:13:43.000Z","comments":true,"path":"2019/05/02/Linux-mkisofs/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkisofs/","excerpt":"mkisofs 命令mkisofs 命令用于建立ISO 9660映像文件。mkisofs可将指定的目录与文件做成ISO 9660格式的映像文件，以供刻录光盘。","text":"mkisofs 命令mkisofs 命令用于建立ISO 9660映像文件。mkisofs可将指定的目录与文件做成ISO 9660格式的映像文件，以供刻录光盘。 语法1mkisofs [-adDfhJlLNrRTvz][-print-size][-quiet][-A &lt;应用程序ID&gt;][-abstract &lt;摘要文件&gt;][-b &lt;开机映像文件&gt;][-biblio &lt;ISBN文件&gt;][-c &lt;开机文件名称&gt;][-C &lt;盘区编号，磁区编号&gt;][-copyright &lt;版权信息文件&gt;][-hide &lt;目录或文件名&gt;][-hide-joliet &lt;文件或目录名&gt;][-log-file &lt;记录文件&gt;][-m &lt;目录或文件名&gt;][-M &lt;开机映像文件&gt;][-o &lt;映像文件&gt;][-p &lt;数据处理人&gt;][-P &lt;光盘发行人&gt;][-sysid &lt;系统ID &gt;][-V &lt;光盘ID &gt;][-volset &lt;卷册集ID&gt;][-volset-size &lt;光盘总数&gt;][-volset-seqno &lt;卷册序号&gt;][-x &lt;目录&gt;][目录或文件] 参数 -a或–all mkisofs通常不处理备份文件。使用此参数可以把备份文件加到映像文件中。 -A&lt;应用程序ID&gt;或-appid&lt;应用程序ID&gt; 指定光盘的应用程序ID。 -abstract&lt;摘要文件&gt; 指定摘要文件的文件名。 -b&lt;开机映像文件&gt;或-eltorito-boot&lt;开机映像文件&gt; 指定在制作可开机光盘时所需的开机映像文件。 -biblio&lt;ISBN文件&gt; 指定ISBN文件的文件名，ISBN文件位于光盘根目录下，记录光盘的ISBN。 -c&lt;开机文件名称&gt; 制作可开机光盘时，mkisofs会将开机映像文件中的全-eltorito-catalog&lt;开机文件名称&gt;全部内容作成一个文件。 -C&lt;盘区编号，盘区编号&gt; 将许多节区合成一个映像文件时，必须使用此参数。 -copyright&lt;版权信息文件&gt; 指定版权信息文件的文件名。 -d或-omit-period 省略文件后的句号。 -D或-disable-deep-relocation ISO 9660最多只能处理8层的目录，超过8层的部分，RRIP会自动将它们设置成ISO 9660兼容的格式。使用-D参数可关闭此功能。 -f或-follow-links 忽略符号连接。 -h 显示帮助。 -hide&lt;目录或文件名&gt; 使指定的目录或文件在ISO 9660或Rock RidgeExtensions的系统中隐藏。 -hide-joliet&lt;目录或文件名&gt; 使指定的目录或文件在Joliet系统中隐藏。 -J或-joliet 使用Joliet格式的目录与文件名称。 -l或-full-iso9660-filenames 使用ISO 9660 32字符长度的文件名。 -L或-allow-leading-dots 允许文件名的第一个字符为句号。 -log-file&lt;记录文件&gt; 在执行过程中若有错误信息，预设会显示在屏幕上。 -m&lt;目录或文件名&gt;或-exclude&lt;目录或文件名&gt; 指定的目录或文件名将不会房入映像文件中。 -M&lt;映像文件&gt;或-prev-session&lt;映像文件&gt; 与指定的映像文件合并。 -N或-omit-version-number 省略ISO 9660文件中的版本信息。 -o&lt;映像文件&gt;或-output&lt;映像文件&gt; 指定映像文件的名称。 -p&lt;数据处理人&gt;或-preparer&lt;数据处理人&gt; 记录光盘的数据处理人。 -print-size 显示预估的文件系统大小。 -quiet 执行时不显示任何信息。 -r或-rational-rock 使用Rock Ridge Extensions，并开放全部文件的读取权限。 -R或-rock 使用Rock Ridge Extensions。 -sysid&lt;系统ID&gt; 指定光盘的系统ID。 -T或-translation-table 建立文件名的转换表，适用于不支持Rock Ridge Extensions的系统上。 -v或-verbose 执行时显示详细的信息。 -V&lt;光盘ID&gt;或-volid&lt;光盘ID&gt; 指定光盘的卷册集ID。 -volset-size&lt;光盘总数&gt; 指定卷册集所包含的光盘张数。 -volset-seqno&lt;卷册序号&gt; 指定光盘片在卷册集中的编号。 -x&lt;目录&gt; 指定的目录将不会放入映像文件中。 -z 建立通透性压缩文件的SUSP记录，此记录目前只在Alpha机器上的Linux有效。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkisofs","slug":"Linux/磁盘维护/mkisofs","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkisofs/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkisofs","slug":"mkisofs","permalink":"http://yoursite.com/tags/mkisofs/"}]},{"title":"Linux-mkinitrd","slug":"Linux-mkinitrd","date":"2019-05-02T01:54:36.305Z","updated":"2019-02-19T12:55:24.000Z","comments":true,"path":"2019/05/02/Linux-mkinitrd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkinitrd/","excerpt":"mkinitrd 命令mkinitrd 命令用于建立要载入ramdisk的映像文件。mkinitrd可建立映像文件，以供Linux开机时载入ramdisk。","text":"mkinitrd 命令mkinitrd 命令用于建立要载入ramdisk的映像文件。mkinitrd可建立映像文件，以供Linux开机时载入ramdisk。 语法1mkinitrd [-fv][--omit-scsi-modules][--version][--preload=&lt;模块名称&gt;][--with=&lt;模块名称&gt;][映像文件][Kernel 版本] 参数 -f 若指定的映像问家名称与现有文件重复，则覆盖现有的文件。 -v执行时显示详细的信息。 –omit-scsi-modules 不要载入SCSI模块。 –preload=&lt;模块名称&gt; 指定要载入的模块。 –with=&lt;模块名称&gt; 指定要载入的模块。 –version 显示版本信息。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkinitrd","slug":"Linux/磁盘维护/mkinitrd","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkinitrd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkinitrd","slug":"mkinitrd","permalink":"http://yoursite.com/tags/mkinitrd/"}]},{"title":"Linux-mkfs.msdos","slug":"Linux-mkfs.msdos","date":"2019-05-02T01:54:36.298Z","updated":"2019-02-19T12:52:31.000Z","comments":true,"path":"2019/05/02/Linux-mkfs.msdos/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkfs.msdos/","excerpt":"","text":"mkfs.msdos 命令mkfs.msdos 命令与mkdosfs命令相同。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkfs.msdos","slug":"Linux/磁盘维护/mkfs-msdos","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkfs-msdos/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkfs.msdos","slug":"mkfs-msdos","permalink":"http://yoursite.com/tags/mkfs-msdos/"}]},{"title":"Linux-mkfs.minix","slug":"Linux-mkfs.minix","date":"2019-05-02T01:54:36.291Z","updated":"2019-02-19T13:40:02.000Z","comments":true,"path":"2019/05/02/Linux-mkfs.minix/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkfs.minix/","excerpt":"mkfs.minix 命令mkfs.minix 命令用于建立Minix文件系统。mkfs.minix可建立Minix文件系统。","text":"mkfs.minix 命令mkfs.minix 命令用于建立Minix文件系统。mkfs.minix可建立Minix文件系统。 语法1mkfs.minix [-cv][-i &lt;inode数目&gt;][-l &lt;文件&gt;][-n &lt;文件名长度&gt;][设备名称][区块数] 参数 -c 检查是否有损坏的区块。 -i&lt; inode数目 &gt; 指定文件系统的inode总数。 -l&lt;文件&gt; 从指定的文件中，读取文件系统中损坏区块的信息。 -n&lt;文件名长度&gt; 指定文件名称长度的上限。 -v 建立第2版的Minix文件系统。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkfs.minix","slug":"Linux/磁盘维护/mkfs-minix","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkfs-minix/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkfs.minix","slug":"mkfs-minix","permalink":"http://yoursite.com/tags/mkfs-minix/"}]},{"title":"Linux-mkfs","slug":"Linux-mkfs","date":"2019-05-02T01:54:36.283Z","updated":"2019-02-19T14:01:22.000Z","comments":true,"path":"2019/05/02/Linux-mkfs/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkfs/","excerpt":"mkfs 命令mkfs 明林用于在特定的分区上建立Linux文件系统。","text":"mkfs 命令mkfs 明林用于在特定的分区上建立Linux文件系统。 语法1mkfs [-V] [-t fstype] [fs-options] filesys [blocks] 参数 device ： 预备检查的硬盘分区，例如：/dev/sda1 -V : 详细显示模式 -t : 给定档案系统的型式，Linux 的预设值为 ext2 -c : 在制做档案系统前，检查该partition 是否有坏轨 -l bad_blocks_file : 将有坏轨的block资料加到 bad_blocks_file 里面 block : 给定 block 的大小 实例在 /dev/hda5 上建一个 msdos 的档案系统，同时检查是否有坏轨存在，并且将过程详细列出来 : 1mkfs -V -t msdos -c /dev/hda5 将sda6分区格式化为ext3格式1mfks -t ext3 /dev/sda6 注意：这里的文件系统是要指定的，比如 ext3 ；reiserfs ；ext2 ；fat32 ；msdos 等。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkfs","slug":"Linux/磁盘维护/mkfs","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkfs/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkfs","slug":"mkfs","permalink":"http://yoursite.com/tags/mkfs/"}]},{"title":"Linux-mkfs.ext2","slug":"Linux-mkfs.ext2","date":"2019-05-02T01:54:36.276Z","updated":"2019-02-19T12:51:08.000Z","comments":true,"path":"2019/05/02/Linux-mkfs.ext2/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkfs.ext2/","excerpt":"","text":"mkfs.ext2 命令mkfs.ext2 命令与mke2fs命令相同。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkfs.ext2","slug":"Linux/磁盘维护/mkfs-ext2","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkfs-ext2/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkfs.ext2","slug":"mkfs-ext2","permalink":"http://yoursite.com/tags/mkfs-ext2/"}]},{"title":"Linux-mke2fs","slug":"Linux-mke2fs","date":"2019-05-02T01:54:36.269Z","updated":"2019-02-19T12:48:54.000Z","comments":true,"path":"2019/05/02/Linux-mke2fs/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mke2fs/","excerpt":"mke2fs 命令mke2fs 命令用于建立ext2文件系统。","text":"mke2fs 命令mke2fs 命令用于建立ext2文件系统。 语法1mke2fs [-cFMqrSvV][-b &lt;区块大小&gt;][-f &lt;不连续区段大小&gt;][-i &lt;字节&gt;][-N &lt;inode数&gt;][-l &lt;文件&gt;][-L &lt;标签&gt;][-m &lt;百分比值&gt;][-R=&lt;区块数&gt;][ 设备名称][区块数] 参数 -b&lt;区块大小&gt; 指定区块大小，单位为字节。 -c 检查是否有损坏的区块。 -f&lt;不连续区段大小&gt; 指定不连续区段的大小，单位为字节。 -F 不管指定的设备为何，强制执行mke2fs。 -i&lt;字节&gt; 指定”字节/inode”的比例。 -N&lt; inode数 &gt; 指定要建立的inode数目。 -l&lt;文件&gt; 从指定的文件中，读取文件西中损坏区块的信息。 -L&lt;标签&gt; 设置文件系统的标签名称。 -m&lt;百分比值&gt; 指定给管理员保留区块的比例，预设为5%。 -M 记录最后一次挂入的目录。 -q 执行时不显示任何信息。 -r 指定要建立的ext2文件系统版本。 -R=&lt;区块数&gt; 设置磁盘阵列参数。 -S 仅写入superblock与group descriptors，而不更改inode able inode bitmap以及block bitmap。 -v 执行时显示详细信息。 -V 显示版本信息。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mke2fs","slug":"Linux/磁盘维护/mke2fs","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mke2fs/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mke2fs","slug":"mke2fs","permalink":"http://yoursite.com/tags/mke2fs/"}]},{"title":"Linux-mkdosfs","slug":"Linux-mkdosfs","date":"2019-05-02T01:54:36.261Z","updated":"2019-02-19T12:45:50.000Z","comments":true,"path":"2019/05/02/Linux-mkdosfs/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkdosfs/","excerpt":"mkdosfs 命令mkdosfs 命令用于建立DOS文件系统。device 指你想要建立 DOS 档案系统的装置代号。像是 /dev/hda1 等等。 block_count 则是你希望配置的区块数。如果 block_count 没有指定则系统会自动替你计算符合该装置大小的区块数。","text":"mkdosfs 命令mkdosfs 命令用于建立DOS文件系统。device 指你想要建立 DOS 档案系统的装置代号。像是 /dev/hda1 等等。 block_count 则是你希望配置的区块数。如果 block_count 没有指定则系统会自动替你计算符合该装置大小的区块数。 语法1234567891011mkdosfs [ -c | -l filename ] [ -f number_of_FATs ] [ -F FAT_size ] [ -i volume_id ] [ -m message_file ] [ -n volume_name ] [ -r root_dir_entry ] [ -s sector_per_cluster ] [ -v ] device [ block_count ] 参数 -c 建立档案系统之前先检查是否有坏轨。 -l 从得定的档案中读取坏轨记录。 -f 指定档案配置表（FAT , File Allocation Table)的数量。预设值为 2 。目前 Linux 的 FAT 档案系统不支援超过 2 个 FAT 表。通常这个不需要改。 -F 指定 FAT 表的大小，通常是 12 或是 16 个位元组。12 位元组通常用于磁碟片，16 位元组用于一般硬盘的分割区，也就是所谓的 FAT16 格式。这个值通常系统会自己选定适当的值。在磁碟片上用 FAT16 通常不会发生作用，反之在硬盘上用 FAT12 亦然。 -i 指定 Volume ID。一般是一个 4 个位元组的数字，像是 2e203a47 。如果不给系统会自己产生。 -m 当使用者试图用这片磁片或是分割区开机，而上面没有操作系统时，系统会给使用者一段警告讯息。这个参数就是用来变更这个讯息的。你可以先用档案编辑好，然后用这个参数指定，或是用 -m -这样系统会要求你直接输入这段文字。要特别注意的是，档案里的字串长度不要超过 418 个字，包括展开的跳栏符号（TAB）和换行符号（换行符号在 DOS 底下算两个字元！） -n 指定 Volume Name，就是磁碟标签。如同在 DOS 底下的 format 指令一样，给不给都可以。没有预设值。 -r 指定根目录底下的最大档案数。这里所谓的档案数包括目录。预设值是在软碟上是 112 或是 224 ，在硬盘上是 512。没事不要改这个数字。 -s 每一个磁丛（cluster）的磁区数。必须是 2 的次方数。不过除非你知道你在作什么，这个值不要乱给。 -v 提供额外的讯息 实例将 A 槽里的磁碟片格式化为 DOS 格式，并将标签设为 Tester1mkdosfs -n Tester /dev/fd0","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkdosfs","slug":"Linux/磁盘维护/mkdosfs","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkdosfs/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkdosfs","slug":"mkdosfs","permalink":"http://yoursite.com/tags/mkdosfs/"}]},{"title":"Linux-mkdir","slug":"Linux-mkdir","date":"2019-05-02T01:54:36.253Z","updated":"2019-02-13T12:52:42.000Z","comments":true,"path":"2019/05/02/Linux-mkdir/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkdir/","excerpt":"mkdir 命令mkdir 命令用于建立名称为dirName之子目录。","text":"mkdir 命令mkdir 命令用于建立名称为dirName之子目录。 语法1mkdir [-p] dirName 参数 -p 确保目录名称存在，不存在的就建一个。 实例在工作目录下，建立一个名为AAA的子目录1mkdir AAA 在工作目录下的BBB中，建立一个名为Test的子目录。若BBB目录原本不存在，则建立一个。（注本例若不加-p，且原本BBB目录不存在，则产生错误。)1mkdir -p BBB/Test","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mkdir","slug":"Linux/磁盘管理/mkdir","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mkdir/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mkdir","slug":"mkdir","permalink":"http://yoursite.com/tags/mkdir/"}]},{"title":"Linux-mkbootdisk","slug":"Linux-mkbootdisk","date":"2019-05-02T01:54:36.245Z","updated":"2019-02-19T12:42:04.000Z","comments":true,"path":"2019/05/02/Linux-mkbootdisk/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mkbootdisk/","excerpt":"mkbootdisk 命令mkbootdisk 命令用于建立目前系统的启动盘。mkbootdisk可建立目前系统的启动盘。","text":"mkbootdisk 命令mkbootdisk 命令用于建立目前系统的启动盘。mkbootdisk可建立目前系统的启动盘。 语法1mkbootdisk [--noprompt][--verbose][--version][--device &lt;设备&gt;][--mkinitrdargs &lt;参数&gt;][kernel 版本] 参数 –device&lt;设备&gt; 指定设备。 –mkinitrdargs&lt;参数&gt; 设置mkinitrd的参数。 –noprompt 不会提示用户插入磁盘。 –verbose 执行时显示详细的信息。 –version 显示版本信息。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mkbootdisk","slug":"Linux/磁盘维护/mkbootdisk","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mkbootdisk/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mkbootdisk","slug":"mkbootdisk","permalink":"http://yoursite.com/tags/mkbootdisk/"}]},{"title":"Linux-minicom","slug":"Linux-minicom","date":"2019-05-02T01:54:36.235Z","updated":"2019-02-20T06:34:43.000Z","comments":true,"path":"2019/05/02/Linux-minicom/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-minicom/","excerpt":"minicom 命令minicom 命令用于调制解调器通信程序。minicom是一个相当受欢迎的PPP拨号连线程序。","text":"minicom 命令minicom 命令用于调制解调器通信程序。minicom是一个相当受欢迎的PPP拨号连线程序。 语法1minicom [-8lmMostz][-a&lt;on或0ff&gt;][-c&lt;on或off&gt;][-C&lt;取文件&gt;][-d&lt;编号&gt;][-p&lt;模拟终端机&gt;][-S&lt;script文件&gt;][配置文件] 参数 -8 不要修改任何8位编码的字符。 -a&lt; on或0ff &gt; 设置终端机属性。 -c&lt; on或off &gt; 设置彩色模式。 -C&lt;取文件&gt; 指定取文件，并在启动时开启取功能。 -d&lt;编号&gt; 启动或直接拨号。 -l 不会将所有的字符都转成ASCII码。 -m 以Alt或Meta键作为指令键。 -M 与-m参数类似。 -o 不要初始化调制解调器。 -p &lt;模拟终端机&gt; 使用模拟终端机。 -s 开启程序设置画面。 -S&lt; script文件 &gt; 在启动时，执行指定的script文件。 -t 设置终端机的类型。 -z 在终端机上显示状态列。 [配置文件] 指定minicom配置文件。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"minicom","slug":"Linux/网络通讯/minicom","permalink":"http://yoursite.com/categories/Linux/网络通讯/minicom/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"minicom","slug":"minicom","permalink":"http://yoursite.com/tags/minicom/"}]},{"title":"Linux-mingetty","slug":"Linux-mingetty","date":"2019-05-02T01:54:36.224Z","updated":"2019-02-20T05:49:41.000Z","comments":true,"path":"2019/05/02/Linux-mingetty/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mingetty/","excerpt":"mingetty 命令mingetty 命令是精简版的getty。mingetty适用于本机上的登入程序。","text":"mingetty 命令mingetty 命令是精简版的getty。mingetty适用于本机上的登入程序。 语法1mingetty [--long-hostname][--noclear][tty] 参数 –long-hostname 显示完整的主机名称。 –noclear 在询问登入的用户名称之前不要清楚屏幕画面。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"mingetty","slug":"Linux/网络通讯/mingetty","permalink":"http://yoursite.com/categories/Linux/网络通讯/mingetty/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"mingetty","slug":"mingetty","permalink":"http://yoursite.com/tags/mingetty/"}]},{"title":"Linux-minfo","slug":"Linux-minfo","date":"2019-05-02T01:54:36.217Z","updated":"2019-03-01T06:38:10.000Z","comments":true,"path":"2019/05/02/Linux-minfo/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-minfo/","excerpt":"minfo 命令minfo 命令用于显示MS-DOS文件系统的各项参数。","text":"minfo 命令minfo 命令用于显示MS-DOS文件系统的各项参数。minfo为mtools工具指令，可显示MS-DOS系统磁盘的各项参数，包括磁区数，磁头数等。 语法1&lt;/&gt;minfo [-v][驱动器代号] 参数 -v 除了一般信息外，并显示可开机磁区的内容。 实例显示DOS系统参数1# minfo -v C: //显示系统参数","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"minfo","slug":"Linux/系统设置/minfo","permalink":"http://yoursite.com/categories/Linux/系统设置/minfo/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"minfo","slug":"minfo","permalink":"http://yoursite.com/tags/minfo/"}]},{"title":"Linux-mformat","slug":"Linux-mformat","date":"2019-05-02T01:54:36.210Z","updated":"2019-02-19T12:40:00.000Z","comments":true,"path":"2019/05/02/Linux-mformat/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mformat/","excerpt":"mformat 命令mformat 命令用于对MS-DOS文件系统的磁盘进行格式化.在已经做过低阶格式化的磁片上建立DOS档案系统.如果在编程mtools的时候把USE_2M的参数打开,部分与2M格式相关的参数就会发生作用.否则这些参数(像是S,2,1,M)不会发生作用。","text":"mformat 命令mformat 命令用于对MS-DOS文件系统的磁盘进行格式化.在已经做过低阶格式化的磁片上建立DOS档案系统.如果在编程mtools的时候把USE_2M的参数打开,部分与2M格式相关的参数就会发生作用.否则这些参数(像是S,2,1,M)不会发生作用。 语法1mformat [-t cylinders] [-h heads] [-s sectors] [-l volume_label] [-F] [-I fsVer-sion] [-S sizecode] [-2 sectors_on_track_0] [-M software_sector_size] [-a] [-X] [-C] [-H hidden_sectors] [-r root_sectors] [-B boot_sector] [-0 rate_on_track_0] [-A rate_on_other_tracks] [-1] [-k] drive: 参数 -t 磁柱（synlider）数 -h 磁头（head）数 -s 每一磁轨的磁区数 -l 标签 -F 将磁碟格式化为 FAT32 格式，不过这个参数还在实验中。 -I 设定 FAT32 中的版本号。这当然也还在实验中。 -S 磁区大小代码，计算方式为 sector = 2^(大小代码+7) -c 磁丛（cluster）的磁区数。如果所给定的数字会导致磁丛数超过 FAT 表的限制，mformat 会自动放大磁区数。 -s -M 软件磁区大小。这个数字就是系统回报的磁区大小。通常是和实际的大小相同。 -a 如果加上这个参数，mformat 会产生一组 Atari 系统的序号给这块软碟。 -X 将软碟格式化成 XDF 格式。使用前必须先用 xdfcopy 指令对软碟作低阶格式化的动作。 -C 产生一个可以安装 MS-DOS 档案系统的磁碟影像档（disk image）。当然对一个实体磁碟机下这个参数是没有意义的。 -H 隐藏磁区的数目。这通常适用在格式化硬盘的分割区时，因为通常一个分割区的前面还有分割表。这个参数未经测试，能不用就不用。 -n 磁碟序号 -r 根目录的大小，单位是磁区数。这个参数只对 FAT12 和 FAT16 有效。 -B 使用所指定的档案或是设备的开机磁区做为这片磁片或分割区的开机磁区。当然当中的硬件参数会随之更动。 -k 尽量保持原有的开机磁区。 -0 第 0 轨的资料传输率 -A 第 0 轨以外的资料传输率 -2 使用 2m 格式 -1 不使用 2m 格式 实例用预设值把a：（就是/dev/fd0）里的磁碟片格式化1mformat a:","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mformat","slug":"Linux/磁盘维护/mformat","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mformat/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mformat","slug":"mformat","permalink":"http://yoursite.com/tags/mformat/"}]},{"title":"Linux-mesg","slug":"Linux-mesg","date":"2019-05-02T01:54:36.204Z","updated":"2019-02-20T06:38:22.000Z","comments":true,"path":"2019/05/02/Linux-mesg/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mesg/","excerpt":"mesg 命令mesg 命令用于设置终端机的写入权限。将mesg设置y时，其他用户可利用write指令将信息直接显示在您的屏幕上。","text":"mesg 命令mesg 命令用于设置终端机的写入权限。将mesg设置y时，其他用户可利用write指令将信息直接显示在您的屏幕上。 语法1mesg [ny] 参数 n 不允许其他用户将信息直接显示在你的屏幕上。 y 允许其他用户将信息直接显示在你的屏幕上。 实例允许其他用户法系你先到当前终端root的终端1mesg y 其他普通用户的终端1234$ write root pts/4 hellohelloEOF //Ctrl+D 结束输入 root的终端 终端显示1234# Message from root@w3cschool.cc (as hnlinux) on pts/5 at 14:48 ...helloEOF","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"mesg","slug":"Linux/网络通讯/mesg","permalink":"http://yoursite.com/categories/Linux/网络通讯/mesg/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"mesg","slug":"mesg","permalink":"http://yoursite.com/tags/mesg/"}]},{"title":"Linux-mdu","slug":"Linux-mdu","date":"2019-05-02T01:54:36.197Z","updated":"2019-02-13T12:46:56.000Z","comments":true,"path":"2019/05/02/Linux-mdu/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mdu/","excerpt":"mdu 命令mdu 命令用于显示MS-DOS目录所占的磁盘空间。mdu为mtools工具指令，可现实MS-DOS文件系统中目录所占用的磁盘空间。","text":"mdu 命令mdu 命令用于显示MS-DOS目录所占的磁盘空间。mdu为mtools工具指令，可现实MS-DOS文件系统中目录所占用的磁盘空间。 语法1mdu [-as][目录] 参数 -a 显示每个文件及整个目录所占用的空间。 -s 仅显示整个目录所占用的空间。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mdu","slug":"Linux/磁盘管理/mdu","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mdu/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mdu","slug":"mdu","permalink":"http://yoursite.com/tags/mdu/"}]},{"title":"Linux-mdir","slug":"Linux-mdir","date":"2019-05-02T01:54:36.191Z","updated":"2019-02-06T16:07:09.000Z","comments":true,"path":"2019/05/02/Linux-mdir/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mdir/","excerpt":"mdir 命令mdir 命令用于显示MS-DOS目录。ndir为mtools工具指令，模拟MS-DOS的dir指令，可显示MS-DOS文件系统的目录内容。","text":"mdir 命令mdir 命令用于显示MS-DOS目录。ndir为mtools工具指令，模拟MS-DOS的dir指令，可显示MS-DOS文件系统的目录内容。 语法1mdir [-afwx/][目录] 参数 -/ 显示目录下所有子目录与文件。 -a 显示隐藏文件。 -f 不显示磁盘所剩余的可用空间。 -w 仅显示目录或文件名称，并以横排方式呈现，以便一次能显示较多的目录或文件。 -X 仅显示目录下所有子目录与文件的完整路径，不显示其他信息。 实例显示a盘中的内容1mdir -/ a:\\*","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mdir","slug":"Linux/文件管理/mdir","permalink":"http://yoursite.com/categories/Linux/文件管理/mdir/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mdir","slug":"mdir","permalink":"http://yoursite.com/tags/mdir/"}]},{"title":"Linux-mdeltree","slug":"Linux-mdeltree","date":"2019-05-02T01:54:36.183Z","updated":"2019-02-13T12:44:07.000Z","comments":true,"path":"2019/05/02/Linux-mdeltree/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mdeltree/","excerpt":"mdeltree 命令mdeltree 命令可用来删除MS-DOS格式档案及目录。mdeltree 会将所指定的目录与目录之下的所有档案与目录都删除掉。如果所指定的档案或目录不存在，则会传回错误讯息。","text":"mdeltree 命令mdeltree 命令可用来删除MS-DOS格式档案及目录。mdeltree 会将所指定的目录与目录之下的所有档案与目录都删除掉。如果所指定的档案或目录不存在，则会传回错误讯息。 语法1mdeltree [-v] msdosdirectory [msdosdirectories...] 参数 -v 显示更多的信息。 实例将A磁盘根目录中的msdosdir目录以下的档案与目录都删除掉。1mcopy a:msdosdir","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mdeltree","slug":"Linux/磁盘管理/mdeltree","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mdeltree/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mdeltree","slug":"mdeltree","permalink":"http://yoursite.com/tags/mdeltree/"}]},{"title":"Linux-mdel","slug":"Linux-mdel","date":"2019-05-02T01:54:36.178Z","updated":"2019-02-06T16:01:11.000Z","comments":true,"path":"2019/05/02/Linux-mdel/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mdel/","excerpt":"mdel 命令mdel 命令用来删除MSDOS格式的档案。在删除只读之前会有提示信息产生。","text":"mdel 命令mdel 命令用来删除MSDOS格式的档案。在删除只读之前会有提示信息产生。 语法1mdel [-v] msdosfile [ msdosfiles ... ] 参数 -v 显示更多的讯息。 实例将A槽磁片根目录中的autoexec.bat 删除1mdel a:autoexec.bat","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mdel","slug":"Linux/文件管理/mdel","permalink":"http://yoursite.com/categories/Linux/文件管理/mdel/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mdel","slug":"mdel","permalink":"http://yoursite.com/tags/mdel/"}]},{"title":"Linux-mcopy","slug":"Linux-mcopy","date":"2019-05-02T01:54:36.170Z","updated":"2019-02-07T12:20:00.000Z","comments":true,"path":"2019/05/02/Linux-mcopy/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mcopy/","excerpt":"mcopy 命令mcopy 命令用来复制MSDOS格式文件到Linux中，或是由Linux中复制到MSDOS文件到磁片上。mcopy可复制单一的文件到所指定的文件名称，或是复制数个文件到所指定的目录中。来源与目的文件可为MSDOS或是Linux文件。mcopy指令是一种mtools工具指令，可以在DOS系统中复制文件或者在DOS与Linux操作系统之间进行文件复制。","text":"mcopy 命令mcopy 命令用来复制MSDOS格式文件到Linux中，或是由Linux中复制到MSDOS文件到磁片上。mcopy可复制单一的文件到所指定的文件名称，或是复制数个文件到所指定的目录中。来源与目的文件可为MSDOS或是Linux文件。mcopy指令是一种mtools工具指令，可以在DOS系统中复制文件或者在DOS与Linux操作系统之间进行文件复制。 语法1mcopy [-bnmpQt/][源文件][目标文件或目录] 参数 b 批处理模式。这是为大量的文件复制进行最佳化的选项,但是当在复制文件过程中产生 crash 时，会有安全性的问题产生。/ 递回的复制。包含目录所含文件与其下所有子目录中的文件。 -n 覆盖其他文件时，不需要进行确认而直接覆盖 m 将源文件修改时间设置为目标文件的修改时间。 p 将源文件的属性设置为目标文件的属性。 Q 当复制多个文件产生错误时，尽快结束程序。 t 转换为文本文件。 o 在覆盖 MSDOS 文件时不会出现警示讯息。 实例将A盘根目录中的autoexec.bat复制到目前工作目录之下1mcopy a:autoexec.bat . 当复制的内容包括子目录和文件时,必须使用参数”-/“递归操作,因此该命令为:1mcopy -/ A:\\* 执行该命令前先使用mdir命令查看原来的目录结构,执行mcopy之后可使用ls命令查看复制之后Linux系统中的文件结构,结果为:12345678910111213cmd@cmd-desktop:~$ mdir -/ a:\\* #查看A 盘中的文件 Volume in drive A has no label #加载信息 Volume Serial Number is 13D2~055C Directory for A:/ #以下为目录信息 #文件名目录大小 修改时间 ./TEST &lt;DIR&gt; 2009-09-23 16:59 AUTORUN.INF 265 2009-09-23 16:53 AUTORUN.BAT 43 2009-09-23 16:56 3 files 308 bytes #统计总大小 724 325 bytes free #剩余空间 cmd@cmd-desktop:~$ mcopy -/ A:\\* #将A盘上的所有文件复制到当前工作目录 cmd@cmd-desktop:~$ls TEST AUTORUN.INF AUTORUN.BAT #A盘中的内容复制到Linux文件系统结构中","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mcopy","slug":"Linux/文件管理/mcopy","permalink":"http://yoursite.com/categories/Linux/文件管理/mcopy/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mcopy","slug":"mcopy","permalink":"http://yoursite.com/tags/mcopy/"}]},{"title":"Linux-mcd","slug":"Linux-mcd","date":"2019-05-02T01:54:36.164Z","updated":"2019-02-13T12:39:50.000Z","comments":true,"path":"2019/05/02/Linux-mcd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mcd/","excerpt":"mcd 命令mcd 命令为mtools工具指令，可在MS-DOS文件系统中切换工作目录。若不加任何参数，则显示目前所在的磁盘与工作目录。","text":"mcd 命令mcd 命令为mtools工具指令，可在MS-DOS文件系统中切换工作目录。若不加任何参数，则显示目前所在的磁盘与工作目录。 语法1mcd [msdosdirectory] 实例变更目前工作目录到a:emp中1mcd a:emp 传回目前工作目录1mcd","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"mcd","slug":"Linux/磁盘管理/mcd","permalink":"http://yoursite.com/categories/Linux/磁盘管理/mcd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"mcd","slug":"mcd","permalink":"http://yoursite.com/tags/mcd/"}]},{"title":"Linux-mc","slug":"Linux-mc","date":"2019-05-02T01:54:36.158Z","updated":"2019-02-06T14:59:32.000Z","comments":true,"path":"2019/05/02/Linux-mc/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mc/","excerpt":"mc 命令mc 命令是用于提供一个菜单式的文件管理程序。执行mc后，将会看到菜单式的文件管理程序，共分为4个部分。","text":"mc 命令mc 命令是用于提供一个菜单式的文件管理程序。执行mc后，将会看到菜单式的文件管理程序，共分为4个部分。 语法1mc [-abcdfhkPstuUVx][-C &lt;参数&gt;][-l &lt;文件&gt;][-v &lt;文件&gt;][目录] 参数 -a 当mc程序画线时不用绘图字符画线。 -b 使用单色模式显示。 -c 使用彩色模式显示。 -C&lt;参数&gt; 指定显示的颜色。 -d 不使用鼠标。 -f 显示mc函数库所在的目录。 -h 显示帮助。 -k 重设softkeys成预设置。 -l&lt;文件&gt; 在指定文件中保存ftpfs对话窗的内容。 -P 程序结束时，列出最后的工作目录。 -s 用慢速的终端机模式显示，在这模式下将减少大量的绘图及文字显示。 -t 使用TEMPCAP变量设置终端机，而不使用预设置。 -u 不用目前的shell程序。 -U 使用目前的shell程序。 -v&lt;文件&gt; 使用mc的内部编辑器来显示指定的文件。 -V 显示版本信息。 -x 指定以xterm模式显示。 相关操作 命令按键 描述 F9 or Esc+9 激活菜单栏 Tab 在两个窗口间移动 F10 or Esc+0 退出MC Control-Enter or Alt-Enter 可以将文件名拷贝到命令行 F1 or Esc+1 打开帮助页面","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mc","slug":"Linux/文件管理/mc","permalink":"http://yoursite.com/categories/Linux/文件管理/mc/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mc","slug":"mc","permalink":"http://yoursite.com/tags/mc/"}]},{"title":"Linux-mbadblocks","slug":"Linux-mbadblocks","date":"2019-05-02T01:54:36.150Z","updated":"2019-02-19T13:37:07.000Z","comments":true,"path":"2019/05/02/Linux-mbadblocks/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mbadblocks/","excerpt":"mbadblocks 命令mbadblocks 命令用于检查MS-DOS文件系统的磁盘是否有损坏的磁区。mbadblocks为mtools工具指令，可用来扫描MS-DOS文件系统的磁盘驱动器，并标出损坏的磁区。","text":"mbadblocks 命令mbadblocks 命令用于检查MS-DOS文件系统的磁盘是否有损坏的磁区。mbadblocks为mtools工具指令，可用来扫描MS-DOS文件系统的磁盘驱动器，并标出损坏的磁区。 语法1mbadblocks [驱动器代号]","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"mbadblocks","slug":"Linux/磁盘维护/mbadblocks","permalink":"http://yoursite.com/categories/Linux/磁盘维护/mbadblocks/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"mbadblocks","slug":"mbadblocks","permalink":"http://yoursite.com/tags/mbadblocks/"}]},{"title":"Linux-mattrib","slug":"Linux-mattrib","date":"2019-05-02T01:54:36.144Z","updated":"2019-02-04T13:50:20.000Z","comments":true,"path":"2019/05/02/Linux-mattrib/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-mattrib/","excerpt":"mattrib 命令mattrib 命令用来变更或显示MS-DOS 文件的属性。mattrib 为mtools工具指令，模拟MS-DOS的attrib指令，可变更MS-DOS文件的属性。","text":"mattrib 命令mattrib 命令用来变更或显示MS-DOS 文件的属性。mattrib 为mtools工具指令，模拟MS-DOS的attrib指令，可变更MS-DOS文件的属性。 语法1mattrib [-a|+a] [-h|+h] [-r|+r] [-s|+s] [-/] [-X] msdosfile [ msdosfiles ... ] 参数 -a/+a 除去/设定备份属性。 -h/+h 除去/设定隐藏属性。 -r/+r 除去/设定唯读属性。 -s/+s 除去/设定系统属性。 -/ 递回的处理包含所有子目录下的档案。 -X 以较短的格式输出结果。 实例列出A槽MSDOS格式磁片上所有文件的属性1mattrib a: 除去A 槽磁片上msdos.sys档案的隐藏、系统与唯读属性1mattrib -h -s -r a:msdos.sys 除去A槽磁片上包含子目录下所有档案的唯读属性1mattrib -r -/ a:*.*","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"mattrib","slug":"Linux/文件管理/mattrib","permalink":"http://yoursite.com/categories/Linux/文件管理/mattrib/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"mattrib","slug":"mattrib","permalink":"http://yoursite.com/tags/mattrib/"}]},{"title":"Linux-MAKEDEV","slug":"Linux-MAKEDEV","date":"2019-05-02T01:54:36.139Z","updated":"2019-03-02T06:33:52.000Z","comments":true,"path":"2019/05/02/Linux-MAKEDEV/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-MAKEDEV/","excerpt":"MAKEDEV 命令MAKEDEV 命令用于新增 /dev/ 下的装置档案，多数分区已经将所有的档案都产生，故一般而言不太会需要用到这个命令。","text":"MAKEDEV 命令MAKEDEV 命令用于新增 /dev/ 下的装置档案，多数分区已经将所有的档案都产生，故一般而言不太会需要用到这个命令。 语法123MAKEDEV -VMAKEDEV [ -n ] [ -v ] updateMAKEDEV [ -n ] [ -v ] [ -d ] device ...","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"设备管理","slug":"Linux/设备管理","permalink":"http://yoursite.com/categories/Linux/设备管理/"},{"name":"MAKEDEV","slug":"Linux/设备管理/MAKEDEV","permalink":"http://yoursite.com/categories/Linux/设备管理/MAKEDEV/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"设备管理","slug":"设备管理","permalink":"http://yoursite.com/tags/设备管理/"},{"name":"MAKEDEV","slug":"MAKEDEV","permalink":"http://yoursite.com/tags/MAKEDEV/"}]},{"title":"Linux-lsmod","slug":"Linux-lsmod","date":"2019-05-02T01:54:36.133Z","updated":"2019-03-01T06:49:48.000Z","comments":true,"path":"2019/05/02/Linux-lsmod/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lsmod/","excerpt":"lsmod 命令lsmod 命令用于显示已载入系统的模块。","text":"lsmod 命令lsmod 命令用于显示已载入系统的模块。执行lsmod(list modules)指令，会列出所有已载入系统的模块。Linux操作系统的核心具有模块化的特性，应此在编译核心时，务须把全部的功能都放入核心。您可以将这些功能编译成一个个单独的模块，待需要时再分别载入。 语法1lsmod 实例显示模块信息1lsmod","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"lsmod","slug":"Linux/系统设置/lsmod","permalink":"http://yoursite.com/categories/Linux/系统设置/lsmod/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"lsmod","slug":"lsmod","permalink":"http://yoursite.com/tags/lsmod/"}]},{"title":"Linux-lsattr","slug":"Linux-lsattr","date":"2019-05-02T01:54:36.128Z","updated":"2019-02-04T13:36:52.000Z","comments":true,"path":"2019/05/02/Linux-lsattr/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lsattr/","excerpt":"lsattr 命令lsattr 命令用于显示文件属性。用chattr 执行改变文件或目录的属性，可执行lsattr命令查询其属性。","text":"lsattr 命令lsattr 命令用于显示文件属性。用chattr 执行改变文件或目录的属性，可执行lsattr命令查询其属性。 语法1lsattr [-adlRvV][文件或目录...] 参数 -a 显示所有文件和目录，包括以”.”为名称开头字符的额外内建，现行目录”.”与上层目录”..”。 -d 显示，目录名称，而非其内容。 -l 此参数目前没有任何作用。 -R 递归处理，将指定目录下的所有文件及子目录一并处理。 -v 显示文件或目录版本。 -V 显示版本信息。 实例用chattr 命令防止系统中某个关键文件被修改1chattr +i /etc/resolv.conf 然后用mv /etc/resolv.conf等命令操作于该文件，都是得到Operation not permitted 的结果。vim编辑该文件时会提示W10: Warning: Changing a readonly file错误。要想修改此文件就要把i属性去掉：1chattr -i /etc/resolv.conf 使用lsattr 命令来显示文件属性1lsattr /etc/resolv.conf 输出结果：1----i-------- /etc/resolv.conf 让某个文件只能往里面追加数据，但不能删除，适用于各种日志文件1chattr +a /var/log/messages","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"lsattr","slug":"Linux/文件管理/lsattr","permalink":"http://yoursite.com/categories/Linux/文件管理/lsattr/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"lsattr","slug":"lsattr","permalink":"http://yoursite.com/tags/lsattr/"}]},{"title":"Linux-ls","slug":"Linux-ls","date":"2019-05-02T01:54:36.121Z","updated":"2019-02-13T14:46:44.000Z","comments":true,"path":"2019/05/02/Linux-ls/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ls/","excerpt":"ls 命令ls 命令用于显示指定工作目录下的内容（列出目前工作目录所含之文件及子目录）。","text":"ls 命令ls 命令用于显示指定工作目录下的内容（列出目前工作目录所含之文件及子目录）。 语法1ls [-alrtAFR] [name...] 参数 -a 显示所有文件及目录 (ls内定将文件名或目录名称开头为”.”的视为隐藏档，不会列出) -l 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出 -r 将文件以相反次序显示(原定依英文字母次序) -t 将文件依建立时间之先后次序列出 -A 同 -a ，但不列出 “.” (目前目录) 及 “..” (父目录) -F 在列出的文件名称后加一符号；例如可执行档则加 “*”, 目录则加 “/“ -R 若目录下有文件，则以下之文件亦皆依序列出 实例列出根目录（\\）下所有目录：1ls 列出目前工作目录下所有名称为s开头的文件，越新的排越后面：1ls -ltr s* 将/bin目录以下所有目录及文件详细资料列出：1ls -lR /bin 列出当前工作目录下所有文件及目录；目录于名称后加“/”，可执行档于名称后加“*”:1ls -AF","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"ls","slug":"Linux/磁盘管理/ls","permalink":"http://yoursite.com/categories/Linux/磁盘管理/ls/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"ls","slug":"ls","permalink":"http://yoursite.com/tags/ls/"}]},{"title":"Linux-lprm","slug":"Linux-lprm","date":"2019-05-02T01:54:36.114Z","updated":"2019-02-12T13:18:52.000Z","comments":true,"path":"2019/05/02/Linux-lprm/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lprm/","excerpt":"lprm 命令lprm 命令用于将一个工作由打印机贮列中移除。尚未完成的打印机工作会被放在打印机贮列中，这个命令可用来将常未送到打印机的工作取消。由于每一个打印机都有一个独立的贮列，你可以用-P这个命令设定想要作用的打印机。如果没有设定的话，会使用系统预设的打印机。这个命令会检查使用者是否有足够的权限删除指定的档案，一般而言，只有档案的拥有者或是系统管理员才有这个权限。","text":"lprm 命令lprm 命令用于将一个工作由打印机贮列中移除。尚未完成的打印机工作会被放在打印机贮列中，这个命令可用来将常未送到打印机的工作取消。由于每一个打印机都有一个独立的贮列，你可以用-P这个命令设定想要作用的打印机。如果没有设定的话，会使用系统预设的打印机。这个命令会检查使用者是否有足够的权限删除指定的档案，一般而言，只有档案的拥有者或是系统管理员才有这个权限。 语法1/usr/bin/lprm [P] [file...] 实例将打印机hpprinter中的第1123号工作移除。1lprm -P hpprinter 1123 将第1011号工作由预设印表机中移除1lprm 1011","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"lprm","slug":"Linux/文件传输/lprm","permalink":"http://yoursite.com/categories/Linux/文件传输/lprm/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"lprm","slug":"lprm","permalink":"http://yoursite.com/tags/lprm/"}]},{"title":"Linux-lpr","slug":"Linux-lpr","date":"2019-05-02T01:54:36.108Z","updated":"2019-02-12T13:24:43.000Z","comments":true,"path":"2019/05/02/Linux-lpr/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lpr/","excerpt":"lpr 命令lpr 命令用来将一个或多个文件放入打印队列等待打印。lpr可以用来将料资送给本地或是远端主机来处理。","text":"lpr 命令lpr 命令用来将一个或多个文件放入打印队列等待打印。lpr可以用来将料资送给本地或是远端主机来处理。 语法1lpr [ -P printer ] 参数 -p Printer: 将资料送至指定的打印机 Printer，预设值为 lp。 实例将在名为mailroom的打印机上打印report文件1lpr -P mailroom report 使用一条打印命令可打印多个文件，在名为laser1的打印机上打印三个文件1lpr -P laser1 05.txt 108.txt 12.txt","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"lpr","slug":"Linux/文件传输/lpr","permalink":"http://yoursite.com/categories/Linux/文件传输/lpr/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"lpr","slug":"lpr","permalink":"http://yoursite.com/tags/lpr/"}]},{"title":"Linux-lpq","slug":"Linux-lpq","date":"2019-05-02T01:54:36.102Z","updated":"2019-02-12T13:30:25.000Z","comments":true,"path":"2019/05/02/Linux-lpq/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lpq/","excerpt":"lpq 命令lpq 命令用于查看一个打印队列的状态，该程序可以查看打印机队列状态及其所包含的打印任务。","text":"lpq 命令lpq 命令用于查看一个打印队列的状态，该程序可以查看打印机队列状态及其所包含的打印任务。 语法1lpq [l] [P] [user] 参数 -P 指定一个打印机，否则使用默认打印机或环境变量PRINTER指定的打印机。 -l 打印组成作业的所有文件的信息。 实例为系统默认的打印机printer的一个空队列 123$ lpq printer is ready no entries 如果事先并未指定打印机（使用-P选项），系统便会显示默认的打印机。如果向打印机发送打印任务，然后查看打印队列，便会看到如下列表。123456$ ls *.txt | pr -3 | lp request id is printer-603 (1 file(s)) [me@linuxbox ~]$ lpq printer is ready and printing Rank Owner Job File(s) Total Size active me 603 (stdin)","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"lpq","slug":"Linux/文件传输/lpq","permalink":"http://yoursite.com/categories/Linux/文件传输/lpq/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"lpq","slug":"lpq","permalink":"http://yoursite.com/tags/lpq/"}]},{"title":"Linux-lpd","slug":"Linux-lpd","date":"2019-05-02T01:54:36.095Z","updated":"2019-02-12T13:40:17.000Z","comments":true,"path":"2019/05/02/Linux-lpd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lpd/","excerpt":"lpd 命令lpd 命令是一个常驻的打印机管理程序，它会根据/etc/printcap的内容来管理本地或远端的打印机。/etc/printcap中定义的每一个打印机必须在/var/lpd中有一个相对应的目录，目录中以cf开头的档案表示一个等待送到设当位置的印表工作。这个档案通常是由lpr所产生的。lpr和lpd组成了一个可以离线工作的系统，当你使用lpr时，打印机不需要能立即可用，甚至不用存在。lpd会自动监视打印机的状况，当打印机上线后，便立即将档案送交处理。这个得所有的应用程序不必等待打印机完成前一工作。","text":"lpd 命令lpd 命令是一个常驻的打印机管理程序，它会根据/etc/printcap的内容来管理本地或远端的打印机。/etc/printcap中定义的每一个打印机必须在/var/lpd中有一个相对应的目录，目录中以cf开头的档案表示一个等待送到设当位置的印表工作。这个档案通常是由lpr所产生的。lpr和lpd组成了一个可以离线工作的系统，当你使用lpr时，打印机不需要能立即可用，甚至不用存在。lpd会自动监视打印机的状况，当打印机上线后，便立即将档案送交处理。这个得所有的应用程序不必等待打印机完成前一工作。 语法1lpd [-l] [#port] 参数 -l: 将一些除错讯息显示在标准输出上。 #port: 一般而言，lpd 会使用 getservbyname 取得适当的 TCP/IP port，你可以使用这个参数强迫 lpd 使用指定的 port。 实例这个程序通常是由/etc/rc.d中的程序在系统起始阶段执行。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"lpd","slug":"Linux/文件传输/lpd","permalink":"http://yoursite.com/categories/Linux/文件传输/lpd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"lpd","slug":"lpd","permalink":"http://yoursite.com/tags/lpd/"}]},{"title":"Linux-losetup","slug":"Linux-losetup","date":"2019-05-02T01:54:36.089Z","updated":"2019-02-19T13:57:42.000Z","comments":true,"path":"2019/05/02/Linux-losetup/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-losetup/","excerpt":"losetup 命令losetup 命令用于设置循环设备。循环设备可把文件虚拟成区块设备，籍以模拟整个文件系统，让用户得以将其视为硬盘驱动器、光驱或软驱等设备，并挂入当作目录来使用。","text":"losetup 命令losetup 命令用于设置循环设备。循环设备可把文件虚拟成区块设备，籍以模拟整个文件系统，让用户得以将其视为硬盘驱动器、光驱或软驱等设备，并挂入当作目录来使用。 语法1losetup [-d][-e &lt;加密方式&gt;][-o &lt;平移数目&gt;][循环设备代号][文件] 参数 -d 卸除设备。 -e&lt;加密方式&gt; 启动加密编码。 -o&lt;平移数目&gt; 设置数据平移的数目。 实例创建空的磁盘镜像文件，这里创建一个1.44M的软盘：1$ dd if=/dev/zero of=floppy.img bs=512 count=2880 使用 losetup将磁盘镜像文件虚拟成快设备1$ losetup /dev/loop1 floppy.img 挂载块设备1$ mount /dev/loop0 /tmp 经过上面的三步之后，我们就可以通过/tmp目录，像访问真实快设备一样来访问磁盘镜像文件floppy.img。 卸载loop设备12$ umount /tmp$ losetup -d /dev/loop1 一个完整测试实例 首先创建一个 1G 大小的空文件： 1234# dd if=/dev/zero of=loopfile.img bs=1G count=11+0 records in1+0 records out1073741824 bytes (1.1 GB) copied, 69.3471 s, 15.5 MB/s 对该文件格式化为 ext4 格式： 12# mkfs.ext4 loopfile.img。。。。 用 file 命令查看下格式化后的文件类型： 12# file loopfile.imgloopfile.img: Linux rev 1.0 ext4 filesystem data, UUID=a9dfb4a0-6653-4407-ae05-7044d92c1159 (extents) (large files) (huge files) 准备将上面的文件挂载起来： 12# mkdir /mnt/loopback# mount -o loop loopfile.img /mnt/loopback mount 命令的 -o loop 选项可以将任意一个 loopback 文件系统挂载。上面的 mount 命令实际等价于下面两条命令：12# losetup /dev/loop0 loopfile.img# mount /dev/loop0 /mnt/loopback 因此实际上，mount -o loop 在内部已经默认的将文件和 /dev/loop0 挂载起来了。然而对于第一种方法(mount -o loop)并不能适用于所有的场景。比如，我们想创建一个硬盘文件，然后对该文件进行分区，接着挂载其中一个子分区，这时就不能用 -o loop 这种方法了。因此必须如下做：12# losetup /dev/loop1 loopfile.img# fdisk /dev/loop1 卸载挂载点： 1# umount /mnt/loopback","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"losetup","slug":"Linux/磁盘维护/losetup","permalink":"http://yoursite.com/categories/Linux/磁盘维护/losetup/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"losetup","slug":"losetup","permalink":"http://yoursite.com/tags/losetup/"}]},{"title":"Linux-look","slug":"Linux-look","date":"2019-05-02T01:54:36.083Z","updated":"2019-02-10T15:37:16.000Z","comments":true,"path":"2019/05/02/Linux-look/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-look/","excerpt":"look 命令look 命令用于查询单词。look指令用于英文单词的查询。您仅需基于它欲查询的字首字符串，它会显示所有开头字符串符合该条件的单词。","text":"look 命令look 命令用于查询单词。look指令用于英文单词的查询。您仅需基于它欲查询的字首字符串，它会显示所有开头字符串符合该条件的单词。 语法1look [-adf][-t&lt;字尾字符串&gt;][字首字符串][字典文件] 参数 -a 使用另一个字典文件web2，该文件也位于/usr/dict目录下。 -d 只对比英文字母和数字，其余一慨忽略不予比对。 -f 忽略字符大小写差别。 -t&lt;字尾字符串&gt; 设置字尾字符串。 实例为了查找在testfile文件中以字母L开头的所有的行，输入以下命令：1look L testfile 原文件testfile中的内容如下：12345$ cat testfile #查看testfile 文件内容 HELLO LINUX! Linux is a free unix-type opterating system. This is a linux testfile! Linux test 在testfile文件中使用look命令查找“L”开头的单词，结果如下：123$ look L testfile #查找以“L”开头的单词 Linux is a free unix-type opterating system. #第二行以“L”开头，列出全句 Linux test #第四行以“L”开头，列出全句","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"look","slug":"Linux/文档编辑/look","permalink":"http://yoursite.com/categories/Linux/文档编辑/look/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"look","slug":"look","permalink":"http://yoursite.com/tags/look/"}]},{"title":"Linux-logrotate","slug":"Linux-logrotate","date":"2019-05-02T01:54:36.077Z","updated":"2019-02-27T04:56:49.000Z","comments":true,"path":"2019/05/02/Linux-logrotate/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-logrotate/","excerpt":"logrotate 命令logrotate 命令用于管理记录文件。","text":"logrotate 命令logrotate 命令用于管理记录文件。使用logrotate指令，可让你轻松管理系统所产生的记录文件。它提供自动替换，压缩，删除和邮寄记录文件，每个记录文件都可被设置成每日，每周或每月处理，也能在文件太大时立即处理。您必须自行编辑，指定配置文件，预设的配置文件存放在/etc目录下，文件名称为logrotate.conf。 语法1logrotate [-?dfv][-s &lt;状态文件&gt;][--usage][配置文件] 参数 -?或–help 在线帮助。 -d或–debug 详细显示指令执行过程，便于排错或了解程序执行的情况。 -f或–force 强行启动记录文件维护操作，纵使logrotate指令认为没有需要亦然。 -s&lt;状态文件&gt;或–state=&lt;状态文件&gt; 使用指定的状态文件。 -v或–version 显示指令执行过程。 -usage 显示指令基本用法。 实例指定记录文件1# logrotate /root/log.config","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"logrotate","slug":"Linux/系统管理/logrotate","permalink":"http://yoursite.com/categories/Linux/系统管理/logrotate/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"logrotate","slug":"logrotate","permalink":"http://yoursite.com/tags/logrotate/"}]},{"title":"Linux-logout","slug":"Linux-logout","date":"2019-05-02T01:54:36.071Z","updated":"2019-02-26T14:27:45.000Z","comments":true,"path":"2019/05/02/Linux-logout/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-logout/","excerpt":"logout 命令logout 命令用于退出系统。","text":"logout 命令logout 命令用于退出系统。logout指令让用户退出系统,其功能和login指令相互对应。 语法1logout 实例退出系统1logout","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"logout","slug":"Linux/系统管理/logout","permalink":"http://yoursite.com/categories/Linux/系统管理/logout/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"logout","slug":"logout","permalink":"http://yoursite.com/tags/logout/"}]},{"title":"Linux-logname","slug":"Linux-logname","date":"2019-05-02T01:54:36.064Z","updated":"2019-02-26T14:23:09.000Z","comments":true,"path":"2019/05/02/Linux-logname/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-logname/","excerpt":"logname 命令logname 命令用于显示用户名称。","text":"logname 命令logname 命令用于显示用户名称。执行logname指令，它会显示目前用户的名称。 语法1logname [--help][--version] 实例显示登录账号的信息1logname","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"logname","slug":"Linux/系统管理/logname","permalink":"http://yoursite.com/categories/Linux/系统管理/logname/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"logname","slug":"logname","permalink":"http://yoursite.com/tags/logname/"}]},{"title":"Linux-login","slug":"Linux-login","date":"2019-05-02T01:54:36.058Z","updated":"2019-02-26T14:10:27.000Z","comments":true,"path":"2019/05/02/Linux-login/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-login/","excerpt":"login 命令login 命令用于登入系统。","text":"login 命令login 命令用于登入系统。login指令让用户登入系统，您亦可通过它的功能随时更换登入身份。在Slackware发行版中 ，您可在指令后面附加欲登入的用户名称，它会直接询问密码，等待用户输入。当/etc目录里含名称为nologin的文件时，系统只root帐号登入系统，其他用户一律不准登入。 语法1login 实例使用新的身份登录系统 login","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"login","slug":"Linux/系统管理/login","permalink":"http://yoursite.com/categories/Linux/系统管理/login/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"login","slug":"login","permalink":"http://yoursite.com/tags/login/"}]},{"title":"Linux-locate","slug":"Linux-locate","date":"2019-05-02T01:54:36.052Z","updated":"2019-02-04T13:27:32.000Z","comments":true,"path":"2019/05/02/Linux-locate/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-locate/","excerpt":"locate 命令locate 命令用于查找符合条件的文档，他会去保存文档和目录名称的数据库内，查找合乎范本样式条件的文档或目录。 一般情况我们只需要输入 locate your_file_name 即可查找指定文件。","text":"locate 命令locate 命令用于查找符合条件的文档，他会去保存文档和目录名称的数据库内，查找合乎范本样式条件的文档或目录。 一般情况我们只需要输入 locate your_file_name 即可查找指定文件。 语法1locate [-d ][--help][--version][范本样式...] 参数 -d或–database= 配置locate指令使用的数据库。locate指令预设的数据库位于/var/lib/slocate目录里，文档名为slocate.db，您可使用 这个参数另行指定。 –help 在线帮助。 –version 显示版本信息。 实例查找passwd文件1locate passwd 说明locate与find 不同: find 是去硬盘找，locate 只在/var/lib/slocate资料库中找。 locate的速度比find快，它并不是真的查找，而是查数据库，一般文件数据库在/var/lib/slocate/slocate.db中，所以locate的查找并不是实时的，而是以数据库的更新为准，一般是系统自己维护，也可以手工升级数据库 ，命令为：1locate -u","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"locate","slug":"Linux/文件管理/locate","permalink":"http://yoursite.com/categories/Linux/文件管理/locate/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"locate","slug":"locate","permalink":"http://yoursite.com/tags/locate/"}]},{"title":"Linux-loadkeys","slug":"Linux-loadkeys","date":"2019-05-02T01:54:36.045Z","updated":"2019-03-02T06:27:52.000Z","comments":true,"path":"2019/05/02/Linux-loadkeys/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-loadkeys/","excerpt":"loadkeys 命令loadkeys 命令可以根据一个键盘定义表改变 linux 键盘驱动程序转译键盘输入过程。详细的说明请参考 dumpkeys。","text":"loadkeys 命令loadkeys 命令可以根据一个键盘定义表改变 linux 键盘驱动程序转译键盘输入过程。详细的说明请参考 dumpkeys。 语法1loadkeys [ -d --default ] [ -h --help ] [ -q --quiet ] [ -v --verbose [ -v --verbose ]...] [ -m --mktable ] [ -c --clearcompose ] [ -s --clearstrings ] [ filename... ] 参数 -v –verbose：印出详细的资料，你可以重复以增加详细度。 -q –quiet：不要显示任何讯息。 -c –clearcompose：清除所有 composite 定义。 -s –clearstrings：将定串定义表清除。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"设备管理","slug":"Linux/设备管理","permalink":"http://yoursite.com/categories/Linux/设备管理/"},{"name":"loadkeys","slug":"Linux/设备管理/loadkeys","permalink":"http://yoursite.com/categories/Linux/设备管理/loadkeys/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"设备管理","slug":"设备管理","permalink":"http://yoursite.com/tags/设备管理/"},{"name":"loadkeys","slug":"loadkeys","permalink":"http://yoursite.com/tags/loadkeys/"}]},{"title":"Linux-lndir","slug":"Linux-lndir","date":"2019-05-02T01:54:36.039Z","updated":"2019-02-13T15:02:35.000Z","comments":true,"path":"2019/05/02/Linux-lndir/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lndir/","excerpt":"lndir 命令lndir 命令用于连接目录内容。执行lndir指令，可一口气把源目录底下的文件和子目录统统建立起相互对应的符号连接。","text":"lndir 命令lndir 命令用于连接目录内容。执行lndir指令，可一口气把源目录底下的文件和子目录统统建立起相互对应的符号连接。 语法1lndir [-ignorelinks][-silent][源目录][目的目录] 参数 -ignorelinks 直接建立符号连接的符号连接。 -silent 不显示指令执行过程。 实例给目录下所有的文件或者子文件目录建立链接：1lndir /home/uptech abc","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"lndir","slug":"Linux/磁盘管理/lndir","permalink":"http://yoursite.com/categories/Linux/磁盘管理/lndir/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"lndir","slug":"lndir","permalink":"http://yoursite.com/tags/lndir/"}]},{"title":"Linux-ln","slug":"Linux-ln","date":"2019-05-02T01:54:36.032Z","updated":"2019-02-03T15:57:21.000Z","comments":true,"path":"2019/05/02/Linux-ln/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ln/","excerpt":"ln 命令ln 命令是为某一个文件在另一个位置建立一个同步的链接。当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。","text":"ln 命令ln 命令是为某一个文件在另一个位置建立一个同步的链接。当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。 语法1ln [参数][源文件或目录][目标文件或目录] 命令参数必要参数 -b 删除，覆盖以前建立的链接 -d 允许超级用户制作目录的硬链接 -f 强制执行 -i 交互模式，文件存在则提示用户是否覆盖 -n 把符号链接视为一般目录 -s 软链接(符号链接) -v 显示详细的处理过程选择参数 -S “-S&lt;字尾备份字符串&gt; “或 “–suffix=&lt;字尾备份字符串&gt;” -V “-V&lt;备份方式&gt;”或”–version-control=&lt;备份方式&gt;” –help 显示帮助信息 –version 显示版本信息 实例给文件创建软链接，为log2013.log文件创建软链接link2013,如果log2013.log丢失，link2013将失效1ln -s log2013.log link2013 给文件创建硬链接，为log2013创建硬链接ln2013，log2013.log与ln2013的各项属性相同1ln log2013.log ln2013","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"ln","slug":"Linux/文件管理/ln","permalink":"http://yoursite.com/categories/Linux/文件管理/ln/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"ln","slug":"ln","permalink":"http://yoursite.com/tags/ln/"}]},{"title":"Linux-liloconfig","slug":"Linux-liloconfig","date":"2019-05-02T01:54:36.027Z","updated":"2019-03-01T06:33:44.000Z","comments":true,"path":"2019/05/02/Linux-liloconfig/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-liloconfig/","excerpt":"liloconfig 命令liloconfig 命令用于设置核心载入，开机管理程序。","text":"liloconfig 命令liloconfig 命令用于设置核心载入，开机管理程序。liloconfig是Slackware发行版专门用来调整lilo设置的程序。它通过互动式操作界面，让用户能够利用键盘上的方向键等，轻易地操控lilo的安装，设置作业，而无须下达各种参数或撰写配置文件。 语法1liloconfig 实例执行liloconfig命令1liloconfig","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"liloconfig","slug":"Linux/系统设置/liloconfig","permalink":"http://yoursite.com/categories/Linux/系统设置/liloconfig/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"liloconfig","slug":"liloconfig","permalink":"http://yoursite.com/tags/liloconfig/"}]},{"title":"Linux-lilo","slug":"Linux-lilo","date":"2019-05-02T01:54:36.020Z","updated":"2019-03-01T06:31:33.000Z","comments":true,"path":"2019/05/02/Linux-lilo/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lilo/","excerpt":"lilo 命令lilo 命令用于安装核心载入，开机管理程序。","text":"lilo 命令lilo 命令用于安装核心载入，开机管理程序。lilo(linux loader)是个Linux系统核心载入程序，同时具备管理开机的功能。单独执行lilo指令，它会读取/etc/目录下的lilo.conf配置文件，然后根据其内容安装lilo。 语法1lilo [-clqtV][-b&lt;外围设备代号&gt;][-C&lt;配置文件&gt;][-d&lt;延迟时间&gt;][－D&lt;识别标签&gt;][-f&lt;几何参数文件&gt;][-i&lt;开机磁区文件&gt;][-I&lt;识别标签&gt;][-m&lt;映射文件&gt;][-P&lt;fix/ignore&gt;][-r&lt;根目录&gt;][-R&lt;执行指令&gt;...][-s&lt;备份文件&gt;][-S&lt;备份文件&gt;][-uU&lt;外围设备代号&gt;][-v...] 参数 -b&lt;外围设备代号&gt; 指定安装lilo之处的外围设备代号。 -c 使用紧致映射模式。 -C&lt;配置文件&gt; 指定lilo的配置文件。 -d&lt;延迟时间&gt; 设置开机延迟时间。 -D&lt;识别标签&gt; 指定开机后预设启动的操作系统，或系统核心识别标签。 -f&lt;几何参数文件&gt; 指定磁盘的几何参数配置文件。 -i&lt;开机磁区文件&gt; 指定欲使用的开机磁区文件，预设是/boot目录里的boot.b文件。 -I&lt;识别标签&gt; 显示系统核心存放之处。 -l 产生线形磁区地址。 -m&lt;映射文件&gt; 指定映射文件。 -P&lt; fix/ignore &gt; 决定要修复或忽略分区表的错误。 -q 列出映射的系统核心文件。 -r&lt;根目录&gt; 设置系统启动时欲挂入成为根目录的目录。 -R&lt;执行指令&gt; 设置下次启动系统时，首先执行的指令。 -s&lt;备份文件&gt; 指定备份文件。 -S&lt;备份文件&gt; 强制指定备份文件。 -t 不执行指令，仅列出实际执行会进行的动作。 -u&lt;外围色设备代号&gt; 删除lilo。 -U&lt;外围设备代号&gt; 此参数的效果和指定”-u”参数类似，当不检查时间戳记。 -v 显示指令执行过程。 -V 显示版本信息。 实例安装lilo到第一台SCSI硬盘的第三个主要分区，采用3级模式。1# lilo -b /dev/sda3 -v -v -v 指定安装lilo的配置文件和备份文件。1# lilo -C /etc/lilo.conf2 -s /boot/boot. Backup","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"lilo","slug":"Linux/系统设置/lilo","permalink":"http://yoursite.com/categories/Linux/系统设置/lilo/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"lilo","slug":"lilo","permalink":"http://yoursite.com/tags/lilo/"}]},{"title":"Linux-lha","slug":"Linux-lha","date":"2019-05-02T01:54:36.014Z","updated":"2019-03-02T05:54:09.000Z","comments":true,"path":"2019/05/02/Linux-lha/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lha/","excerpt":"lha 命令lha 命令用于压缩或解压缩文件。","text":"lha 命令lha 命令用于压缩或解压缩文件。lha是从lharc演变而来的压缩程序，文件经它压缩后，会另外产生具有“.lzh”扩展名的压缩文件。 语法1lha [-acdfglmnpqtuvx][-a &lt;0/1/2&gt;/u&lt;/0/1/2&gt;][-&lt;a/c/u&gt;d][-&lt;e/x&gt;i][-&lt;a/u&gt;o][-&lt;e/x&gt;w=&lt;目的目录&gt;][-&lt;a/u&gt;z][压缩文件][文件...] 或 lha [-acdfglmnpqtuvx][-a &lt;0/1/2&gt;/u&lt;/0/1/2&gt;][-&lt;a/c/u&gt;d][-&lt;e/x&gt;i][-&lt;a/u&gt;o][-&lt;e/x&gt;w=&lt;目的目录&gt;][-&lt;a/u&gt;z][压缩文件][目录...] 参数 -a或a 压缩文件，并加入到压缩文件内。 -a&lt;0/1/2&gt;/u&lt; /0/1/2 &gt; 压缩文件时，采用不同的文件头。 -c或c 压缩文件，重新建构新的压缩文件后，再将其加入。 -d或d 从压缩文件内删除指定的文件。 -&lt; a/c/u &gt;d或&lt; a/c/u &gt;d 压缩文件，然后将其加入，重新建构，更新压缩文件或，删除原始文件，也就是把文件移到压缩文件中。 -e或e 解开压缩文件。 -f或f 强制执行lha命令，在解压时会直接覆盖已有的文件而不加以询问。 -g或g 使用通用的压缩格式，便于解决兼容性的问题。 -&lt; e/x &gt;i或&lt; e/x &gt;i 解开压缩文件时，忽略保存在压缩文件内的文件路径，直接将其解压后存放在现行目录下或是指定的目录中。 l或l 列出压缩文件的相关信息。 -m或m 此参数的效果和同时指定”-ad”参数相同。 -n或n 不执行指令，仅列出实际执行会进行的动作。 -&lt; a/u &gt;o或&lt; a/u &gt;o 采用lharc兼容格式，将压缩后的文件加入，更新压缩文件。 -p或p 从压缩文件内输出到标准输出设备。 -q或q 不显示指令执行过程。 -t或t 检查备份文件内的每个文件是否正确无误。 -u或u 更换较新的文件到压缩文件内。 -u&lt; /0/1/2 &gt;或u&lt; /0/1/2 &gt; 在文件压缩时采用不同的文件头，然后更新到压缩文件内。 -v或v 详细列出压缩文件的相关信息。 -&lt; e/x &gt;w=&lt;目的目录&gt;或&lt; e/x &gt;w=&lt;目的目录&gt; 指定解压缩的目录。 -x或x 解开压缩文件。 -&lt; a/u &gt;z或&lt; a/u &gt;z 不压缩文件，直接把它加入，更新压缩文件。 实例压缩文件 1# lha -a abc.lhz a.b //压缩a.b文件，压缩后生成 abc.lhz文件 压缩目录1# lha -a abc2 /home/hnlinux 解压文件到当前目录1# lha -xiw=agis abc //解压文件abc","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"lha","slug":"Linux/备份压缩/lha","permalink":"http://yoursite.com/categories/Linux/备份压缩/lha/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"lha","slug":"lha","permalink":"http://yoursite.com/tags/lha/"}]},{"title":"Linux-let","slug":"Linux-let","date":"2019-05-02T01:54:36.008Z","updated":"2019-02-10T16:50:13.000Z","comments":true,"path":"2019/05/02/Linux-let/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-let/","excerpt":"let 命令let 命令是BASH中用于计算的工具，用于执行一个或多个表达式，变量计算中不需要加上$来表示变量。如果表达式中包含了空格或其它特殊字符，则必须引起来。","text":"let 命令let 命令是BASH中用于计算的工具，用于执行一个或多个表达式，变量计算中不需要加上$来表示变量。如果表达式中包含了空格或其它特殊字符，则必须引起来。 语法1let arg [arg ...] 参数 arg：要执行的表达式 实例自加操作：let no++自减操作：let no- -简写形式let no+=10,let no-=20,分别等同于let no=no+10,let no=no-20。以下实例计算a和b两个表达式，并输出结果：12345#!/bin/bashlet a=5+4let b=9-3 echo $a $b 以上执行结果：19 6","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"let","slug":"Linux/文档编辑/let","permalink":"http://yoursite.com/categories/Linux/文档编辑/let/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"let","slug":"let","permalink":"http://yoursite.com/tags/let/"}]},{"title":"Linux-less","slug":"Linux-less","date":"2019-05-02T01:54:36.002Z","updated":"2019-02-04T13:19:27.000Z","comments":true,"path":"2019/05/02/Linux-less/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-less/","excerpt":"less 命令less 命令与more 命令类似，less 命令可以随意浏览问文件，而more仅能向前移动，却不能向后移动，而less 在查看之前不会加载整个文件。","text":"less 命令less 命令与more 命令类似，less 命令可以随意浏览问文件，而more仅能向前移动，却不能向后移动，而less 在查看之前不会加载整个文件。 语法1less [参数] 文件 参数 -b &lt;缓冲区大小&gt; 设置缓冲区的大小 -e 当文件显示结束后，自动离开 -f 强迫打开特殊文件，例如外围设备代号、目录和二进制文件 -g 只标志最后搜索的关键词 -i 忽略搜索时的大小写 -m 显示类似more命令的百分比 -N 显示每行的行号 -o &lt;文件名&gt; 将less 输出的内容在指定文件中保存起来 -Q 不使用警告音 -s 显示连续空行为一行 -S 行过长时间将超出部分舍弃 -x &lt;数字&gt; 将”tab”键显示为规定的数字空格 /字符串：向下搜索”字符串”的功能 ?字符串：向上搜索”字符串”的功能 n：重复前一个搜索（与 / 或 ? 有关） N：反向重复前一个搜索（与 / 或 ? 有关） b 向后翻一页 d 向后翻半页 h 显示帮助界面 Q 退出less 命令 u 向前滚动半页 y 向前滚动一行 空格键 滚动一页 回车键 滚动一行 [pagedown]： 向下翻动一页 [pageup]： 向上翻动一页 实例查看文件1less log2013.log ps 查看进程信息并通过less分页显示1ps -ef |less 查看命令历史使用记录并通过less分页显示1history | less 浏览多个文件1less log2013.log log2014.log","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"less","slug":"Linux/文件管理/less","permalink":"http://yoursite.com/categories/Linux/文件管理/less/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"less","slug":"less","permalink":"http://yoursite.com/tags/less/"}]},{"title":"Linux-lastb","slug":"Linux-lastb","date":"2019-05-02T01:54:35.994Z","updated":"2019-02-26T14:08:18.000Z","comments":true,"path":"2019/05/02/Linux-lastb/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-lastb/","excerpt":"lastb 命令lastb 命令用于列出登入系统失败的用户相关信息。","text":"lastb 命令lastb 命令用于列出登入系统失败的用户相关信息。单独执行lastb信息，它会读取位于/var/log目录下，名称为btmp的文件，并把该文件内容记录的登入失败的用户名单，全部显示出来。 语法1lastb [-adRx][-f &lt;记录文件&gt;][-n &lt;显示列数&gt;][帐号名称...][终端机编号...] 参数 -a 把从何处登入系统的主机名称或IP地址显示在最后一行。 -d 将IP地址转换成主机名称。 -f&lt;记录文件&gt; 指定记录文件。 -n&lt;显示列数&gt;或-&lt;显示列数&gt; 设置列出名单的显示列数。 -R 不显示登入系统的主机名称或IP地址。 -x 显示系统关机，重新开机，以及执行等级的改变等信息。 实例显示登录失败的用户1lastb","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"lastb","slug":"Linux/系统管理/lastb","permalink":"http://yoursite.com/categories/Linux/系统管理/lastb/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"lastb","slug":"lastb","permalink":"http://yoursite.com/tags/lastb/"}]},{"title":"Linux-last","slug":"Linux-last","date":"2019-05-02T01:54:35.988Z","updated":"2019-02-26T14:01:26.000Z","comments":true,"path":"2019/05/02/Linux-last/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-last/","excerpt":"last 命令last 命令用于显示最近登录信息。使用权限：所有使用者。","text":"last 命令last 命令用于显示最近登录信息。使用权限：所有使用者。 语法1shell&gt;&gt; last [options] 参数 -R 省略 hostname 的栏位 -num 展示前 num 个 username 展示 username 的登入讯息 tty 限制登入讯息包含终端机代号 实例一般显示方法1last 简略显示，并制定显示的个数1last -n 5 -R 显示最后一列显示主机IP地址1last -n 5 -a -i","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"last","slug":"Linux/系统管理/last","permalink":"http://yoursite.com/categories/Linux/系统管理/last/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"last","slug":"last","permalink":"http://yoursite.com/tags/last/"}]},{"title":"Linux-kill","slug":"Linux-kill","date":"2019-05-02T01:54:35.981Z","updated":"2019-02-26T13:51:35.000Z","comments":true,"path":"2019/05/02/Linux-kill/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-kill/","excerpt":"kill 命令kill 命令用于删除执行中的程序或工作。","text":"kill 命令kill 命令用于删除执行中的程序或工作。kill可将指定的信息送至程序。预设的信息为SIGTERM(15)，可将指定程序终止。若仍无法终止该程序，可使用SIGKILL(9)信息尝试强制删除程序。程序或工作的编号可利用ps指令或jobs指令查看。 语法1kill [-s &lt;信息名称或编号&gt;][程序] 或 kill [-l &lt;信息编号&gt;] 参数 -l &lt;信息编号&gt; 若不加&lt;信息编号&gt;选项，则-l参数会列出全部的信息名称。 -s &lt;信息名称或编号&gt; 指定要送出的信息。 [程序] [程序]可以是程序的PID或是PGID，也可以是工作编号。 实例杀死进程1kill 1234 强制杀死进程1kill -KILL 123456 发送SIGHP信号，可以使用一下信号1kill -HUP pid 彻底杀死进程1kill -9 123456 显示信号1234567891011121314# kill -l1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR111) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM16) SIGSTKFLT 17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP21) SIGTTIN 22) SIGTTOU 23) SIGURG 24) SIGXCPU 25) SIGXFSZ26) SIGVTALRM 27) SIGPROF 28) SIGWINCH 29) SIGIO 30) SIGPWR31) SIGSYS 34) SIGRTMIN 35) SIGRTMIN+1 36) SIGRTMIN+2 37) SIGRTMIN+338) SIGRTMIN+4 39) SIGRTMIN+5 40) SIGRTMIN+6 41) SIGRTMIN+7 42) SIGRTMIN+843) SIGRTMIN+9 44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+1348) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-1253) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9 56) SIGRTMAX-8 57) SIGRTMAX-758) SIGRTMAX-6 59) SIGRTMAX-5 60) SIGRTMAX-4 61) SIGRTMAX-3 62) SIGRTMAX-263) SIGRTMAX-1 64) SIGRTMAX 杀死指定用户所有进程12#kill -9 $(ps -ef | grep hnlinux) //方法一 过滤出hnlinux用户进程 #kill -u hnlinux //方法二","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"kill","slug":"Linux/系统管理/kill","permalink":"http://yoursite.com/categories/Linux/系统管理/kill/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"kill","slug":"kill","permalink":"http://yoursite.com/tags/kill/"}]},{"title":"Linux-kbdconfig","slug":"Linux-kbdconfig","date":"2019-05-02T01:54:35.975Z","updated":"2019-03-01T06:13:44.000Z","comments":true,"path":"2019/05/02/Linux-kbdconfig/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-kbdconfig/","excerpt":"kbdconfig 命令kbdconfig 命令用于设置键盘类型。","text":"kbdconfig 命令kbdconfig 命令用于设置键盘类型。kbdconfig(Red Hat Linux才有的指令)是一个用来设置键盘的程序，提供图形化的操作界面。kbdconfig实际上是修改/etc/sysconfig/keyboard的键盘配置文件。 语法1kbdconfig [--back][--test] 参数 –back 执行时将预设的Cancel按钮更改为Back按钮。 –test 仅作测试，不会实际更改设置。 实例键盘设置1# kdbconfig //设置键盘","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"kbdconfig","slug":"Linux/系统设置/kbdconfig","permalink":"http://yoursite.com/categories/Linux/系统设置/kbdconfig/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"kbdconfig","slug":"kbdconfig","permalink":"http://yoursite.com/tags/kbdconfig/"}]},{"title":"Linux-join","slug":"Linux-join","date":"2019-05-02T01:54:35.968Z","updated":"2019-02-10T15:32:09.000Z","comments":true,"path":"2019/05/02/Linux-join/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-join/","excerpt":"join 命令join 命令用于将两个文件中，指定栏位内容相同的行连接起来。找出两个文件中，指定栏位内容相同的行，并加以合并，在输出到标准输出设备。","text":"join 命令join 命令用于将两个文件中，指定栏位内容相同的行连接起来。找出两个文件中，指定栏位内容相同的行，并加以合并，在输出到标准输出设备。 语法1join [-i][-a&lt;1或2&gt;][-e&lt;字符串&gt;][-o&lt;格式&gt;][-t&lt;字符&gt;][-v&lt;1或2&gt;][-1&lt;栏位&gt;][-2&lt;栏位&gt;][--help][--version][文件1][文件2] 参数 -a&lt;1或2&gt; 除了显示原来的输出内容之外，还显示指令文件中没有相同栏位的行。 -e&lt;字符串&gt; 若[文件1]与[文件2]中找不到指定的栏位，则在输出中填入选项中的字符串。 -i或–igore-case 比较栏位内容时，忽略大小写的差异。 -o&lt;格式&gt; 按照指定的格式来显示结果。 -t&lt;字符&gt; 使用栏位的分隔字符。 -v&lt;1或2&gt; 跟-a相同，但是只显示文件中没有相同栏位的行。 -1&lt;栏位&gt; 连接[文件1]指定的栏位。 -2&lt;栏位&gt; 连接[文件2]指定的栏位。 –help 显示帮助。 –version 显示版本信息。 实例连接两个文件。为了清楚地了解join命令，首先通过cat命令显示文件testfile_1和testfile_2的内容。然后以默认的方式比较两个文件，将两个文件中指定字段的内容相同的行连接起来，在终端输入命令：1join testfile_1 testfile_2 首先查看testfile1、testfile2中的文件内容：12345678$ cat testfile_1 #testfile_1文件中的内容 Hello 95 #例如，本例中第一列为姓名，第二列为数额 Linux 85 test 30 cmd@hdd-desktop:~$ cat testfile_2 #testfile_2文件中的内容 Hello 2005 #例如，本例中第一列为姓名，第二列为年份 Linux 2009 test 2006 然后使用join命令，将两个文件连接，结果如下：1234$ join testfile_1 testfile_2 #连接testfile_1、testfile_2中的内容 Hello 95 2005 #连接后显示的内容 Linux 85 2009 test 30 2006 文件1与文件2的位置对输出到标准输出的结果是有影响的。例如将命令中的两个文件互换，输入以下命令：1join testfile_2 testfile_1 最终在标准输出的输出结果将发生变化，如下所示：1234$ join testfile_2 testfile_1 #改变文件顺序连接两个文件 Hello 2005 95 #连接后显示的内容 Linux 2009 85 test 2006 30","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"join","slug":"Linux/文档编辑/join","permalink":"http://yoursite.com/categories/Linux/文档编辑/join/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"join","slug":"join","permalink":"http://yoursite.com/tags/join/"}]},{"title":"Linux-joe","slug":"Linux-joe","date":"2019-05-02T01:54:35.962Z","updated":"2019-02-10T15:23:37.000Z","comments":true,"path":"2019/05/02/Linux-joe/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-joe/","excerpt":"joe 命令joe 命令用于编辑文本文件。joe是一个功能强大的全屏幕文本编辑程序。操作的复杂度要比pico高一点，但是功能较为齐全。joe一次可开启多个文件，每个文件各放在一个编辑区内，并可在文件之间执行剪切的动作。","text":"joe 命令joe 命令用于编辑文本文件。joe是一个功能强大的全屏幕文本编辑程序。操作的复杂度要比pico高一点，但是功能较为齐全。joe一次可开启多个文件，每个文件各放在一个编辑区内，并可在文件之间执行剪切的动作。 语法1joe [-asis][-beep][-csmode][-dopadding][-exask][-force][-help][-keepup][-lightoff][-arking][-mid][-nobackups][-nonotice][-nosta][-noxon][-orphan][-backpath&lt;目录&gt;][-columns&lt;栏位&gt;][-lines&lt;行数&gt;][-pg&lt;行数&gt;][-skiptop&lt;行数&gt;][-autoindent crlf linums overwrite rdonly wordwrap][+&lt;行数&gt;][-indentc&lt;缩排字符&gt;][-istep&lt;缩排字符数&gt;][-keymap&lt;按键配置文件&gt;][-lmargin&lt;栏数&gt;][-rmargin&lt;栏数&gt;][-tab&lt;栏数&gt;][要编辑的文件]&lt;/p&gt; 参数以下为程序参数 -asis 字符码超过127的字符不做任何处理。 -backpath&lt;目录&gt; 指定备份文件的目录。 -beep 编辑时，若有错误即发出哗声。 -columns&lt;栏位&gt; 设置栏数。 -csmode 可执行连续查找模式。 -dopadding 是程序跟tty间存在缓冲区。 -exask 在程序中，执行”Ctrl+k+x”时，会先确认是否要保存文件。 -force 强制在最后一行的结尾处加上换行符号。 -help 执行程序时一并显示帮助。 -keepup 在进入程序后，画面上方为状态列。 -lightoff 选取的区块在执行完区块命令后，就会回复成原来的状态。 -lines&lt;行数&gt; 设置行数。 -marking 在选取区块时，反白区块会随着光标移动。 -mid 当光标移出画面时，即自动卷页，使光标回到中央。 -nobackups 不建立备份文件。 -nonotice 程序执行时，不显示版权信息。 -nosta 程序执行时，不显示状态列。 -noxon 尝试取消”Ctrl+s”与”Ctrl+q”键的功能。 -orphan 若同时开启一个以上的文件，则其他文件会置于独立的缓冲区，而不会另外开启编辑区。 -pg&lt;行数&gt; 按”PageUp”或”PageDown”换页时，所要保留前一页的行数。 -skiptop&lt;行数&gt; 不使用屏幕上方指定的行数。 以下为文件参数 +&lt;行数&gt; 指定开启文件时，光标所在的行数。 -autoindent 自动缩排。 -crlf 在换行时，使用CR-LF字符。 -indentc&lt;缩排字符&gt; 执行缩排时，实际插入的字符。 -istep&lt;缩排字符数&gt; 每次执行缩排时，所移动的缩排字符数。 -keymap&lt;按键配置文件&gt; 使用不同的按键配置文件。 -linums 在每行前面加上行号。 -lmargin&lt;栏数&gt; 设置左侧边界。 -overwrite 设置覆盖模式。 -rmargin&lt;栏数&gt; 设置右侧边界。 -tab&lt;栏数&gt; 设置tab的宽度。 -rdonly 以只读的方式开启文件-wordwrap编辑时若超过右侧边界，则自动换行。 实例利用joe命令编辑文本文件。例如利用joe编辑C语言源代码main.c，使用如下命令：1joe main.c 与jed类似，joe编辑器中C语言的语法也以彩色的方式显示。效果如下：1234567891011121314151617181920I A main.c (c) Row 1 Col 1 12:28 Ctrl-K H for help #上排从左至右分别为打开的文件名、光标所在行列数、现在时间、显示操作说明 /*-*- linux-c-*-*/ #编辑区 #include &lt;linux/mm.h&gt; #include &lt;linux/sysctl.h&gt; #include &lt;linux/nsproxy.h&gt; static struct list_head * net_ctl_header_lookup(struct ctl_table_root *root, struct nsproxy *namespaces) &#123; return &amp;namespaces-&gt;net_ns-&gt;sysctl_table_headers; &#125; static struct ctl_table_root net_sysctl_root = &#123; .lookup = net_ctl_header_lookup, &#125;; static int sysctl_net_init(struct net *net) &#123; INIT_LIST_HEAD(&amp;net-&gt;sysctl_table_headers); return 0; &#125; ** Joe&apos;s Own Editor v3.5 ** (utf-8) ** Copyright . 2006 ** #joe编辑区的版本及版权信息 joe编辑器有一些常用的组合键，例如可以通过Ctrl+K+H 寻求联机帮助，首先按Ctrl+K组合键，再输入字母H，即可调出帮助菜单，通过该帮助信息可以方便地获知如何对joe 编辑器进行操作。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"joe","slug":"Linux/文档编辑/joe","permalink":"http://yoursite.com/categories/Linux/文档编辑/joe/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"joe","slug":"joe","permalink":"http://yoursite.com/tags/joe/"}]},{"title":"Linux-jed","slug":"Linux-jed","date":"2019-05-02T01:54:35.955Z","updated":"2019-02-10T15:15:41.000Z","comments":true,"path":"2019/05/02/Linux-jed/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-jed/","excerpt":"jed 命令jed 命令用于编辑文本文件。jed是以Slang所写成的程序，适合用来编辑程序原始代码。","text":"jed 命令jed 命令用于编辑文本文件。jed是以Slang所写成的程序，适合用来编辑程序原始代码。 语法1jed [-2n][-batch][-f&lt;函数&gt;][-g&lt;行数&gt;][-i&lt;文件&gt;][-I&lt;文件&gt;][-s&lt;字符串&gt;][文件] 参数 -2 显示上下两个编辑区。 -batch 以批处理模式来执行。 -f&lt;函数&gt; 执行Slang函数。 -g&lt;行数&gt; 移到缓冲区中指定的行数。 -i&lt;文件&gt; 将指定的文件载入缓冲区。 -n 不要载入jed.rc配置文件。 -s&lt;字符串&gt; 查找并移到指定的字符串。 实例jed主要用于编辑程序的源码，编辑源码时将以彩色高亮的方式显示程序的语法。例如使用jed编辑一个C语言的源代码文件，可使用如下命令：1jed main.c 输入结果如下：123456789101112131415161718192021F10 key ==&gt; File Edit Mode Search Buffers Windows System Help #编辑器菜单 /*-*- linux-c-*-*/ #编辑区 #include &lt;linux/mm.h&gt; #include &lt;linux/sysctl.h&gt; #include &lt;linux/nsproxy.h&gt; static struct list_head * net_ctl_header_lookup(struct ctl_table_root *root, struct nsproxy *namespaces) &#123; return &amp;namespaces-&gt;net_ns-&gt;sysctl_table_headers; &#125; static struct ctl_table_root net_sysctl_root = &#123; .lookup = net_ctl_header_lookup, &#125;; static int sysctl_net_init(struct net *net) &#123; INIT_LIST_HEAD(&amp;net-&gt;sysctl_table_headers); return 0; &#125; -----+(Jed 0.99.18U) Emacs: main.c (C) All 6:06pm----------------------------- #从左到右分别为jed版本编号、当前是模拟emacs编辑器、打开的文件名、现在的时间 loading /usr/share/jed/lib/modeinfo.slc","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"jed","slug":"Linux/文档编辑/jed","permalink":"http://yoursite.com/categories/Linux/文档编辑/jed/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"jed","slug":"jed","permalink":"http://yoursite.com/tags/jed/"}]},{"title":"Linux-ispell","slug":"Linux-ispell","date":"2019-05-02T01:54:35.948Z","updated":"2019-02-10T15:06:16.000Z","comments":true,"path":"2019/05/02/Linux-ispell/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ispell/","excerpt":"ispell 命令ispell 命令用于拼写检查程序。ispell预设会使用/usr/lib/ispell/english.hash字典文件来检查文本文件。若存在检查的文件中找到字典中没有的词汇，ispell会建议使用的词汇，或是让你将新的词汇加入个人字典。","text":"ispell 命令ispell 命令用于拼写检查程序。ispell预设会使用/usr/lib/ispell/english.hash字典文件来检查文本文件。若存在检查的文件中找到字典中没有的词汇，ispell会建议使用的词汇，或是让你将新的词汇加入个人字典。 语法1ispell [-aAbBClmMnNPStVx][-d&lt;字典文件&gt;][-L&lt;行数&gt;][-p&lt;字典文件&gt;][-w&lt;非字母字符&gt;][-W&lt;字符串长度&gt;][要检查的文件] 参数 -a 当其他程序输出送到ispell时，必须使用此参数。 -A 读取到”&amp;Include File&amp;”字符串时，就去检查字符串后所指定文件的内容。 -b 产生备份文件，文件名为.bak。 -B 检查连字错误。 -C 不检查连字错误。 -d&lt;字典文件&gt; 指定字典文件。 -l 从标准输入设备读取字符串，结束后显示拼错的词汇。 -L&lt;行数&gt; 指定内文显示的行数。 -m 自动考虑字尾的变化。 -M 进入ispell后，在画面下方显示指令的按键。 -n 检查的文件为noff或troff的格式。 -N 进入ispell后，在画面下方不显示指令的按键。 -p&lt;字典文件&gt; 指定个人字典文件。 -P 不考虑字尾变化的情形。 -S 不排序建议取代的词汇。 -t 检查的文件为TeX或LaTeX的格式。 -V 非ANSI标准的字符会以”M-^”的方式来显示。 -w&lt;非字母字符&gt; 检查时，特别挑出含有指定的字符。 -W&lt;字符串长度&gt; 不检查指定长度的词汇。 -x 不要产生备份文件。 实例检查文件的拼写。例如，检查testfile文件，可使用如下命令：1ispell testfile 如果文件中出现可疑词汇，则第一个出现的可疑词汇以高亮显示，并在屏幕下方给出词汇的修改意见，以及ispell的操作命令。12345netwrks File: testfile Linux netwrks are becoming more and more common, but security is often an overlooked issue. Unfortunately 0: networks [SP] &lt;number&gt; R)epl A)ccept I)nsert L)ookup U)ncap Q)uit e(X)it or ? for help 本例中，检查出netwrks错误，并提示纠正信息，此时输入networks来纠正错误，同时继续显示显示下一个错误，直到所有的错误显示完毕。通过以上实例我们可以发现，文件testfile中有拼写错误，对该文件进行修改后需要本份文件。此时使用如下命令：1ispell -b testfile #检查拼写错误的同时，备份文件 如果文件已经无拼写错误，则不显示任何信息，通过ls命令我们也可以查看到当前文件目录下产生了文件testfile的备份文件testfile.bak。查看结果如下所示：123$ ls #以列表的形式查看当前目录下的文件 examples.desktop testfile_1 testfile.bak xx01 模板图片 音乐 testfile testfile1 testfile_2 xx00 公共的视频文档桌面 其中，testfile.bak文件就是刚才命令生成的备份文件，内容与原来的testfile文件内容是一样的。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"ispell","slug":"Linux/文档编辑/ispell","permalink":"http://yoursite.com/categories/Linux/文档编辑/ispell/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"ispell","slug":"ispell","permalink":"http://yoursite.com/tags/ispell/"}]},{"title":"Linux-insmod","slug":"Linux-insmod","date":"2019-05-02T01:54:35.941Z","updated":"2019-03-01T06:11:51.000Z","comments":true,"path":"2019/05/02/Linux-insmod/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-insmod/","excerpt":"insmod 命令insmod 命令用于载入模块。","text":"insmod 命令insmod 命令用于载入模块。Linux有许多功能是通过模块的方式，在需要时才载入kernel。如此可使kernel较为精简，进而提高效率，以及保有较大的弹性。这类可载入的模块，通常是设备驱动程序。 语法1insmod [-fkmpsvxX][-o &lt;模块名称&gt;][模块文件][符号名称 = 符号值] 参数 -f 不检查目前kernel版本与模块编译时的kernel版本是否一致，强制将模块载入。 -k 将模块设置为自动卸除。 -m 输出模块的载入信息。 -o&lt;模块名称&gt; 指定模块的名称，可使用模块文件的文件名。 -p 测试模块是否能正确地载入kernel。 -s 将所有信息记录在系统记录文件中。 -v 执行时显示详细的信息。 -x 不要汇出模块的外部符号。 -X 汇出模块所有的外部符号，此为预设置。 实例加载模块123# insmod led.o //向内核加载模块","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"insmod","slug":"Linux/系统设置/insmod","permalink":"http://yoursite.com/categories/Linux/系统设置/insmod/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"insmod","slug":"insmod","permalink":"http://yoursite.com/tags/insmod/"}]},{"title":"Linux-indent","slug":"Linux-indent","date":"2019-05-02T01:54:35.934Z","updated":"2019-02-03T15:22:30.000Z","comments":true,"path":"2019/05/02/Linux-indent/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-indent/","excerpt":"indent 命令indent 命令用于调整原始代码的格式。indent可辨识C的原始代码，并加以格式化，以方便程序设计师阅读。","text":"indent 命令indent 命令用于调整原始代码的格式。indent可辨识C的原始代码，并加以格式化，以方便程序设计师阅读。 语法1indent [参数][源文件] 或 indent [参数][源文件][-o 目标文件] 参数 -bad或–blank-lines-after-declarations 在声明区段或加上空白行。 -bap或–blank-lines-after-procedures 在程序或加上空白行。 -bbb或–blank-lines-after-block-comments 在注释区段后加上空白行。 -bc或–blank-lines-after-commas 在声明区段中，若出现逗号即换行。 -bl或–braces-after-if-line if(或是else,for等等)与后面执行区段的”{“不同行，且”}”自成一行。 -bli&lt;缩排格数&gt;或–brace-indent&lt;缩排格数&gt; 设置{ }缩排的格数。 -br或–braces-on-if-line if(或是else,for等等)与后面执行跛段的”{“不同行，且”}”自成一行。 -bs或–blank-before-sizeof 在sizeof之后空一格。 -c&lt;栏数&gt;或–comment-indentation&lt;栏数&gt; 将注释置于程序码右侧指定的栏位。 -cd&lt;栏数&gt;或–declaration-comment-column&lt;栏数&gt; 将注释置于声明右侧指定的栏位。 -cdb或–comment-delimiters-on-blank-lines 注释符号自成一行。 -ce或–cuddle-else 将else置于”}”(if执行区段的结尾)之后。 -ci&lt;缩排格数&gt;或–continuation-indentation&lt;缩排格数&gt; 叙述过长而换行时，指定换行后缩排的格数。 -cli&lt;缩排格数&gt;或–case-indentation-&lt;缩排格数&gt; 使用case时，switch缩排的格数。 -cp&lt;栏数&gt;或-else-endif-column&lt;栏数&gt; 将注释置于else与elseif叙述右侧定的栏位。 -cs或–space-after-cast 在cast之后空一格。 -d&lt;缩排格数&gt;或-line-comments-indentation&lt;缩排格数&gt; 针对不是放在程序码右侧的注释，设置其缩排格数。 -di&lt;栏数&gt;或–declaration-indentation&lt;栏数&gt; 将声明区段的变量置于指定的栏位。 -fc1或–format-first-column-comments 针对放在每行最前端的注释，设置其格式。 -fca或–format-all-comments 设置所有注释的格式。 -gnu或–gnu-style 指定使用GNU的格式，此为预设值。 -i&lt;格数&gt;或–indent-level&lt;格数&gt; 设置缩排的格数。 -ip&lt;格数&gt;或–parameter-indentation&lt;格数&gt; 设置参数的缩排格数。 -kr或–k-and-r-style 指定使用Kernighan&amp;Ritchie的格式。 -lp或–continue-at-parentheses 叙述过长而换行，且叙述中包含了括弧时，将括弧中的每行起始栏位内容垂直对其排列。 -nbad或–no-blank-lines-after-declarations 在声明区段后不要加上空白行。 -nbap或–no-blank-lines-after-procedures 在程序后不要加上空白行。 -nbbb或–no-blank-lines-after-block-comments 在注释区段后不要加上空白行。 -nbc或–no-blank-lines-after-commas 在声明区段中，即使出现逗号，仍旧不要换行。 -ncdb或–no-comment-delimiters-on-blank-lines 注释符号不要自成一行。 -nce或–dont-cuddle-else 不要将else置于”}”之后。 -ncs或–no-space-after-casts 不要在cast之后空一格。 -nfc1或–dont-format-first-column-comments 不要格式化放在每行最前端的注释。 -nfca或–dont-format-comments 不要格式化任何的注释。 -nip或–no-parameter-indentation 参数不要缩排。 -nlp或–dont-line-up-parentheses 叙述过长而换行，且叙述中包含了括弧时，不用将括弧中的每行起始栏位垂直对其排列。 -npcs或–no-space-after-function-call-names 在调用的函数名称之后，不要加上空格。 -npro或–ignore-profile 不要读取indent的配置文件.indent.pro。 -npsl或–dont-break-procedure-type 程序类型与程序名称放在同一行。 -nsc或–dont-star-comments 注解左侧不要加上星号(*)。 -nsob或–leave-optional-semicolon 不用处理多余的空白行。 -nss或–dont-space-special-semicolon 若for或while区段仅有一行时，在分号前不加上空格。 -nv或–no-verbosity 不显示详细的信息。 -orig或–original 使用Berkeley的格式。 -pcs或–space-after-procedure-calls 在调用的函数名称与”{“之间加上空格。 -psl或–procnames-start-lines 程序类型置于程序名称的前一行。 -sc或–start-left-side-of-comments 在每行注释左侧加上星号(*)。 -sob或–swallow-optional-blank-lines 删除多余的空白行。 -ss或–space-special-semicolon 若for或swile区段今有一行时，在分号前加上空格。 -st或–standard-output 将结果显示在标准输出设备。 -T 数据类型名称缩排。 -ts&lt;格数&gt;或–tab-size&lt;格数&gt; 设置tab的长度。 -v或–verbose 执行时显示详细的信息。 -version 显示版本信息。 代码格式说明 使用的indent参数 值 含义 –blank-lines-after-declarations bad 变量声明后加空行 –blank-lines-after-procedures bap 函数结束后加空行 –blank-lines-before-block-comments bbb 块注释前加空行 –break-before-boolean-operator bbo 较长的行，在逻辑运算符前分行 –blank-lines-after-commas nbc 变量声明中，逗号分隔的变量不分行 –braces-after-if-line bl “if”和”{“分做两行 –brace-indent 0 bli0 “{“不继续缩进 –braces-after-struct-decl-line bls 定义结构，”struct”和”{“分行 –comment-indentationn c33 语句后注释开始于行33 –declaration-comment-columnn cd33 变量声明后注释开始于行33 –comment-delimiters-on-blank-lines ncdb 不将单行注释变为块注释 –cuddle-do-while ncdw “do — while”的”while”和其前面的”}”另起一行 –cuddle-else nce “else”和其前面的”}”另起一行 –case-indentation 0 cli0 switch中的case语句所进0个空格 –else-endif-columnn cp33 #else, #endif后面的注释开始于行33 –space-after-cast cs 在类型转换后面加空格 –line-comments-indentation n d0 单行注释（不从1列开始的），不向左缩进 –break-function-decl-args nbfda 关闭：函数的参数一个一行 –declaration-indentationn di2 变量声明，变量开始于2行，即不必对齐 –format-first-column-comments nfc1 不格式化起于第一行的注释 –format-all-comments nfca 不开启全部格式化注释的开关 –honour-newlines hnl Prefer to break long lines at the position of newlines in the input. –indent-leveln i4 设置缩进多少字符，如果为tab的整数倍，用tab来缩进，否则用空格填充。 –parameter-indentationn ip5 旧风格的函数定义中参数说明缩进5个空格 –line-length 75 l75 非注释行最长75 –continue-at-parentheses lp 续行从上一行出现的括号开始 –space-after-procedure-calls pcs 函数和”(“之间插入一个空格 –space-after-parentheses nprs 在”（”后”）”前不插入空格 –procnames-start-lines psl 将函数名和返回类型放在两行定义 –space-after-for saf for后面有空格 –space-after-if sai if后面有空格 –space-after-while saw while后面有空格 –start-left-side-of-comments nsc 不在生成的块注释中加* –swallow-optional-blank-lines nsob 不去掉可添加的空行 –space-special-semicolon nss 一行的for或while语句，在”;”前不加空。 –tab-size ts4 一个tab为4个空格（要能整除”-in”） –use-tabs ut 使用tab来缩进","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"indent","slug":"Linux/文件管理/indent","permalink":"http://yoursite.com/categories/Linux/文件管理/indent/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"indent","slug":"indent","permalink":"http://yoursite.com/tags/indent/"}]},{"title":"Linux-ifconfig","slug":"Linux-ifconfig","date":"2019-05-02T01:54:35.926Z","updated":"2019-02-20T06:31:49.000Z","comments":true,"path":"2019/05/02/Linux-ifconfig/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ifconfig/","excerpt":"ifconfig 命令ifconfig 命令用于显示或设置网络设备。ifconfig可设置网络设备的状态，或是显示目前的设置。","text":"ifconfig 命令ifconfig 命令用于显示或设置网络设备。ifconfig可设置网络设备的状态，或是显示目前的设置。 语法1ifconfig [网络设备][down up -allmulti -arp -promisc][add&lt;地址&gt;][del&lt;地址&gt;][&lt;hw&lt;网络设备类型&gt;&lt;硬件地址&gt;][io_addr&lt;I/O地址&gt;][irq&lt;IRQ地址&gt;][media&lt;网络媒介类型&gt;][mem_start&lt;内存地址&gt;][metric&lt;数目&gt;][mtu&lt;字节&gt;][netmask&lt;子网掩码&gt;][tunnel&lt;地址&gt;][-broadcast&lt;地址&gt;][-pointopoint&lt;地址&gt;][IP地址] 参数 add&lt;地址&gt; 设置网络设备IPv6的IP地址。 del&lt;地址&gt; 删除网络设备IPv6的IP地址。 down 关闭指定的网络设备。 &lt; hw&lt; 网络设备类型 &gt;&lt;硬件地址&gt; 设置网络设备的类型与硬件地址。 io_addr&lt;I/O地址&gt; 设置网络设备的I/O地址。 irq&lt;IRQ地址&gt; 设置网络设备的IRQ。 media&lt;网络媒介类型&gt; 设置网络设备的媒介类型。 mem_start&lt;内存地址&gt; 设置网络设备在主内存所占用的起始地址。 metric&lt;数目&gt; 指定在计算数据包的转送次数时，所要加上的数目。 mtu&lt;字节&gt; 设置网络设备的MTU。 netmask&lt;子网掩码&gt; 设置网络设备的子网掩码。 tunnel&lt;地址&gt; 建立IPv4与IPv6之间的隧道通信地址。 up 启动指定的网络设备。 -broadcast&lt;地址&gt; 将要送往指定地址的数据包当成广播数据包来处理。 -pointopoint&lt;地址&gt; 与指定地址的网络设备建立直接连线，此模式具有保密功能。 -promisc 关闭或启动指定网络设备的promiscuous模式。 [IP地址] 指定网络设备的IP地址。 [网络设备] 指定网络设备的名称。 实例显示网络设备信息12345678910111213141516171819# ifconfig eth0 Link encap:Ethernet HWaddr 00:50:56:0A:0B:0C inet addr:192.168.0.3 Bcast:192.168.0.255 Mask:255.255.255.0 inet6 addr: fe80::250:56ff:fe0a:b0c/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:172220 errors:0 dropped:0 overruns:0 frame:0 TX packets:132379 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:87101880 (83.0 MiB) TX bytes:41576123 (39.6 MiB) Interrupt:185 Base address:0x2024 lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 inet6 addr: ::1/128 Scope:Host UP LOOPBACK RUNNING MTU:16436 Metric:1 RX packets:2022 errors:0 dropped:0 overruns:0 frame:0 TX packets:2022 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:0 RX bytes:2459063 (2.3 MiB) TX bytes:2459063 (2.3 MiB) 启动关闭指定网卡12# ifconfig eth0 down# ifconfig eth0 up 为网卡配置和删除IPv6地址123# ifconfig eth0 add 33ffe:3240:800:1005::2/ 64 //为网卡诶之IPv6地址# ifconfig eth0 del 33ffe:3240:800:1005::2/ 64 //为网卡删除IPv6地址 用ifconfig修改MAC地址12345# ifconfig eth0 down //关闭网卡# ifconfig eth0 hw ether 00:AA:BB:CC:DD:EE //修改MAC地址# ifconfig eth0 up //启动网卡# ifconfig eth1 hw ether 00:1D:1C:1D:1E //关闭网卡并修改MAC地址 # ifconfig eth1 up //启动网卡 配置IP地址123456# ifconfig eth0 192.168.1.56 //给eth0网卡配置IP地址# ifconfig eth0 192.168.1.56 netmask 255.255.255.0 // 给eth0网卡配置IP地址,并加上子掩码# ifconfig eth0 192.168.1.56 netmask 255.255.255.0 broadcast 192.168.1.255// 给eth0网卡配置IP地址,加上子掩码,加上个广播地址 启用和关闭ARP协议12# ifconfig eth0 arp //开启# ifconfig eth0 -arp //关闭 设置最大传输单元12# ifconfig eth0 mtu 1500 //设置能通过的最大数据包大小为 1500 bytes","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"ifconfig","slug":"Linux/网络通讯/ifconfig","permalink":"http://yoursite.com/categories/Linux/网络通讯/ifconfig/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"ifconfig","slug":"ifconfig","permalink":"http://yoursite.com/tags/ifconfig/"}]},{"title":"Linux-id","slug":"Linux-id","date":"2019-05-02T01:54:35.917Z","updated":"2019-02-27T12:15:21.000Z","comments":true,"path":"2019/05/02/Linux-id/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-id/","excerpt":"id 命令id 命令用于显示用户的id,以及所属群组的id。","text":"id 命令id 命令用于显示用户的id,以及所属群组的id。id会显示用户以及所属群组的实际与有效id。若两个id相同，则仅显示实际id。若仅指定用户名称，则显示目前用户的id。 语法1id [-gGnru][--help][--version][用户名称] 参数 -g或–group 显示用户所属群组的ID。 -G或–groups 显示用户所属附加群组的ID。 -n或–name 显示用户，所属群组或附加群组的名称。 -r或–real 显示实际ID。 -u或–user 显示用户ID。 -help 显示帮助。 -version 显示版本信息。 实例显示当前用户信息1id 显示用户群组的ID1id -g 显示所有群组的id1id -g 显示指定用户信息1id username","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"id","slug":"Linux/系统管理/id","permalink":"http://yoursite.com/categories/Linux/系统管理/id/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"id","slug":"id","permalink":"http://yoursite.com/tags/id/"}]},{"title":"Linux-hwclock","slug":"Linux-hwclock","date":"2019-05-02T01:54:35.911Z","updated":"2019-03-01T12:36:42.000Z","comments":true,"path":"2019/05/02/Linux-hwclock/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-hwclock/","excerpt":"hwclock 命令hwclock 命令用于显示与设定硬件时钟。","text":"hwclock 命令hwclock 命令用于显示与设定硬件时钟。在Linux中有硬件时钟与系统时钟等两种时钟。硬件时钟是指主机板上的时钟设备，也就是通常可在BIOS画面设定的时钟。系统时钟则是指kernel中的时钟。当Linux启动时，系统时钟会去读取硬件时钟的设定，之后系统时钟即独立运作。所有Linux相关指令与函数都是读取系统时钟的设定。 语法12hwclock [--adjust][--debug][--directisa][--hctosys][--show][--systohc][--test][--utc][--version][--set --date=&lt;日期与时间&gt;] 参数 –adjust hwclock每次更改硬件时钟时，都会记录在/etc/adjtime文件中。使用–adjust参数，可使hwclock根据先前的记录来估算硬件时钟的偏差，并用来校正目前的硬件时钟。 –debug 显示hwclock执行时详细的信息。 –directisa hwclock预设从/dev/rtc设备来存取硬件时钟。若无法存取时，可用此参数直接以I/O指令来存取硬件时钟。 –hctosys 将系统时钟调整为与目前的硬件时钟一致。 –set –date=&lt;日期与时间&gt; 设定硬件时钟。 –show 显示硬件时钟的时间与日期。 –systohc 将硬件时钟调整为与目前的系统时钟一致。 –test 仅测试程序，而不会实际更改硬件时钟。 –utc 若要使用格林威治时间，请加入此参数，hwclock会执行转换的工作。 –version 显示版本信息。 实例显示当前时间1hwclock 查看版本信息1hwclock -v","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"hwclock","slug":"Linux/系统设置/hwclock","permalink":"http://yoursite.com/categories/Linux/系统设置/hwclock/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"hwclock","slug":"hwclock","permalink":"http://yoursite.com/tags/hwclock/"}]},{"title":"Linux-httpd","slug":"Linux-httpd","date":"2019-05-02T01:54:35.906Z","updated":"2019-02-20T06:27:34.000Z","comments":true,"path":"2019/05/02/Linux-httpd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-httpd/","excerpt":"httpd 命令httpd 命令是Apache HTTP服务器程序。httpd为Apache HTTP服务器程序。直接执行程序可启动服务器的服务。","text":"httpd 命令httpd 命令是Apache HTTP服务器程序。httpd为Apache HTTP服务器程序。直接执行程序可启动服务器的服务。 语法1httpd [-hlLStvVX][-c&lt;httpd指令&gt;][-C&lt;httpd指令&gt;][-d&lt;服务器根目录&gt;][-D&lt;设定文件参数&gt;][-f&lt;设定文件&gt;] 参数 -c&lt; httpd指令 &gt; 在读取配置文件前，先执行选项中的指令。 -C&lt; httpd指令 &gt; 在读取配置文件后，再执行选项中的指令。 -d&lt;服务器根目录&gt; 指定服务器的根目录。 -D&lt;设定文件参数&gt; 指定要传入配置文件的参数。 -f&lt;设定文件&gt; 指定配置文件。 -h 显示帮助。 -l 显示服务器编译时所包含的模块。 -L 显示httpd指令的说明。 -S 显示配置文件中的设定。 -t 测试配置文件的语法是否正确。 -v 显示版本信息。 -V 显示版本信息以及建立环境。 -X 以单一程序的方式来启动服务器。 实例检查配置文件语法错误123# httpd -thttpd: Could not determine the server&apos;s fully qualified domain name, using 127.0.0.1 for ServerNameSyntax OK 启动httpd12httpdhttpd: Could not determine the server&apos;s fully qualified domain name, using 127.0.0.1 for ServerName 显示编译模块123456# httpd -l Compiled in modules: core.c prefork.c http_core.c mod_so.c 显示配置文件123456789101112131415161718192021# httpd -L&gt;1.log|tail -n 20 1.logMaximum number of children alive at the same timeAllowed in *.conf only outside , or ServerLimit (prefork.c)Maximum value of MaxClients for this run of ApacheAllowed in *.conf only outside , or KeepAliveTimeout (http_core.c)Keep-Alive timeout duration (sec)Allowed in *.conf only outside , or MaxKeepAliveRequests (http_core.c)Maximum number of Keep-Alive requests per connection, or 0 for infiniteAllowed in *.conf only outside , or KeepAlive (http_core.c)Whether persistent connections should be On or OffAllowed in *.conf only outside , or LoadModule (mod_so.c)a module name and the name of a shared object file to load it fromAllowed in *.conf only outside , or LoadFile (mod_so.c)shared object file or library to load into the server at runtimeAllowed in *.conf only outside , or","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"httpd","slug":"Linux/网络通讯/httpd","permalink":"http://yoursite.com/categories/Linux/网络通讯/httpd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"httpd","slug":"httpd","permalink":"http://yoursite.com/tags/httpd/"}]},{"title":"Linux-hdparm","slug":"Linux-hdparm","date":"2019-05-02T01:54:35.898Z","updated":"2019-02-19T12:28:39.000Z","comments":true,"path":"2019/05/02/Linux-hdparm/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-hdparm/","excerpt":"hdparm 命令hdparm 命令用于显示与设定硬盘的参数。hdparm可检测、显示与设定IDE或SCSI硬盘的参数。","text":"hdparm 命令hdparm 命令用于显示与设定硬盘的参数。hdparm可检测、显示与设定IDE或SCSI硬盘的参数。 语法1hdparm [-CfghiIqtTvyYZ][-a &lt;快取分区&gt;][-A &lt;0或1&gt;][-c &lt;I/O模式&gt;][-d &lt;0或1&gt;][-k &lt;0或1&gt;][-K &lt;0或1&gt;][-m &lt;分区数&gt;][-n &lt;0或1&gt;][-p &lt;PIO模式&gt;][-P &lt;分区数&gt;][-r &lt;0或1&gt;][-S &lt;时间&gt;][-u &lt;0或1&gt;][-W &lt;0或1&gt;][-X &lt;传输模式&gt;][设备] 参数 -a&lt;快取分区&gt; 设定读取文件时，预先存入块区的分区数，若不加上&lt;快取分区&gt;选项，则显示目前的设定。 -A&lt;0或1&gt; 启动或关闭读取文件时的快取功能。 -c&lt;I/O模式&gt; 设定IDE32位I/O模式。 -C 检测IDE硬盘的电源管理模式。 -d&lt;0或1&gt; 设定磁盘的DMA模式。 -f 将内存缓冲区的数据写入硬盘，并清楚缓冲区。 -g 显示硬盘的磁轨，磁头，磁区等参数。 -h 显示帮助。 -i 显示硬盘的硬件规格信息，这些信息是在开机时由硬盘本身所提供。 -I 直接读取硬盘所提供的硬件规格信息。 -k&lt;0或1&gt; 重设硬盘时，保留-dmu参数的设定。 -K&lt;0或1&gt; 重设硬盘时，保留-APSWXZ参数的设定。 -m&lt;磁区数&gt; 设定硬盘多重分区存取的分区数。 -n&lt;0或1&gt; 忽略硬盘写入时所发生的错误。 -p&lt;PIO模式&gt; 设定硬盘的PIO模式。 -P&lt;磁区数&gt; 设定硬盘内部快取的分区数。 -q 在执行后续的参数时，不在屏幕上显示任何信息。 -r&lt;0或1&gt; 设定硬盘的读写模式。 -S&lt;时间&gt; 设定硬盘进入省电模式前的等待时间。 -t 评估硬盘的读取效率。 -T 评估硬盘快取的读取效率。 -u&lt;0或1&gt; 在硬盘存取时，允许其他中断要求同时执行。 -v 显示硬盘的相关设定。 -W&lt;0或1&gt; 设定硬盘的写入快取。 -X&lt;传输模式&gt; 设定硬盘的传输模式。 -y 使IDE硬盘进入省电模式。 -Y 使IDE硬盘进入睡眠模式。 -Z 关闭某些Seagate硬盘的自动省电功能。 实例显示硬盘的相关设置123456# hdparm /dev/sda /dev/sda: IO_support = 0 (default 16-bit) readonly = 0 (off) readahead = 256 (on) geometry = 19929［柱面数］/255［磁头数］/63［扇区数］, sectors = 320173056［总扇区数］, start = 0［起始扇区数］ 显示硬盘的柱面\\磁头\\扇区数123# hdparm -g /dev/sda /dev/sda: geometry = 19929［柱面数］/255［磁头数］/63［扇区数］, sectors = 320173056［总扇区数］, start = 0［起始扇区数］ 评估硬盘的读取效率123456789hdparm -t /dev/sda/dev/sda:Timing buffered disk reads: 166 MB in 3.03 seconds = 54.85 MB/sec[root@linuxso.com ~]# hdparm -t /dev/sda/dev/sda:Timing buffered disk reads: 160 MB in 3.01 seconds = 53.11 MB/sec[root@linuxso.com ~]# hdparm -t /dev/sda/dev/sda:Timing buffered disk reads: 166 MB in 3.00 seconds = 55.31 MB/sec","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"hdparm","slug":"Linux/磁盘维护/hdparm","permalink":"http://yoursite.com/categories/Linux/磁盘维护/hdparm/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"hdparm","slug":"hdparm","permalink":"http://yoursite.com/tags/hdparm/"}]},{"title":"Linux-halt","slug":"Linux-halt","date":"2019-05-02T01:54:35.892Z","updated":"2019-02-25T09:57:04.000Z","comments":true,"path":"2019/05/02/Linux-halt/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-halt/","excerpt":"halt 命令若系统的 runlevel 为 0 或 6 ，则Linux halt命令关闭系统，否则以 shutdown 指令（加上 -h 参数）来取代。使用权限：系统管理者。","text":"halt 命令若系统的 runlevel 为 0 或 6 ，则Linux halt命令关闭系统，否则以 shutdown 指令（加上 -h 参数）来取代。使用权限：系统管理者。 语法1halt [-n] [-w] [-d] [-f] [-i] [-p] 参数 -n : 在关机前不做将记忆体资料写回硬盘的动作 -w : 并不会真的关机，只是把记录写到 /var/log/wtmp 档案里 -d : 不把记录写到 /var/log/wtmp 档案里（-n 这个参数包含了 -d） -f : 强迫关机，不呼叫 shutdown 这个指令 -i : 在关机之前先把所有网络相关的装置先停止 -p : 当关机的时候，顺便做关闭电源（poweroff）的动作 实例关闭系统1halt 关闭系统并关闭电源1halt -p 关闭系统，但不留下记录1halt -d","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"halt","slug":"Linux/系统管理/halt","permalink":"http://yoursite.com/categories/Linux/系统管理/halt/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"halt","slug":"halt","permalink":"http://yoursite.com/tags/halt/"}]},{"title":"Linux-gzip","slug":"Linux-gzip","date":"2019-05-02T01:54:35.885Z","updated":"2019-03-02T05:45:50.000Z","comments":true,"path":"2019/05/02/Linux-gzip/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-gzip/","excerpt":"gzip 命令gzip 命令用于压缩文件。","text":"gzip 命令gzip 命令用于压缩文件。gzip是个使用广泛的压缩程序，文件经它压缩过后，其名称后面会多出”.gz”的扩展名。 语法1gzip [-acdfhlLnNqrtvV][-S &amp;lt;压缩字尾字符串&amp;gt;][-&amp;lt;压缩效率&amp;gt;][--best/fast][文件...] 或 gzip [-acdfhlLnNqrtvV][-S &amp;lt;压缩字尾字符串&amp;gt;][-&amp;lt;压缩效率&amp;gt;][--best/fast][目录] 参数 -a或–ascii 使用ASCII文字模式。 -c或–stdout或–to-stdout 把压缩后的文件输出到标准输出设备，不去更动原始文件。 -d或–decompress或—-uncompress 解开压缩文件。 -f或–force 强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接。 -h或–help 在线帮助。 -l或–list 列出压缩文件的相关信息。 -L或–license 显示版本与版权信息。 -n或–no-name 压缩文件时，不保存原来的文件名称及时间戳记。 -N或–name 压缩文件时，保存原来的文件名称及时间戳记。 -q或–quiet 不显示警告信息。 -r或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。 -S&lt;压缩字尾字符串&gt;或—-suffix&lt;压缩字尾字符串&gt; 更改压缩字尾字符串。 -t或–test 测试压缩文件是否正确无误。 -v或–verbose 显示指令执行过程。 -V或–version 显示版本信息。 -&lt;压缩效率&gt; 压缩效率是一个介于1－9的数值，预设值为”6”，指定愈大的数值，压缩效率就会愈高。 –best 此参数的效果和指定”-9”参数相同。 –fast 此参数的效果和指定”-1”参数相同。 实例压缩文件 12345[root@w3cschool.cc a]# ls //显示当前目录文件a.c b.h d.cpp[root@w3cschool.cc a]# gzip * //压缩目录下的所有文件[root@w3cschool.cc a]# ls //显示当前目录文件a.c.gz b.h.gz d.cpp.gz","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"gzip","slug":"Linux/备份压缩/gzip","permalink":"http://yoursite.com/categories/Linux/备份压缩/gzip/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"gzip","slug":"gzip","permalink":"http://yoursite.com/tags/gzip/"}]},{"title":"Linux-gzexe","slug":"Linux-gzexe","date":"2019-05-02T01:54:35.879Z","updated":"2019-03-02T05:26:54.000Z","comments":true,"path":"2019/05/02/Linux-gzexe/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-gzexe/","excerpt":"gzexe 命令gzexe 命令用于压缩执行文件。","text":"gzexe 命令gzexe 命令用于压缩执行文件。gzexe是用来压缩执行文件的程序。当您去执行被压缩过的执行文件时，该文件会自动解压然后继续执行，和使用一般的执行文件相同。 语法1gzexe [-d][执行文件...] 参数 -d 解开压缩文件。 实例压缩可执行文件1# gzexe abc","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"gzexe","slug":"Linux/备份压缩/gzexe","permalink":"http://yoursite.com/categories/Linux/备份压缩/gzexe/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"gzexe","slug":"gzexe","permalink":"http://yoursite.com/tags/gzexe/"}]},{"title":"Linux-gunzip","slug":"Linux-gunzip","date":"2019-05-02T01:54:35.873Z","updated":"2019-03-02T05:00:04.000Z","comments":true,"path":"2019/05/02/Linux-gunzip/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-gunzip/","excerpt":"gunzip 命令gunzip 命令用于解压文件。","text":"gunzip 命令gunzip 命令用于解压文件。gunzip是个使用广泛的解压缩程序，它用于解开被gzip压缩过的文件，这些压缩文件预设最后的扩展名为”.gz”。事实上gunzip就是gzip的硬连接，因此不论是压缩或解压缩，都可通过gzip指令单独完成。 语法1gunzip [-acfhlLnNqrtvV][-s &lt;压缩字尾字符串&gt;][文件...] 或 gunzip [-acfhlLnNqrtvV][-s &lt;压缩字尾字符串&gt;][目录] 参数 -a或–ascii 使用ASCII文字模式。 -c或–stdout或–to-stdout 把解压后的文件输出到标准输出设备。 -f或-force 强行解开压缩文件，不理会文件名称或硬连接是否存在以及该文件是否为符号连接。 -h或–help 在线帮助。 -l或–list 列出压缩文件的相关信息。 -L或–license 显示版本与版权信息。 -n或–no-name 解压缩时，若压缩文件内含有远来的文件名称及时间戳记，则将其忽略不予处理。 -N或–name 解压缩时，若压缩文件内含有原来的文件名称及时间戳记，则将其回存到解开的文件上。 -q或–quiet 不显示警告信息。 -r或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。 -S&lt;压缩字尾字符串&gt;或–suffix&lt;压缩字尾字符串&gt; 更改压缩字尾字符串。 -t或–test 测试压缩文件是否正确无误。 -v或–verbose 显示指令执行过程。 -V或–version 显示版本信息。 实例解压文件1gunzip ab.gz","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"gunzip","slug":"Linux/备份压缩/gunzip","permalink":"http://yoursite.com/categories/Linux/备份压缩/gunzip/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"gunzip","slug":"gunzip","permalink":"http://yoursite.com/tags/gunzip/"}]},{"title":"Linux-grpunconv","slug":"Linux-grpunconv","date":"2019-05-02T01:54:35.866Z","updated":"2019-03-01T09:45:17.000Z","comments":true,"path":"2019/05/02/Linux-grpunconv/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-grpunconv/","excerpt":"grpunconv 命令grpunconv 命令用于关闭群组的投影密码。","text":"grpunconv 命令grpunconv 命令用于关闭群组的投影密码。执行grpunconv指令可关闭群组投影密码，它会把密码从gshadow文件内，回存到group文件里。 语法1grpunconv 实例未关闭的情况12cat /etc/gshadow | grep cdy cdy:123456:: 关闭影子密码12cat /etc/gshadowcat: /etc/gshadow: 没有那个文件或目录 查看密码已经复制到/etc/group中了12cat /etc/group | grep cdycdy:123456:1000:","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"grpunconv","slug":"Linux/系统设置/grpunconv","permalink":"http://yoursite.com/categories/Linux/系统设置/grpunconv/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"grpunconv","slug":"grpunconv","permalink":"http://yoursite.com/tags/grpunconv/"}]},{"title":"Linux-grpconv","slug":"Linux-grpconv","date":"2019-05-02T01:54:35.860Z","updated":"2019-03-01T06:02:04.000Z","comments":true,"path":"2019/05/02/Linux-grpconv/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-grpconv/","excerpt":"grpconv 命令grpconv 命令用于开启群组的投影密码。","text":"grpconv 命令grpconv 命令用于开启群组的投影密码。Linux系统里的用户和群组密码，分别存放在/etc目录下的passwd和group文件中。因系统运作所需，任何人都得以读取它们，造成安全上的破绽。投影密码将文件内的密码改存在/etc目录下的shadow和gshadow文件内，只允许系统管理者读取，同时把原密码置换为”x”字符。投影密码的功能可随时开启或关闭，您只需执行grpconv指令就能开启群组投影密码。 语法1grpconv","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"grpconv","slug":"Linux/系统设置/grpconv","permalink":"http://yoursite.com/categories/Linux/系统设置/grpconv/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"grpconv","slug":"grpconv","permalink":"http://yoursite.com/tags/grpconv/"}]},{"title":"Linux-groupmod","slug":"Linux-groupmod","date":"2019-05-02T01:54:35.854Z","updated":"2019-02-26T14:16:36.000Z","comments":true,"path":"2019/05/02/Linux-groupmod/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-groupmod/","excerpt":"groupmod 命令groupmod 命令用于更改群组识别码或名称。","text":"groupmod 命令groupmod 命令用于更改群组识别码或名称。需要更改群组的识别码或名称时，可用groupmod指令来完成这项工作。 语法1groupmod [-g &lt;群组识别码&gt; &lt;-o&gt;][-n &lt;新群组名称&gt;][群组名称] 参数 -g &lt;群组识别码&gt; 设置欲使用的群组识别码。 -o 重复使用群组识别码。 -n &lt;新群组名称&gt; 设置欲使用的群组名称。 实例修改组名12345678[root@w3cschool.cc ~]# groupadd linuxso [root@w3cschool.cc ~]# tail -1 /etc/group linuxso:x:500: [root@w3cschool.cc ~]# tail -1 /etc/group linuxso:x:500: [root@w3cschool.cc ~]# groupmod -n linux linuxso [root@w3cschool.cc ~]# tail -1 /etc/group linux:x:500:","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"groupmod","slug":"Linux/系统管理/groupmod","permalink":"http://yoursite.com/categories/Linux/系统管理/groupmod/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"groupmod","slug":"groupmod","permalink":"http://yoursite.com/tags/groupmod/"}]},{"title":"Linux-groupdel","slug":"Linux-groupdel","date":"2019-05-02T01:54:35.848Z","updated":"2019-02-25T09:40:51.000Z","comments":true,"path":"2019/05/02/Linux-groupdel/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-groupdel/","excerpt":"groupdel 命令groupdel 命令用于删除群组。","text":"groupdel 命令groupdel 命令用于删除群组。需要从系统上删除群组时，可用groupdel(group delete)指令来完成这项工作。倘若该群组中仍包括某些用户，则必须先删除这些用户后，方能删除群组。 语法1groupdel [群组名称] 实例删除一个群组1groupdel hnuser","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"groupdel","slug":"Linux/系统管理/groupdel","permalink":"http://yoursite.com/categories/Linux/系统管理/groupdel/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"groupdel","slug":"groupdel","permalink":"http://yoursite.com/tags/groupdel/"}]},{"title":"Linux-grep","slug":"Linux-grep","date":"2019-05-02T01:54:35.841Z","updated":"2019-02-10T14:52:30.000Z","comments":true,"path":"2019/05/02/Linux-grep/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-grep/","excerpt":"grep 命令grep 命令用于查找文件里符合条件的字符串。grep指令用于查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设grep指令会把含有范本样式的那一列显示出来。若不指定任何文件名称，或是所给予的文件名为“-”，则grep指令会从标准输入设备读取数据。","text":"grep 命令grep 命令用于查找文件里符合条件的字符串。grep指令用于查找内容包含指定的范本样式的文件，如果发现某文件的内容符合所指定的范本样式，预设grep指令会把含有范本样式的那一列显示出来。若不指定任何文件名称，或是所给予的文件名为“-”，则grep指令会从标准输入设备读取数据。 语法1grep [-abcEFGhHilLnqrsvVwxy][-A&lt;显示列数&gt;][-B&lt;显示列数&gt;][-C&lt;显示列数&gt;][-d&lt;进行动作&gt;][-e&lt;范本样式&gt;][-f&lt;范本文件&gt;][--help][范本样式][文件或目录...] 参数 -a 或 –text : 不要忽略二进制的数据。 -A&lt;显示行数&gt; 或 –after-context=&lt;显示行数&gt; : 除了显示符合范本样式的那一列之外，并显示该行之后的内容。 -b 或 –byte-offset : 在显示符合样式的那一行之前，标示出该行第一个字符的编号。 -B&lt;显示行数&gt; 或 –before-context=&lt;显示行数&gt; : 除了显示符合样式的那一行之外，并显示该行之前的内容。 -c 或 –count : 计算符合样式的列数。 -C&lt;显示行数&gt; 或 –context=&lt;显示行数&gt;或-&lt;显示行数&gt; : 除了显示符合样式的那一行之外，并显示该行之前后的内容。 -d &lt;动作&gt; 或 –directories=&lt;动作&gt; : 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep指令将回报信息并停止动作。 -e&lt;范本样式&gt; 或 –regexp=&lt;范本样式&gt; : 指定字符串做为查找文件内容的样式。 -E 或 –extended-regexp : 将样式为延伸的普通表示法来使用。 -f&lt;规则文件&gt; 或 –file=&lt;规则文件&gt; : 指定规则文件，其内容含有一个或多个规则样式，让grep查找符合规则条件的文件内容，格式为每行一个规则样式。 -F 或 –fixed-regexp : 将样式视为固定字符串的列表。 -G 或 –basic-regexp : 将样式视为普通的表示法来使用。 -h 或 –no-filename : 在显示符合样式的那一行之前，不标示该行所属的文件名称。 -H 或 –with-filename : 在显示符合样式的那一行之前，表示该行所属的文件名称。 -i 或 –ignore-case : 忽略字符大小写的差别。 -l 或 –file-with-matches : 列出文件内容符合指定的样式的文件名称。 -L 或 –files-without-match : 列出文件内容不符合指定的样式的文件名称。 -n 或 –line-number : 在显示符合样式的那一行之前，标示出该行的列数编号。 -o 或 –only-matching : 只显示匹配PATTERN 部分。 -q 或 –quiet或–silent : 不显示任何信息。 -r 或 –recursive : 此参数的效果和指定”-d recurse”参数相同。 -s 或 –no-messages : 不显示错误信息。 -v 或 –revert-match : 显示不包含匹配文本的所有行。 -V 或 –version : 显示版本信息。 -w 或 –word-regexp : 只显示全字符合的列。 -x –line-regexp : 只显示全列符合的列。 -y : 此参数的效果和指定”-i”参数相同。 实例在当前目录中，查找后缀有file字样的文件中包含test字符串的文件，并打印出该字符串的行。1grep test *file 结果如下：1234$ grep test test* #查找前缀有“test”的文件包含“test”字符串的文件 testfile1:This a Linux testfile! #列出testfile1 文件中包含test字符的行 testfile_2:This is a linux testfile! #列出testfile_2 文件中包含test字符的行 testfile_2:Linux test #列出testfile_2 文件中包含test字符的行 以递归的方式查找符合条件的文件。例如，查找指定目录/etc/acpi及其子目录（如果存在子目录的话）下所有文件中包含字符串“update”的文件，并打印出该字符串所在行的内容，使用的命令为：1grep -r update /etc/acpi 输出结果如下：1234567$ grep -r update /etc/acpi #以递归的方式查找“etc/acpi” #下包含“update”的文件 /etc/acpi/ac.d/85-anacron.sh:# (Things like the slocate updatedb cause a lot of IO.) Rather than /etc/acpi/resume.d/85-anacron.sh:# (Things like the slocate updatedb cause a lot of IO.) Rather than /etc/acpi/events/thinkpad-cmos:action=/usr/sbin/thinkpad-keys--update 反向查找。前面各个例子是查找并打印出符合条件的行，通过“-v”参数可以打印出不符合条件行的内容。查找文件名中包含test的文件中不包含test的行，此时使用的命令为：1grep -v test *test* 结果如下所示：123456789$ grep-v test* #查找文件名中包含test 的文件中不包含test 的行 testfile1:helLinux! testfile1:Linis a free Unix-type operating system. testfile1:Lin testfile_1:HELLO LINUX! testfile_1:LINUX IS A FREE UNIX-TYPE OPTERATING SYSTEM. testfile_1:THIS IS A LINUX TESTFILE! testfile_2:HELLO LINUX! testfile_2:Linux is a free unix-type opterating system.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"grep","slug":"Linux/文档编辑/grep","permalink":"http://yoursite.com/categories/Linux/文档编辑/grep/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"grep","slug":"grep","permalink":"http://yoursite.com/tags/grep/"}]},{"title":"Linux-gitview","slug":"Linux-gitview","date":"2019-05-02T01:54:35.832Z","updated":"2019-02-03T14:43:32.000Z","comments":true,"path":"2019/05/02/Linux-gitview/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-gitview/","excerpt":"gitview 命令gitview 命令用于观看文件内容，它会同时显示十六进制和ASCII格式的字码。","text":"gitview 命令gitview 命令用于观看文件内容，它会同时显示十六进制和ASCII格式的字码。 语法1gitview [-bchilv][文件] 参数 -b 单色模式，不使用ANSI控制码显示彩色。 -c 彩色模式，使用ANSI控制码显示色彩。 -h 在线帮助。 -i 显示存放gitview程序的所在位置。 -l 不使用先前的显示字符。 -v 显示版本信息。 实例使用命令 gitview 以彩色模式观看文件“/home/rootlocal/demo.txt”中的内容1gitview -c /home/rootlocal/demo.txt","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"gitview","slug":"Linux/文件管理/gitview","permalink":"http://yoursite.com/categories/Linux/文件管理/gitview/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"gitview","slug":"gitview","permalink":"http://yoursite.com/tags/gitview/"}]},{"title":"Linux-gitps","slug":"Linux-gitps","date":"2019-05-02T01:54:35.825Z","updated":"2019-02-27T04:19:48.000Z","comments":true,"path":"2019/05/02/Linux-gitps/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-gitps/","excerpt":"gitps 命令gitps 命令用于报告程序状况。","text":"gitps 命令gitps 命令用于报告程序状况。gitps(gnu interactive tools process status)是用来报告并管理程序执行的指令，基本上它就是通过ps指令来报告，管理程序，也能通过gitps指令随时中断，删除不必要的程序。因为gitps指令会去执行ps指令，所以其参数和ps指令相当类似。 语法1gitps [acefgjlnrsSTuvwxX][p &lt;程序识别码&gt;][t &lt;终端机编号&gt;][U &lt;帐号名称&gt;] 参数 a 显示 现行终端机下的所有程序，包括其他用户的程序。 c 列出程序时，显示每个程序真正的指令名称，而不包含路径，参数或是常驻服务的标示． e 列出程序时，显示每个程序所使用的环境变量。 f 用ASCII字符显示树状结构，表达程序间的相互关系。 g 显示现行终端机下的所有程序，包括群组领导者的程序。 j 采用工作控制的格式来显示程序状况。 l 采用纤细的格式来显示程序状况。 n 以数字来表示USER和WCHAN栏位。 p&lt;程序识别码&gt; 指定程序识别码，并列出该程序的状况。 r 只列出现行终端机正在执行中的程序。 s 采用程序信号的格式显示程序状况。 S 列出程序时，包括已中断的子程序信息。 t&lt;终端机机标号&gt; 指定终端机编号，并列出属于该终端机的程序的状况。 T 显示现行终端机下的所有程序。 u 以用户为主的格式来显示程序状况。 U&lt;帐号名称&gt; 列出属于该用户的程序的状况。 v 采用虚拟内存的格式显示程序状况。 w 采用宽阔的格式来显示程序状况。 x 显示所有程序，不以终端机来区分。 X 采用旧试的Linux i386登陆格式显示程序状况。 实例显示指定用户信息1gitps hulinux","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"gitps","slug":"Linux/系统管理/gitps","permalink":"http://yoursite.com/categories/Linux/系统管理/gitps/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"gitps","slug":"gitps","permalink":"http://yoursite.com/tags/gitps/"}]},{"title":"Linux-git","slug":"Linux-git","date":"2019-05-02T01:54:35.819Z","updated":"2019-02-02T13:45:52.000Z","comments":true,"path":"2019/05/02/Linux-git/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-git/","excerpt":"git 命令git 命令是文字模式下的文件管理员。git是用来是管理文件的程序，它十分类似DOS下的Norton Commander，具有互动式操作界面。它的操作方法和Norton Commander几乎一样。","text":"git 命令git 命令是文字模式下的文件管理员。git是用来是管理文件的程序，它十分类似DOS下的Norton Commander，具有互动式操作界面。它的操作方法和Norton Commander几乎一样。 语法1git 操作说明 F1 ：执行info指令，查询指令相关信息，会要求您输入欲查询的名称。 F2 ：执行cat指令，列出文件内容。 F3 ：执行gitview指令，观看文件内容。 F4 ：执行vi指令，编辑文件内容。 F5 ：执行cp指令，复制文件或目录，会要求您输入目标文件或目录。 F6 ：执行mv指令，移动文件或目录，或是更改其名称，会要求您输入目标文件或目录。 F7 ：执行mkdir指令，建立目录。 F8 ：执行rm指令，删除文件或目录。 F9 ：执行make指令，批处理执行指令或编译程序时，会要求您输入相关命令。 F10 ：离开git文件管理员。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"git","slug":"Linux/文件管理/git","permalink":"http://yoursite.com/categories/Linux/文件管理/git/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"Linux-getty","slug":"Linux-getty","date":"2019-05-02T01:54:35.813Z","updated":"2019-02-20T05:47:32.000Z","comments":true,"path":"2019/05/02/Linux-getty/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-getty/","excerpt":"getty 命令getty 命令用于设置终端机模式，连线速率和管制线路。getty指令是UNIX之类操作系统启动时所必须的3个步骤之一。","text":"getty 命令getty 命令用于设置终端机模式，连线速率和管制线路。getty指令是UNIX之类操作系统启动时所必须的3个步骤之一。 语法1getty [-h][-d&lt;组态配置文件&gt;][-r&lt;延迟秒数&gt;][-t&lt;超时秒数&gt;][-w&lt;等待字符串&gt;][终端机编号][连线速率&lt;终端机类型&gt;&lt;管制线路&gt;] 或 getty [-c&lt;定义配置文件&gt;] 参数 -c&lt;定义配置文件&gt; 指定定义配置文件，预设为/etc/gettydefs。 -d&lt;组态配置文件&gt; 指定组态配置文件，预设为/etc/conf.getty。 -h 当传输速率为0时就强制断线。 -r&lt;延迟秒数&gt; 设置延迟时间。 -t&lt;超时秒数&gt; 设置等待登入的时间。 -w&lt;等待字符串&gt; 设置等待回应的字符串。 实例开启终端：1getty tty7","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"getty","slug":"Linux/网络通讯/getty","permalink":"http://yoursite.com/categories/Linux/网络通讯/getty/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"getty","slug":"getty","permalink":"http://yoursite.com/tags/getty/"}]},{"title":"Linux-fwhios","slug":"Linux-fwhios","date":"2019-05-02T01:54:35.807Z","updated":"2019-02-24T06:11:11.000Z","comments":true,"path":"2019/05/02/Linux-fwhios/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fwhios/","excerpt":"fwhios 命令fwhios 命令用于查找并显示用户信息。","text":"fwhios 命令fwhios 命令用于查找并显示用户信息。本指令的功能有点类似finger指令，它会去查找并显示指定帐号的用户相关信息。不同之处在于fwhois指令是到Network Solutions的WHOIS数据库去查找，该帐号名称必须有在上面注册才能寻获，且名称没有大小写的差别。 语法1fwhios [帐号名称]","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"fwhios","slug":"Linux/系统管理/fwhios","permalink":"http://yoursite.com/categories/Linux/系统管理/fwhios/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"fwhios","slug":"fwhios","permalink":"http://yoursite.com/tags/fwhios/"}]},{"title":"Linux-ftpwho","slug":"Linux-ftpwho","date":"2019-05-02T01:54:35.800Z","updated":"2019-02-12T14:52:31.000Z","comments":true,"path":"2019/05/02/Linux-ftpwho/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ftpwho/","excerpt":"ftpwho 命令ftpwho 命令用于显示目前所有以FTP登入的用户信息。执行这项指令可得知目前用FTP登入系统的用户有哪些人，以及他们正在进行的操作。","text":"ftpwho 命令ftpwho 命令用于显示目前所有以FTP登入的用户信息。执行这项指令可得知目前用FTP登入系统的用户有哪些人，以及他们正在进行的操作。 语法1ftpwho 参数 -v 显示版本信息 实例查询当前有哪些用户正在登录ftp服务器1ftpwho 输出结果：1234$ ftpwho #查询当前正在登录FTP 服务器的用户 standalone FTP daemon[2085]： 3547 wyw [1m20s] 1m25s(idle) Service class - 1 user #当前有一个用户登录FTP服务器","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"ftpwho","slug":"Linux/文件传输/ftpwho","permalink":"http://yoursite.com/categories/Linux/文件传输/ftpwho/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"ftpwho","slug":"ftpwho","permalink":"http://yoursite.com/tags/ftpwho/"}]},{"title":"Linux-ftpshut","slug":"Linux-ftpshut","date":"2019-05-02T01:54:35.795Z","updated":"2019-02-12T14:48:33.000Z","comments":true,"path":"2019/05/02/Linux-ftpshut/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ftpshut/","excerpt":"ftpshut 命令ftpshut 命令在指定的时间关闭ftp服务器。本指令提供系统管理者在设置的时间关闭ftp服务器，且能在关闭之前发出警告信息通知用户。关闭时间若设置后为“none”，则会马上关闭服务器。如果采用“+30”的方式来设置表示服务器在30分钟后关闭。依次类推，假设使用“1130”的格式则代表服务器会在每日的11时30分关闭，时间格式为24小时制。ftp服务器关闭后，在/etc目录下会产生一个名称为shutmsg的文件，把它删除后即可再度启动ftp服务器的功能。","text":"ftpshut 命令ftpshut 命令在指定的时间关闭ftp服务器。本指令提供系统管理者在设置的时间关闭ftp服务器，且能在关闭之前发出警告信息通知用户。关闭时间若设置后为“none”，则会马上关闭服务器。如果采用“+30”的方式来设置表示服务器在30分钟后关闭。依次类推，假设使用“1130”的格式则代表服务器会在每日的11时30分关闭，时间格式为24小时制。ftp服务器关闭后，在/etc目录下会产生一个名称为shutmsg的文件，把它删除后即可再度启动ftp服务器的功能。 语法1ftpshut [-d&lt;分钟&gt;][-l&lt;分钟&gt;][关闭时间][&quot;警告信息&quot;] 参数 -d&lt;分钟&gt; 切断所有FTP连线时间。 -l&lt;分钟&gt; 停止接受FTP登入的时间。 实例在晚上11：00关闭服务器，并在关闭前5分钟拒绝新的ftp登录，前3分钟关闭所有ftp的链接，且给出警告信息，可使用以下命令：1ftpshut-d 3 -1 5 1100 &quot;Server will be shutdown at 23:00:00&quot;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"ftpshut","slug":"Linux/文件传输/ftpshut","permalink":"http://yoursite.com/categories/Linux/文件传输/ftpshut/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"ftpshut","slug":"ftpshut","permalink":"http://yoursite.com/tags/ftpshut/"}]},{"title":"Linux-ftpcount","slug":"Linux-ftpcount","date":"2019-05-02T01:54:35.789Z","updated":"2019-02-12T15:01:23.000Z","comments":true,"path":"2019/05/02/Linux-ftpcount/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ftpcount/","excerpt":"ftpcount 命令ftpcount 命令用于显示目前以ftp登入的用户人数。执行这项指令可得知目前用ftp登入系统的人数以及ftp登入人数上限。","text":"ftpcount 命令ftpcount 命令用于显示目前以ftp登入的用户人数。执行这项指令可得知目前用ftp登入系统的人数以及ftp登入人数上限。 语法1ftpcount 参数 -f&lt;设定文件&gt; : 指定设定文件的路径。 -h，–help ：显示帮助信息。 实例ftpcount可以直接查询ftp服务器上用户的人数。1ftpcount 输出结果：123$ ftpcount #查询当前FTP用户的人数 Master proftpd process 2085: Service class - 6 user #当前共6个用户登录到服务器","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"ftpcount","slug":"Linux/文件传输/ftpcount","permalink":"http://yoursite.com/categories/Linux/文件传输/ftpcount/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"ftpcount","slug":"ftpcount","permalink":"http://yoursite.com/tags/ftpcount/"}]},{"title":"Linux-ftp","slug":"Linux-ftp","date":"2019-05-02T01:54:35.782Z","updated":"2019-02-12T14:00:41.000Z","comments":true,"path":"2019/05/02/Linux-ftp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ftp/","excerpt":"ftp 命令ftp 命令设置文件系统相关功能。ftp是ARPANet的标准文件传输协议，该网络就是现今Internet的前身。","text":"ftp 命令ftp 命令设置文件系统相关功能。ftp是ARPANet的标准文件传输协议，该网络就是现今Internet的前身。 语法1ftp [-dignv][主机名称或IP地址] 参数 -d 详细显示指令执行过程，便于排错或分析程序执行的情形。 -i 关闭互动模式，不询问任何问题。 -g 关闭本地主机文件名称支持特殊字符的扩充特性。 -n 不使用自动登陆。 -v 显示指令执行过程。 实例使用ftp命令匿名登录ftp.kernel.org服务器，该服务是Linux内核的官方服务器。1ftp ftp.kernel.org","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"ftp","slug":"Linux/文件传输/ftp","permalink":"http://yoursite.com/categories/Linux/文件传输/ftp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"ftp","slug":"ftp","permalink":"http://yoursite.com/tags/ftp/"}]},{"title":"Linux-fsconf","slug":"Linux-fsconf","date":"2019-05-02T01:54:35.777Z","updated":"2019-02-19T12:09:31.000Z","comments":true,"path":"2019/05/02/Linux-fsconf/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fsconf/","excerpt":"fsconf 命令fsconf 命令用于设置文件系统相关功能。fsconf是Red Hat Linux发行版专门用来调整Linux各项设置的程序。","text":"fsconf 命令fsconf 命令用于设置文件系统相关功能。fsconf是Red Hat Linux发行版专门用来调整Linux各项设置的程序。 语法1fsconf [--check] 参数 –chedk 检查特定文件的权限。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"fsconf","slug":"Linux/磁盘维护/fsconf","permalink":"http://yoursite.com/categories/Linux/磁盘维护/fsconf/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"fsconf","slug":"fsconf","permalink":"http://yoursite.com/tags/fsconf/"}]},{"title":"Linux-fsck.minix","slug":"Linux-fsck.minix","date":"2019-05-02T01:54:35.770Z","updated":"2019-02-19T12:07:01.000Z","comments":true,"path":"2019/05/02/Linux-fsck.minix/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fsck.minix/","excerpt":"fsck.minix 命令fsck.minix 命令用于检查文件系统并尝试修复错误。当minix文件系统发生错误时，可用fsck.minix指令尝试加以参考。","text":"fsck.minix 命令fsck.minix 命令用于检查文件系统并尝试修复错误。当minix文件系统发生错误时，可用fsck.minix指令尝试加以参考。 语法1fsck.minix [-aflmrsv][外围设备代号] 参数 -a 自动修复文件系统，不询问任何问题。 -f 强制对该文件系统进行完整检查，纵然该文件系统在慨略检查下没有问题。 -l 列出所有文件名称。 -m 使用类似MINIX操作系统的警告信息。 -r 采用互动模式，在执行修复时询问问题，让用户得以确认并决定处理方式。 -s 显示该分区第一个磁区的相关信息。 -v 显示指令执行过程。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"fsck.minix","slug":"Linux/磁盘维护/fsck-minix","permalink":"http://yoursite.com/categories/Linux/磁盘维护/fsck-minix/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"fsck.minix","slug":"fsck-minix","permalink":"http://yoursite.com/tags/fsck-minix/"}]},{"title":"Linux-fsck","slug":"Linux-fsck","date":"2019-05-02T01:54:35.763Z","updated":"2019-02-19T12:04:36.000Z","comments":true,"path":"2019/05/02/Linux-fsck/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fsck/","excerpt":"fsck 命令fsck 命令用于检查与修复Linux档案系统，可以同时检查一个或多个Linux档案系统。","text":"fsck 命令fsck 命令用于检查与修复Linux档案系统，可以同时检查一个或多个Linux档案系统。 语法1fsck [-sACVRP] [-t fstype] [--] [fsck-options] filesys [...] 参数 filesys ： device 名称(eg./dev/sda1)，mount 点 (eg. / 或 /usr) -t : 给定档案系统的型式，若在 /etc/fstab 中已有定义或 kernel 本身已支援的则不需加上此参数 -s : 依序一个一个地执行 fsck 的指令来检查 -A : 对/etc/fstab 中所有列出来的 partition 做检查 -C : 显示完整的检查进度 -d : 列印 e2fsck 的 debug 结果 -p : 同时有 -A 条件时，同时有多个 fsck 的检查一起执行 -R : 同时有 -A 条件时，省略 / 不检查 -V : 详细显示模式 -a : 如果检查有错则自动修复 -r : 如果检查有错则由使用者回答是否修复 实例检查msdos档案系统的/dev/hda5是否正常，如果有一场便自动修复：1fsck -t msdos -a /dev/hda5 注意：此指令可与/etc/fstab相互参考操作来加以了解。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"fsck","slug":"Linux/磁盘维护/fsck","permalink":"http://yoursite.com/categories/Linux/磁盘维护/fsck/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"fsck","slug":"fsck","permalink":"http://yoursite.com/tags/fsck/"}]},{"title":"Linux-fsck.ext2","slug":"Linux-fsck.ext2","date":"2019-05-02T01:54:35.757Z","updated":"2019-02-19T13:44:11.000Z","comments":true,"path":"2019/05/02/Linux-fsck.ext2/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fsck.ext2/","excerpt":"fsck.ext2 命令fsck.ext2 命令用于检查文件系统并尝试修复错误。当ext2文件系统发生错误时，可用fsck.ext2指令尝试加以修复。","text":"fsck.ext2 命令fsck.ext2 命令用于检查文件系统并尝试修复错误。当ext2文件系统发生错误时，可用fsck.ext2指令尝试加以修复。 语法1fsck.ext2 [-acdfFnprsStvVy][-b &lt;分区第一个磁区地址&gt;][-B &lt;区块大小&gt;][-C &lt;反叙述器&gt;][-I &lt;inode缓冲区块数&gt;][-l/L &lt;损坏区块文件&gt;][-P &lt;处理inode大小&gt;][外围设备代号] 参数 -a 自动修复文件系统，不询问任何问题。 -b&lt;分区第一个磁区地址&gt; 指定分区的第一个磁区的起始地址，也就是Super Block。 -B&lt;区块大小&gt; 设置该分区每个区块的大小。 -c 检查指定的文件系统内，是否存在有损坏的区块。 -C&lt;反叙述器&gt; 指定反叙述器，fsck.ext2指令会把全部的执行过程，都交由其逆向叙述，便于排错或监控程序执行的情形。 -d 详细显示指令执行过程，便于排错或分析程序执行的情形。 -f 强制对该文件系统进行完整检查，纵然该文件系统在慨略检查下没有问题。 -F 检查文件系统之前，先清理该保存设备块区内的数据。 -I&lt; inode缓冲区块数 &gt; 设置欲检查的文件系统，其inode缓冲区的区块数目。 -l&lt;损坏区块文件&gt; 把文件中所列出的区块，视为损坏区块并将其标示出来，避免应用程序使用该区块。 -L&lt;损坏区块文件&gt; 此参数的效果和指定”-l”参数类似，但在参考损坏区块文件标示损坏区块之前，会先将原来标示成损坏区块者统统清楚，即全部重新设置，而非仅是加入新的损坏区块标示。 -n 把欲检查的文件系统设成只读，并关闭互动模式，否决所有询问的问题。 -p 此参数的效果和指定”-a”参数相同。 -P&lt;处理inode大小&gt; 设置fsck.ext2指令所能处理的inode大小为多少。 -r 此参数将忽略不予处理，仅负责解决兼容性的问题。 -s 检查文件系统时，交换每对字节的内容。 -S 此参数的效果和指定”-s”参数类似，但不论该文件系统是否已是标准位顺序，一律交换每对字节的内容。 -t 显示fsck.ext2指令的时序信息。 -v 详细显示指令执行过程。 -V 显示版本信息。 -y 关闭互动模式，且同意所有询问的问题。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"fsck.ext2","slug":"Linux/磁盘维护/fsck-ext2","permalink":"http://yoursite.com/categories/Linux/磁盘维护/fsck-ext2/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"fsck.ext2","slug":"fsck-ext2","permalink":"http://yoursite.com/tags/fsck-ext2/"}]},{"title":"Linux-free","slug":"Linux-free","date":"2019-05-02T01:54:35.751Z","updated":"2019-02-27T12:20:03.000Z","comments":true,"path":"2019/05/02/Linux-free/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-free/","excerpt":"free 命令free 命令用于显示内存状态。","text":"free 命令free 命令用于显示内存状态。free指令会显示内存的使用情况，包括实体内存，虚拟的交换文件，共享内存区段，以及系统核心使用的缓冲区等。 语法1free [-bkmotV][-s &lt;间隔秒数&gt;] 参数 -b 以Byte为单位显示内存使用情况。 -k 以KB为单位显示内存使用情况。 -m 以MB为单位显示内存使用情况。 -o 不显示缓冲区调节列。 -s&lt;间隔秒数&gt; 持续观察内存使用状况。 -t 显示内存总和列。 -V 显示版本信息。 实例显示内存使用情况1free 以总和的形式显示内存的使用信息1free -t 周期性的查询内存使用信息1free -s 10","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"free","slug":"Linux/系统管理/free","permalink":"http://yoursite.com/categories/Linux/系统管理/free/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"free","slug":"free","permalink":"http://yoursite.com/tags/free/"}]},{"title":"Linux-fold","slug":"Linux-fold","date":"2019-05-02T01:54:35.745Z","updated":"2019-02-10T14:40:35.000Z","comments":true,"path":"2019/05/02/Linux-fold/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fold/","excerpt":"fold 命令fold 命令用于限制文件列宽。fold 命令会从指定的文件里读取内容，将超过限定列宽的列加入增列字符后，输出到标准输出设备。若不指定任何文件名称，或是所给予的文件名为“-”，则fold指令会从标准输入设备读取数据。","text":"fold 命令fold 命令用于限制文件列宽。fold 命令会从指定的文件里读取内容，将超过限定列宽的列加入增列字符后，输出到标准输出设备。若不指定任何文件名称，或是所给予的文件名为“-”，则fold指令会从标准输入设备读取数据。 语法1fold [-bs][-w&lt;每列行数&gt;][--help][--version][文件...] 参数 -b或–bytes 以Byte为单位计算列宽，而非采用行数编号为单位。 -s或–spaces 以空格字符作为换列点。 -w&lt;每列行数&gt;或–width&lt;每列行数&gt; 设置每列的最大行数。 –help 在线帮助。 –version 显示版本信息。 实例将一个名为testfile的文件的行折叠成宽度为30，可使用以下命令：1fold -w 30 testfile 为了对比，先将testfile文件输出如下：1234567891011121314$ cat testfile #查看testfile 中的内容 Linux networks are becoming more and more common, but security is often an overlooked issue. Unfortunately, in today’s environment all networks are potential hacker targets, from top-secret military research networks to small home LANs. Linux Network Security focuses on securing Linux in a networked environment, where the security of the entire network needs to be considered rather than just isolated machines. It uses a mix of theory and practical techniques to teach administrators how to install and use security applications, as well as how the applications work and why they are necessary. 然后使用fold命令折叠显示：123456789101112131415161718192021$ fold -w 30 testfile #行折叠成宽度为30，显示testfile 文件 Linux networks are becoming mo re and more common, but securi ty is often an overlooked issu e. Unfortunately, in today’s environment all networks are potential hacker targets, from top-secret military research networks to small home LANs. Linux Network Security focuses on securing Linux in a networ ked environment, where the sec urity of the entire network ne eds to be considered rather th an just isolated machines. It uses a mix of theory and pract ical techniques to teach admin istrators how to install and u se security applications, as w ell as how the applications wo rk and why they are necessary","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"fold","slug":"Linux/文档编辑/fold","permalink":"http://yoursite.com/categories/Linux/文档编辑/fold/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"fold","slug":"fold","permalink":"http://yoursite.com/tags/fold/"}]},{"title":"Linux-fmt","slug":"Linux-fmt","date":"2019-05-02T01:54:35.738Z","updated":"2019-02-10T14:31:05.000Z","comments":true,"path":"2019/05/02/Linux-fmt/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fmt/","excerpt":"fmt 命令fmt 命令用于编排文本文件。fmt 指令会从指定的文件里读取内容，将其按照指定格式重新编排后，输出到标准输出设备。若指定的文件名为“-”，则fmt指令会从标准输入设备读取数据。","text":"fmt 命令fmt 命令用于编排文本文件。fmt 指令会从指定的文件里读取内容，将其按照指定格式重新编排后，输出到标准输出设备。若指定的文件名为“-”，则fmt指令会从标准输入设备读取数据。 语法1fmt [-cstu][-p&lt;列起始字符串&gt;][-w&lt;每列字符数&gt;][--help][--version][文件...] 参数 -c或–crown-margin 每段前两列缩排。 -p&lt;列起始字符串&gt;或-prefix=&lt;列起始字符串&gt; 仅合并含有指定字符串的列，通常运用在程序语言的注解方面。 -s或–split-only 只拆开字数超出每列字符数的列，但不合并字数不足每列字符数的列。 -t或–tagged-paragraph 每列前两列缩排，但第1列和第2列的缩排格式不同。 -u或–uniform-spacing 每个字符之间都以一个空格字符间隔，每个句子之间则两个空格字符分隔。 -w&lt;每列字符数&gt;或–width=&lt;每列字符数&gt;或-&lt;每列字符数&gt; 设置每列的最大字符数。 –help 在线帮助。 –version 显示版本信息。 实例重排指定文件。如文件testfile共5行文字，可以通过命令对该文件格式进行重排，其命令为：1fmt testfile 输出结果如下：123$ fmt testfile #重排testfile 文件 hello Linux! Linux is a free Unix-type operating system. This is a Linux testfile! Linux Linux 将文件testfile重新排成85个字符一行，并在标准输出设备上输出，其命令应该为：1fmt -w 85 testfile 为了对比，先使用cat命令文件内容：123456$ cat testfile #查看testfile 文件的内容 hello Linux! Linux is a free Unix-type operating system. This is a Linux testfile! Linux Linux 使用fmt命令重排之后，输出结果如下：123$ fmt -w 85 testfile #指定重排宽度为85个字符 hello Linux! Linux is a free Unix-type operating system. This is a Linux testfile! Linux Linux","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"fmt","slug":"Linux/文档编辑/fmt","permalink":"http://yoursite.com/categories/Linux/文档编辑/fmt/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"fmt","slug":"fmt","permalink":"http://yoursite.com/tags/fmt/"}]},{"title":"Linux-finger","slug":"Linux-finger","date":"2019-05-02T01:54:35.732Z","updated":"2019-02-24T05:51:25.000Z","comments":true,"path":"2019/05/02/Linux-finger/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-finger/","excerpt":"finger 命令finger 命令可以让使用者查询一些其他使用者的资料。会列出的资料有：","text":"finger 命令finger 命令可以让使用者查询一些其他使用者的资料。会列出的资料有： Login Name User Name Home directory Shell Login status mail status .plan .project .forward 其中 .plan、.project 和 .forward 就是使用者在他的 Home Directory 里的 .plan ， .project 和 .forward 等档案里的资料。如果没有就没有。finger 指令并不限定于在同一服务器上查询，也可以寻找某一个远端服务器上的使用者。只要给一个像是 E-mail address 一般的地址即可。使用权限：所有使用者。 语法1finger [options] user[@address] 参数 -l 多行显示。 -s 单行显示。这个选项只显示登入名称、真实姓名、终端机名称、闲置时间、登入时间、办公室号码及电话号码。如果所查询的使用者是远端服务器的使用者，这个选项无效。 实例列出当前登录用户的相关信息123456789101112131415161718# finger -l //显示用户信息Login: root Name: rootDirectory: /root Shell: /bin/bashOn since Fri Apr 9 20:17 (CST) on :0 (messages off)On since Fri Apr 9 20:17 (CST) on pts/1 32 days 22 hours idleOn since Fri Apr 9 20:17 (CST) on pts/3 4 hours 5 minutes idle(messages off)On since Wed May 12 18:08 (CST) on pts/4 from 192.168.1.10On since Wed May 12 18:35 (CST) on pts/5 from 192.168.1.107 minutes 54 seconds idleOn since Wed May 12 14:37 (CST) on pts/2 from 192.168.1.103 hours 14 minutes idleOn since Wed May 12 14:53 (CST) on pts/7 34 minutes 25 seconds idle(messages off)On since Wed May 12 16:53 (CST) on pts/8 from 192.168.1.1030 minutes 18 seconds idleMail last read Mon Mar 31 04:02 2008 (CST)No Plan. 显示指定用户信息1# finger -m hnlinux 显示远程用户信息1# finger -m root@192.168.1.13 下列指令可以查询本机管理员的资料：1finger root 其结果如下：12345Login: root Name: rootDirectory: /root Shell: /bin/bashNever logged in.No mail.No Plan.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"finger","slug":"Linux/系统管理/finger","permalink":"http://yoursite.com/categories/Linux/系统管理/finger/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"finger","slug":"finger","permalink":"http://yoursite.com/tags/finger/"}]},{"title":"Linux-find","slug":"Linux-find","date":"2019-05-02T01:54:35.724Z","updated":"2019-02-02T13:39:52.000Z","comments":true,"path":"2019/05/02/Linux-find/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-find/","excerpt":"find 命令find 命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。","text":"find 命令find 命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。 语法1find path -option [ -print ] [ -exec -ok command ] &#123;&#125; \\; 参数find 根据下列规则判断 path 和 expression，在命令列上第一个 - ( ) , ! 之前的部份为 path，之后的是 expression。如果 path 是空字串则使用目前路径，如果 expression 是空字串则使用 -print 为预设 expression。expression 中可使用的选项有二三十个之多，在此只介绍最常用的部份。 -mount, -xdev : 只检查和指定目录在同一个文件系统下的文件，避免列出其它文件系统中的文件 -amin n : 在过去 n 分钟内被读取过 -anewer file : 比文件 file 更晚被读取过的文件 -atime n : 在过去n天内被读取过的文件 -cmin n : 在过去 n 分钟内被修改过 -cnewer file :比文件 file 更新的文件 -ctime n : 在过去n天内被修改过的文件 -empty : 空的文件-gid n or -group name : gid 是 n 或是 group 名称是 name -ipath p, -path p : 路径名称符合 p 的文件，ipath 会忽略大小写 -name name, -iname name : 文件名称符合 name 的文件。iname 会忽略大小写 -size n : 文件大小 是 n 单位，b 代表 512 位元组的区块，c 表示字元数，k 表示 kilo bytes，w 是二个位元组。-type c : 文件类型是 c 的文件。d: 目录c: 字型装置文件b: 区块装置文件p: 具名贮列f: 一般文件l: 符号连结s: socket -pid n : process id 是 n 的文件你可以使用 ( ) 将运算式分隔，并使用下列运算。exp1 -and exp2! expr-not exprexp1 -or exp2exp1, exp2 实例将当前目录及其子目录下所有延伸档名是c的文件列出来1find . -name &quot;*.c&quot; 将当前目录其下子目录中所有一般文件列出1find . type f 将当前目录及其子目录下所有最近20天内更新过的文件列出1find . -ctime -20 查找/var/log目录中更改时间在7日以前的普通文件，并在删除之前询问他们1find /var/log -type f -mtime +7 -ok rm &#123;&#125; \\; 查找当前目录中文件属主具有读、写权限，并且文件所属组的用户和其他用户具有读权限的文件1find . -type f -perm 644 -exec ls -l &#123;&#125; \\; 为了查找系统中所有文件长度为0的普通文件，并列出他们的完整路径1find / -type f -size 0 -exec ls -l &#123;&#125; \\;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"find","slug":"Linux/文件管理/find","permalink":"http://yoursite.com/categories/Linux/文件管理/find/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"find","slug":"find","permalink":"http://yoursite.com/tags/find/"}]},{"title":"Linux-file","slug":"Linux-file","date":"2019-05-02T01:54:35.716Z","updated":"2019-02-02T13:24:18.000Z","comments":true,"path":"2019/05/02/Linux-file/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-file/","excerpt":"file 命令file 命令用于辨识文件类型。 语法1file [-bcLvz][-f &lt;名称文件&gt;][-m &lt;魔法数字文件&gt;...][文件或目录...]","text":"file 命令file 命令用于辨识文件类型。 语法1file [-bcLvz][-f &lt;名称文件&gt;][-m &lt;魔法数字文件&gt;...][文件或目录...] 参数 -b 列出辨识结果时，不显示文件名称。 -c 详细显示指令执行过程，便于排错或分析程序执行的情形。 -f&lt;名称文件&gt; 指定名称文件，其内容有一个或多个文件名称时，让file依序辨识这些文件，格式为每列一个文件名称。 -L 直接显示符号连接所指向的文件的类别。 -m&lt;魔法数字文件&gt; 指定魔法数字文件。 -v 显示版本信息。 -z 尝试去解读压缩文件的内容。 [文件或目录…] 要确定类型的文件列表，多个文件之间使用空格分开，可以使用shell通配符匹配多个文件。 实例显示文件类型1file 1.txt 显示符号链接的文件类型1file -L /var/spool/mail","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"file","slug":"Linux/文件管理/file","permalink":"http://yoursite.com/categories/Linux/文件管理/file/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"file","slug":"file","permalink":"http://yoursite.com/tags/file/"}]},{"title":"Linux-fgrep","slug":"Linux-fgrep","date":"2019-05-02T01:54:35.709Z","updated":"2019-02-10T14:21:46.000Z","comments":true,"path":"2019/05/02/Linux-fgrep/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fgrep/","excerpt":"fgrep 命令fgrep 命令相当于执行grep指令加上参数“- F”。fgrep 命令用于查找文件里符合条件的字符串。","text":"fgrep 命令fgrep 命令相当于执行grep指令加上参数“- F”。fgrep 命令用于查找文件里符合条件的字符串。 语法1fgrep [范本样式][文件或目录...]","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"fgrep","slug":"Linux/文档编辑/fgrep","permalink":"http://yoursite.com/categories/Linux/文档编辑/fgrep/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"fgrep","slug":"fgrep","permalink":"http://yoursite.com/tags/fgrep/"}]},{"title":"Linux-fdisk","slug":"Linux-fdisk","date":"2019-05-02T01:54:35.699Z","updated":"2019-02-19T13:48:56.000Z","comments":true,"path":"2019/05/02/Linux-fdisk/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fdisk/","excerpt":"fdisk 命令fdisk 命令是一个创建和维护分区表的程序，它兼容DOS类型的分区表、BSD或者SUN类型的磁盘列表。","text":"fdisk 命令fdisk 命令是一个创建和维护分区表的程序，它兼容DOS类型的分区表、BSD或者SUN类型的磁盘列表。 语法1fdisk [必要参数][选择参数] 参数必要参数： -l 列出素所有分区表 -u 与”-l”搭配使用，显示分区数目 选择参数： -s&lt;分区编号&gt; 指定分区 -v 版本信息 菜单操作说明 m ：显示菜单和帮助信息 a ：活动分区标记/引导分区 d ：删除分区 l ：显示分区类型 n ：新建分区 p ：显示分区信息 q ：退出不保存 t ：设置分区号 v ：进行分区检查 w ：保存修改 x ：扩展应用，高级功能 实例显示当前分区情况：123456789101112131415# fdisk -lDisk /dev/sda: 10.7 GB, 10737418240 bytes255 heads, 63 sectors/track, 1305 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytes Device Boot Start End Blocks Id System/dev/sda1 * 1 13 104391 83 Linux/dev/sda2 14 1305 10377990 8e Linux LVMDisk /dev/sdb: 5368 MB, 5368709120 bytes255 heads, 63 sectors/track, 652 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytesDisk /dev/sdb doesn&apos;t contain a valid partition table 显示SCSI硬盘的每个分区情况：123456789101112131415# fdisk -lu Disk /dev/sda: 10.7 GB, 10737418240 bytes255 heads, 63 sectors/track, 1305 cylinders, total 20971520 sectorsUnits = sectors of 1 * 512 = 512 bytes Device Boot Start End Blocks Id System/dev/sda1 * 63 208844 104391 83 Linux/dev/sda2 208845 20964824 10377990 8e Linux LVMDisk /dev/sdb: 5368 MB, 5368709120 bytes255 heads, 63 sectors/track, 652 cylinders, total 10485760 sectorsUnits = sectors of 1 * 512 = 512 bytesDisk /dev/sdb doesn&apos;t contain a valid partition table","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"fdisk","slug":"Linux/磁盘维护/fdisk","permalink":"http://yoursite.com/categories/Linux/磁盘维护/fdisk/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"fdisk","slug":"fdisk","permalink":"http://yoursite.com/tags/fdisk/"}]},{"title":"Linux-fdformat","slug":"Linux-fdformat","date":"2019-05-02T01:54:35.689Z","updated":"2019-02-19T12:18:38.000Z","comments":true,"path":"2019/05/02/Linux-fdformat/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fdformat/","excerpt":"fdformat 命令fdformat 命令用于指定的软碟机装置进行低阶格式化。","text":"fdformat 命令fdformat 命令用于指定的软碟机装置进行低阶格式化。使用这个指令对软碟格式化的时候，最好指定像是下面的装置： /dev/fd0d360 磁碟机 A: ，磁片为 360KB 磁碟 /dev/fd0h1440 磁碟机 A: ，磁片为 1.4MB 磁碟 /dev/fd1h1200 磁碟机 B: ，磁片为 1.2MB 磁碟 如果使用像是/dev/fd0之类的装置，如果里面的磁碟不是标准容量，格式化可能会失败。在这种情况之下，使用者可以用setfdprm指令先行指定必要参数。 语法1fdformat [-n] device 参数 -n 关闭确认功能。这个选项会关闭格式化之后的确认步骤。 实例将磁碟机 A 的磁片格式化成 1.4MB 的磁片。并且省略确认的步骤。1fdformat -n /dev/fd0h1440","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"fdformat","slug":"Linux/磁盘维护/fdformat","permalink":"http://yoursite.com/categories/Linux/磁盘维护/fdformat/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"fdformat","slug":"fdformat","permalink":"http://yoursite.com/tags/fdformat/"}]},{"title":"Linux-fbset","slug":"Linux-fbset","date":"2019-05-02T01:54:35.678Z","updated":"2019-03-01T12:48:11.000Z","comments":true,"path":"2019/05/02/Linux-fbset/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-fbset/","excerpt":"fbset 命令fbset 命令用于设置景框缓存区。","text":"fbset 命令fbset 命令用于设置景框缓存区。fbset指令可用于设置景框缓存区的大小，还能调整画面的分辨率，位置，高低宽窄，色彩深度，并可决定是否启动显卡之各项硬件特性。 语法1fbset [-ahinsvVx][-db &lt;信息文件&gt;][-fb &lt;外围设备代号&gt;][--test][显示模式] 参数 -a或–all 改变所有使用该设备之虚拟终端机的显示模式。 -db&lt;信息文件&gt; 指定显示模式的信息文件，预设值文件名称为fb.modes，存放在/etc目录下 -fb&lt;外围设备代号&gt; 指定用来做为输出景框缓冲区之外围设备，预设置为”/dev/fd0”。 -h或-help 在线帮助。 -i或–info 列出所有景框缓冲区之相关信息。 -ifb&lt;外围设备代号&gt; 使用另一个景框缓冲区外围设备之设置值。 -n或–now 马上改变显示模式。 -ofb&lt;外围设备代号&gt; 此参数效果和指定”-fb”参数相同。 -s或–show 列出目前显示模式之设置。 -v或–verbose 显示指令执行过程。 -V或–version 显示版本信息。 -x或–xfree86 使用XFree86兼容模式。 –test 仅做测试，并不改变现行的显示模式。 实例设置画面分辨率和桌面分辨率1# fbset -g 800 688 1024 768//画面分辨率为800*600 桌面分辨率为1024*768 启动硬件文本加速1# fbset -accel true // 启动硬件文本加速 启动广播功能1# fbset -bcast true //启动广播功能","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"fbset","slug":"Linux/系统设置/fbset","permalink":"http://yoursite.com/categories/Linux/系统设置/fbset/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"fbset","slug":"fbset","permalink":"http://yoursite.com/tags/fbset/"}]},{"title":"Linux-ext2ed","slug":"Linux-ext2ed","date":"2019-05-02T01:54:35.663Z","updated":"2019-02-19T11:57:51.000Z","comments":true,"path":"2019/05/02/Linux-ext2ed/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ext2ed/","excerpt":"ext2ed 命令ext2ed 命令是ext2文件系统编辑程序。ext2ed可直接处理硬盘分区上的数据，这指令只有Red Hat Linux才提供。","text":"ext2ed 命令ext2ed 命令是ext2文件系统编辑程序。ext2ed可直接处理硬盘分区上的数据，这指令只有Red Hat Linux才提供。 语法1ext2ed 一般指令 setdevice[设备名称] 指定要处理的设备。 disablewrite 将ext2ed设为只读的状态。 enablewrite 将ext2ed设为可读写的状态。 help[指令] 显示个别指令的帮助。 next 移至下一个单位，单位会依目前所在的模式而异。 prev 移至前一个单位，单位会依目前所在的模式而异。 pgup 移至下一页。 pgdn 移至上一页。 set 修改目前的数据，参数会依目前所在的模式而异。 writedata 在执行此指令之后，才会实际修改分区中的数据。 ext2进入3种模式的指令 super 进入main superblock,即Superblock模式。 group&lt;编号&gt; 进入指定的group，即Group模式。 cd&lt;目录或文件&gt; 在inode模式下，进入指定的目录或文件，即Inode模式。 Superblock模式 gocopy&lt;备份编号&gt; 进入指定的superblock备份。 setactivecopy 将目前所在的superblock，复制到main superblock。 Group模式 blockbitmap 显示目前groupo的区块图。 inode 进入目前group的第一个inode。 inodebitmap 显示目前group的inode二进制码。 Inode模式 dir 进入目录模式。 file 进入文件模式。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"ext2ed","slug":"Linux/磁盘维护/ext2ed","permalink":"http://yoursite.com/categories/Linux/磁盘维护/ext2ed/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"ext2ed","slug":"ext2ed","permalink":"http://yoursite.com/tags/ext2ed/"}]},{"title":"Linux-expr","slug":"Linux-expr","date":"2019-05-02T01:54:35.648Z","updated":"2019-02-10T16:29:07.000Z","comments":true,"path":"2019/05/02/Linux-expr/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-expr/","excerpt":"expr 命令expr 命令是一个手工命令行计数器，用于在UNIX/Linux下表达式变量的值，一般用于整数值，也可用于字符串。","text":"expr 命令expr 命令是一个手工命令行计数器，用于在UNIX/Linux下表达式变量的值，一般用于整数值，也可用于字符串。 语法1expr 表达式 参数 用空格隔开每个项； 用 / (反斜杠) 放在 shell 特定的字符前面； 对包含空格和其他特殊字符的字符串要用引号括起来 实例计算字串长度12&gt; expr length “this is a test” 14 抓取字串12&gt; expr substr “this is a test” 3 5is is 抓取第一个字符数字串出现的位置12&gt; expr index &quot;sarasara&quot; a 2 整数运算123456789101112&gt; expr 14 % 95&gt; expr 10 + 1020&gt; expr 1000 + 9001900&gt; expr 30 / 3 / 25&gt; expr 30 \\* 3 (使用乘号时，必须用反斜线屏蔽其特定含义。因为shell可能会误解显示星号的意义)90&gt; expr 30 * 3expr: Syntax error","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"expr","slug":"Linux/文档编辑/expr","permalink":"http://yoursite.com/categories/Linux/文档编辑/expr/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"expr","slug":"expr","permalink":"http://yoursite.com/tags/expr/"}]},{"title":"Linux-export","slug":"Linux-export","date":"2019-05-02T01:54:35.624Z","updated":"2019-03-01T06:10:20.000Z","comments":true,"path":"2019/05/02/Linux-export/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-export/","excerpt":"export 命令export 命令用于设置或显示环境变量。","text":"export 命令export 命令用于设置或显示环境变量。在shell中执行程序时，shell会提供一组环境变量。export可新增，修改或删除环境变量，供后续执行的程序使用。export的效力仅及于该次登录操作。 语法1export [-fnp][变量名称]=[变量设置值] 参数 -f 代表[变量名称]中为函数名称。 -n 删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中。 -p 列出所有的shell赋予程序的环境变量。 实例列出当前所有的环境变量1# export -p //列出当前的环境变量值 定义环境变量12# export MYENV //定义环境变量# export -p //列出当前的环境变量 定义环境变量赋值12# export MYENV=7 //定义环境变量并赋值# export -p","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"export","slug":"Linux/系统设置/export","permalink":"http://yoursite.com/categories/Linux/系统设置/export/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"export","slug":"export","permalink":"http://yoursite.com/tags/export/"}]},{"title":"Linux-exit","slug":"Linux-exit","date":"2019-05-02T01:54:35.618Z","updated":"2019-02-24T04:56:29.000Z","comments":true,"path":"2019/05/02/Linux-exit/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-exit/","excerpt":"exit 命令exit 命令用于退出目前的shell。","text":"exit 命令exit 命令用于退出目前的shell。执行exit可使shell以指定的状态值退出。若不设置状态值参数，则shell以预设值退出。状态值0代表执行成功，其他值代表执行失败。exit也可用在script，离开正在执行的script，回到shell。 语法1exit [状态值] 实例退出终端1exit","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"exit","slug":"Linux/系统管理/exit","permalink":"http://yoursite.com/categories/Linux/系统管理/exit/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"exit","slug":"exit","permalink":"http://yoursite.com/tags/exit/"}]},{"title":"Linux-ex","slug":"Linux-ex","date":"2019-05-02T01:54:35.612Z","updated":"2019-02-10T14:19:18.000Z","comments":true,"path":"2019/05/02/Linux-ex/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ex/","excerpt":"ex 命令ex 命令用于在EX模式下启动vim文本编辑器。ex执行结果如同vi-E,使用语法及参数可参照vi指令，如要从EX模式回到普通模式，则在vim中输入“:vi”或“:visual”指令即可。","text":"ex 命令ex 命令用于在EX模式下启动vim文本编辑器。ex执行结果如同vi-E,使用语法及参数可参照vi指令，如要从EX模式回到普通模式，则在vim中输入“:vi”或“:visual”指令即可。 语法1ex [选项][参数] 参数 +数字：从文件指定的数字行开始显示 -b：使用二进制模式编辑文件 -c 指令：编辑完第一个文件后执行指定的指令 -d ：编辑多个文件时，显示差异部分 -m ：不允许修改文件 -n ：不使用缓存 -oN：其中 N 为数字 -r ：列出缓存，并显示恢复信息 -R ：以只读的方式打开文件 -s ：不显示任何错误信息 -V ：显示指令的详细执行过程 –help ：显示帮助信息 –version ：显示版本信息 实例在ex 指令后输入文件名按回车键后，即可进入ex编辑模式，如编辑testfile文件，使用的命令格式如下：1ex testfile 输出信息如下：1&quot;testfile&quot; 5L, 95C “testfile”表示文件名，5L表示5 行，95 表示字节数进入ex 模式。输入”visual”回到正常模式它的操作与vim 中是一样的，此时如果在”:”后输入”visual”后按回车键，将进入到vi 指令全屏界面；如果输入”q”，则退出编辑器。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"ex","slug":"Linux/文档编辑/ex","permalink":"http://yoursite.com/categories/Linux/文档编辑/ex/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"ex","slug":"ex","permalink":"http://yoursite.com/tags/ex/"}]},{"title":"Linux-eval","slug":"Linux-eval","date":"2019-05-02T01:54:35.606Z","updated":"2019-03-01T05:47:10.000Z","comments":true,"path":"2019/05/02/Linux-eval/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-eval/","excerpt":"eval 命令eval 命令用于重新运算求出参数的内容。","text":"eval 命令eval 命令用于重新运算求出参数的内容。eval可读取一连串的参数，然后再以参数本身的特性来执行。 语法1eval [参数] 参数参数不限数目，彼此之间用分号分开。 实例连接多个命令1eval enable;ls","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"eval","slug":"Linux/系统设置/eval","permalink":"http://yoursite.com/categories/Linux/系统设置/eval/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"eval","slug":"eval","permalink":"http://yoursite.com/tags/eval/"}]},{"title":"Linux-enable","slug":"Linux-enable","date":"2019-05-02T01:54:35.600Z","updated":"2019-03-01T05:44:13.000Z","comments":true,"path":"2019/05/02/Linux-enable/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-enable/","excerpt":"enable 命令enable 命令用于启动或关闭shell内建指令。","text":"enable 命令enable 命令用于启动或关闭shell内建指令。若要执行的文件名称与shell内建指令相同，可用enable -n来关闭shell内建指令。若不加-n参数，enable可重新启动关闭的指令。 语法1enable [-n][-all][内建指令] 参数 -n 关闭指定的shell内建指令。 -all 显示shell所有关闭与启动的指令。 实例显示shell内置指令1enable","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"enable","slug":"Linux/系统设置/enable","permalink":"http://yoursite.com/categories/Linux/系统设置/enable/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"enable","slug":"enable","permalink":"http://yoursite.com/tags/enable/"}]},{"title":"Linux-eject","slug":"Linux-eject","date":"2019-05-02T01:54:35.594Z","updated":"2019-02-13T12:36:35.000Z","comments":true,"path":"2019/05/02/Linux-eject/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-eject/","excerpt":"eject 命令eject 命令用于退出抽取式设备。若设备已挂入，则eject会先将该设备卸除再退出。","text":"eject 命令eject 命令用于退出抽取式设备。若设备已挂入，则eject会先将该设备卸除再退出。 语法1eject [-dfhnqrstv][-a &lt;开关&gt;][-c &lt;光驱编号&gt;][设备] 参数 [设备] 设备可以是驱动程序名称，也可以是挂入点。 -a&lt;开关&gt;或–auto&lt;开关&gt; 控制设备的自动退出功能。 -c&lt;光驱编号&gt;或–changerslut&lt;光驱编号&gt; 选择光驱柜中的光驱。 -d或–default 显示预设的设备，而不是实际执行动作。 -f或–floppy 退出抽取式磁盘。 -h或–help 显示帮助。 -n或–noop 显示指定的设备。 -q或–tape 退出磁带。 -r或–cdrom 退出光盘。 -s或–scsi 以SCSI指令来退出设备。 -t或–trayclose 关闭光盘的托盘。 -v或–verbose 执行时，显示详细的说明。 实例12# eject //不加参数默认弹出# eject -r /dev/cdrom //指定设备","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"eject","slug":"Linux/磁盘管理/eject","permalink":"http://yoursite.com/categories/Linux/磁盘管理/eject/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"eject","slug":"eject","permalink":"http://yoursite.com/tags/eject/"}]},{"title":"Linux-egrep","slug":"Linux-egrep","date":"2019-05-02T01:54:35.587Z","updated":"2019-02-10T14:06:42.000Z","comments":true,"path":"2019/05/02/Linux-egrep/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-egrep/","excerpt":"egrep 命令egrep 命令用于在文件内查找指定的字符串。egrep执行的效果与“grep-E”相似，使用的语法及参数可参照grep指令，与grep的不同点在于解读字符串的方法。egrep是用extented regular expression语法来解读的，而grep则用basic regular expression语法来解读的，extend regular expression比 basic regular expression的表达更规范。","text":"egrep 命令egrep 命令用于在文件内查找指定的字符串。egrep执行的效果与“grep-E”相似，使用的语法及参数可参照grep指令，与grep的不同点在于解读字符串的方法。egrep是用extented regular expression语法来解读的，而grep则用basic regular expression语法来解读的，extend regular expression比 basic regular expression的表达更规范。 语法1egrep [范本模式] [文件或目录] 参数 [范本模式] ：查找的字符串规则。 [文件或目录] ：查找的目标文件或目录。 实例显示文件中符合条件的字符。例如，查找当前目录下所有文件中包含字符串“Linux”的文件1egrep Linux * 结果如下123456789101112131415$ egrep Linux * #查找当前目录下包含字符串“Linux”的文件 testfile:hello Linux! #以下五行为testfile 中包含Linux字符的行 testfile:Linux is a free Unix-type operating system. testfile:This is a Linux testfile! testfile:Linux testfile:Linux testfile1:helLinux! #以下两行为testfile1中含Linux字符的行 testfile1:This a Linux testfile! #以下两行为testfile_2 中包含Linux字符的行 testfile_2:Linux is a free unix-type opterating system. testfile_2:Linux test xx00:hello Linux! #xx00包含Linux字符的行 xx01:Linux is a free Unix-type operating system. #以下三行为xx01包含Linux字符的行 xx01:This is a Linux testfile! xx01:Linux","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"egrep","slug":"Linux/文档编辑/egrep","permalink":"http://yoursite.com/categories/Linux/文档编辑/egrep/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"egrep","slug":"egrep","permalink":"http://yoursite.com/tags/egrep/"}]},{"title":"Linux-efax","slug":"Linux-efax","date":"2019-05-02T01:54:35.494Z","updated":"2019-02-20T07:26:27.000Z","comments":true,"path":"2019/05/02/Linux-efax/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-efax/","excerpt":"efax 命令efax 命令用于收发传真。支持Class 1与Class 2的 调制解调器来收发传真。","text":"efax 命令efax 命令用于收发传真。支持Class 1与Class 2的 调制解调器来收发传真。 语法1efax [-sw][-a&lt;AT指令&gt;][-c&lt;调制解调器属性&gt;][-d&lt;驱动程序&gt;][-f&lt;字体文件&gt;][-g&lt;指令&gt;][-h&lt;传真标题字符串&gt;][-i&lt;AT指令&gt;][-j&lt;AT指令&gt;][-k&lt;AT指令&gt;][-l&lt;识别码&gt;][-o&lt;选项&gt;][-q&lt;错误次数&gt;][-r&lt;文件名&gt;][-v&lt;信息类型&gt;][-x&lt;UUCP锁定文件&gt;][-t&lt;电话号码&gt;&lt;传真文件&gt;] 参数 -a&lt;AT指令&gt; 以指定的AT指令来接电话。 -c&lt;调制解调器属性&gt; 设置本机调制解调器的属性。 -d&lt;驱动程序&gt; 指定调制解调器驱动程序。 -f&lt;字体文件&gt; 使用指定的字体文件来建立传真标题。 -g&lt;指令&gt; 若接到的电话为数据，则执行指定的指令。 -h&lt;传真标题字符串&gt; 指定字符串为每页最前端的标题。 -i&lt;AT指令&gt; 在调制解调器进入传真模式前，传送AT指令到调制解调器。 -j&lt;AT指令&gt; 在调制解调器进入传真模式后，传送AT指令到调制解调器。 -k&lt;AT指令&gt; 在调制解调器离开传真模式前，传送AT指令到调制解调器。 -l&lt;识别码&gt; 设置本机调制解调器的识别码。 -o&lt;选项&gt; 使用非标准调制解调器时设置相关选项。 -q&lt;错误次数&gt; 接收传真时，当每页发生错误次数超过指定的数目时，要求对方重发。 -r&lt;文件名&gt; 在接收传真时，将每页分别保存成文件。 -v&lt;信息类型&gt; 选择要印出的信息类型。 -w 不要接听电话，等待OK或CONNECT的信号。 -x&lt;UUCP锁定文件&gt; 使用UUCP格式的锁定文件来锁定调制解调器。 -t&lt;电话号码&gt;&lt;传真文件&gt; 以&lt;电话号码&gt;中的号码来拨号，并将&lt;传真文件&gt;传真出去。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"efax","slug":"Linux/网络通讯/efax","permalink":"http://yoursite.com/categories/Linux/网络通讯/efax/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"efax","slug":"efax","permalink":"http://yoursite.com/tags/efax/"}]},{"title":"Linux-edquota","slug":"Linux-edquota","date":"2019-05-02T01:54:35.488Z","updated":"2019-02-13T12:33:12.000Z","comments":true,"path":"2019/05/02/Linux-edquota/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-edquota/","excerpt":"edquota 命令edquota 命令用于编辑用户或群组的磁盘配额。edquota预设会使用vi来编辑使用者或群组的磁盘配合配置。","text":"edquota 命令edquota 命令用于编辑用户或群组的磁盘配额。edquota预设会使用vi来编辑使用者或群组的磁盘配合配置。 语法123edquota [-p &lt;源用户名称&gt;][-ug][用户或群组名称...]或edquota [-ug] -t 参数 -u 设置用户的磁盘配额，这是预设的参数。 -g 设置群组的磁盘配额。 -p&lt;源用户名称&gt; 将源用户的磁盘配额设置套用至其他用户或群组。 -t 设置宽限期限。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"edquota","slug":"Linux/磁盘管理/edquota","permalink":"http://yoursite.com/categories/Linux/磁盘管理/edquota/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"edquota","slug":"edquota","permalink":"http://yoursite.com/tags/edquota/"}]},{"title":"Linux-ed","slug":"Linux-ed","date":"2019-05-02T01:54:35.482Z","updated":"2019-02-10T13:57:19.000Z","comments":true,"path":"2019/05/02/Linux-ed/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ed/","excerpt":"ed 命令ed 命令是文本编辑器，用于文本编辑。ed是Linux中功能最简单的文本编辑程序，一次仅能编辑一行而非全屏幕方式的操作。ed命令并不是一个常用的命令，一般使用比较多的是vi命令。但ed文本编辑器对于编辑大文件或对于在shell脚本程序中进行文本编辑很有用。","text":"ed 命令ed 命令是文本编辑器，用于文本编辑。ed是Linux中功能最简单的文本编辑程序，一次仅能编辑一行而非全屏幕方式的操作。ed命令并不是一个常用的命令，一般使用比较多的是vi命令。但ed文本编辑器对于编辑大文件或对于在shell脚本程序中进行文本编辑很有用。 语法1ed [-][-Gs][-p&lt;字符串&gt;][--help][--version][文件] 参数 -G或–traditional 提供回兼容的功能。 -p&lt;字符串&gt; 指定ed在command mode的提示字符。 -s,-,–quiet或–silent 不执行开启文件时的检查功能。 –help 显示帮助。 –version 显示版本信息。 实例以下是一个Linux ed完整实例解析12345678910111213$ ed &lt;- 激活 ed 命令 a &lt;- 告诉 ed 我要编辑新文件 My name is Titan. &lt;- 输入第一行内容 And I love Perl very much. &lt;- 输入第二行内容 . &lt;- 返回 ed 的命令行状态 i &lt;- 告诉 ed 我要在最后一行之前插入内容 I am 24. &lt;- 将“I am 24.”插入“My name is Titan.”和“And I love Perl very much.”之间 . &lt;- 返回 ed 的命令行状态 c &lt;- 告诉 ed 我要替换最后一行输入内容 I am 24 years old. &lt;- 将“I am 24.”替换成“I am 24 years old.”（注意：这里替换的是最后输的内容） . &lt;- 返回 ed 的命令行状态 w readme.text &lt;- 将文件命名为“readme.text”并保存（注意：如果是编辑已经存在的文件，只需要敲入 w 即可） q &lt;- 完全退出 ed 编辑器 这是文件内容1234$ cat readme.text My name is Titan. I am 24 years old. And I love Perl vrey much.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"ed","slug":"Linux/文档编辑/ed","permalink":"http://yoursite.com/categories/Linux/文档编辑/ed/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"ed","slug":"ed","permalink":"http://yoursite.com/tags/ed/"}]},{"title":"Linux-e2fsck","slug":"Linux-e2fsck","date":"2019-05-02T01:54:35.475Z","updated":"2019-02-15T11:47:06.000Z","comments":true,"path":"2019/05/02/Linux-e2fsck/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-e2fsck/","excerpt":"e2fsck 命令e2fsck 命令用于检查使用Linux ext2档案系统的partition是否正常工作。","text":"e2fsck 命令e2fsck 命令用于检查使用Linux ext2档案系统的partition是否正常工作。 语法1e2fsck [-pacnydfvFV] [-b superblock] [-B blocksize] [-l|-L bad_blocks_file] [-C fd] device 参数 device ： 预备检查的硬盘 partition，例如：/dev/sda1 -a : 对 partition 做检查，若有问题便自动修复，等同 -p 的功能 -b : 设定存放 superblock 的位置 -B : 设定单位 block 的大小 -c : 检查该partition 是否有坏轨 -C file : 将检查的结果存到 file 中以便查看 -d : 列印 e2fsck 的 debug 结果 -f : 强制检查 -F : 在开始检查前，将device 的 buffer cache 清空，避免有错误发生 -l bad_blocks_file : 将有坏轨的block资料加到 bad_blocks_file 里面 -L bad_blocks_file : 设定坏轨的block资料存到 bad_blocks_file 里面，若无该档则自动产生 -n : 将档案系统以[唯读]方式开启 -p : 对 partition 做检查，若有问题便自动修复 -v : 详细显示模式 -V : 显示出目前 e2fsck 的版本 -y : 预先设定所有检查时的问题均回答[是] 实例检查 /dev/hda5 是否正常，如果有异常便自动修复，并且设定若有问答，均回答[是] :1e2fsck -a -y /dev/hda5 注意 :大部份使用 e2fsck 来检查硬盘 partition 的情况时，通常都是情形特殊，因此最好先将该 partition umount，然后再执行 e2fsck 来做检查，若是要非要检查 / 时，则请进入 singal user mode 再执行。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"e2fsck","slug":"Linux/磁盘维护/e2fsck","permalink":"http://yoursite.com/categories/Linux/磁盘维护/e2fsck/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"e2fsck","slug":"e2fsck","permalink":"http://yoursite.com/tags/e2fsck/"}]},{"title":"Linux-dumpkey","slug":"Linux-dumpkeys","date":"2019-05-02T01:54:35.468Z","updated":"2019-03-02T06:32:48.000Z","comments":true,"path":"2019/05/02/Linux-dumpkeys/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-dumpkeys/","excerpt":"dumpkey 命令dumpkey 命令用于显示键盘映射表，输出的内容可以被loadkeys命令识别,改变映射关系。","text":"dumpkey 命令dumpkey 命令用于显示键盘映射表，输出的内容可以被loadkeys命令识别,改变映射关系。 语法1dumpkey[选择参数] 参数 -i 驱动信息(键码范围、数量、状态键) -l 详细驱动信息 -n 十六进制显示 -f 显示全部信息 -1 分行显示按键组合 -S 设定输出格式(0：预设 1：完整 2：分行 3简单) –funcs-only 功能键信息 –keys-only 键组合信息 –compose-only 普通键信息 实例显示功能键信息1dumpkeys --funcs-only 显示驱动信息1dumpkeys -i","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"设备管理","slug":"Linux/设备管理","permalink":"http://yoursite.com/categories/Linux/设备管理/"},{"name":"dumpkey","slug":"Linux/设备管理/dumpkey","permalink":"http://yoursite.com/categories/Linux/设备管理/dumpkey/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"设备管理","slug":"设备管理","permalink":"http://yoursite.com/tags/设备管理/"},{"name":"dumpkey","slug":"dumpkey","permalink":"http://yoursite.com/tags/dumpkey/"}]},{"title":"Linux-dump","slug":"Linux-dump","date":"2019-05-02T01:54:35.461Z","updated":"2019-03-02T05:22:41.000Z","comments":true,"path":"2019/05/02/Linux-dump/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-dump/","excerpt":"dump 命令dump 命令用于备份文件系统。","text":"dump 命令dump 命令用于备份文件系统。dump为备份工具程序，可将目录或整个文件系统备份至指定的设备，或备份成一个大文件。 语法1dump [-cnu][-0123456789][-b &lt;区块大小&gt;][-B &lt;区块数目&gt;][-d &lt;密度&gt;][-f &lt;设备名称&gt;][-h &lt;层级&gt;][-s &lt;磁带长度&gt;][-T &lt;日期&gt;][目录或文件系统] 或 dump [-wW] 参数 -0123456789 备份的层级。 -b&lt;区块大小&gt; 指定区块的大小，单位为KB。 -B&lt;区块数目&gt; 指定备份卷册的区块数目。 -c 修改备份磁带预设的密度与容量。 -d&lt;密度&gt; 设置磁带的密度。单位为BPI。 -f&lt;设备名称&gt; 指定备份设备。 -h&lt;层级&gt; 当备份层级等于或大于指定的层级时，将不备份用户标示为”nodump”的文件。 -n 当备份工作需要管理员介入时，向所有”operator”群组中的使用者发出通知。 -s&lt;磁带长度&gt; 备份磁带的长度，单位为英尺。 -T&lt;日期&gt; 指定开始备份的时间与日期。 -u 备份完毕后，在/etc/dumpdates中记录备份的文件系统，层级，日期与时间等。 -w 与-W类似，但仅显示需要备份的文件。 -W 显示需要备份的文件及其最后一次备份的层级，时间与日期。 实例备份文件到磁带1# dump -0 -u /dev/tape /home/ 其中”-0”参数指定的是备份等级”-u”要求备份完毕之后将相应的信息存储到文件 /etc/dumpdates 留作记录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"dump","slug":"Linux/备份压缩/dump","permalink":"http://yoursite.com/categories/Linux/备份压缩/dump/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"dump","slug":"dump","permalink":"http://yoursite.com/tags/dump/"}]},{"title":"Linux-du","slug":"Linux-du","date":"2019-05-02T01:54:35.455Z","updated":"2019-02-13T12:30:07.000Z","comments":true,"path":"2019/05/02/Linux-du/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-du/","excerpt":"du 命令du 命令用于显示目录或文件的大小。du会显示指定的目录或文件所占用的磁盘空间。","text":"du 命令du 命令用于显示目录或文件的大小。du会显示指定的目录或文件所占用的磁盘空间。 语法1du [-abcDhHklmsSx][-L &lt;符号连接&gt;][-X &lt;文件&gt;][--block-size][--exclude=&lt;目录或文件&gt;][--max-depth=&lt;目录层数&gt;][--help][--version][目录或文件] 参数 -a或-all 显示目录中个别文件的大小。 -b或-bytes 显示目录或文件大小时，以byte为单位。 -c或–total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。 -D或–dereference-args 显示指定符号连接的源文件大小。 -h或–human-readable 以K，M，G为单位，提高信息的可读性。 -H或–si 与-h参数相同，但是K，M，G是以1000为换算单位。 -k或–kilobytes 以1024 bytes为单位。 -l或–count-links 重复计算硬件连接的文件。 -L&lt;符号连接&gt;或–dereference&lt;符号连接&gt; 显示选项中所指定符号连接的源文件大小。 -m或–megabytes 以1MB为单位。 -s或–summarize 仅显示总计。 -S或–separate-dirs 显示个别目录的大小时，并不含其子目录的大小。 -x或–one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。 -X&lt;文件&gt;或–exclude-from=&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。 –exclude=&lt;目录或文件&gt; 略过指定的目录或文件。 –max-depth=&lt;目录层数&gt; 超过指定层数的目录后，予以忽略。 –help 显示帮助。 –version 显示版本信息。 实例显示目录或文件所占的空间：12345678910111213# du608 ./test6308 ./test44 ./scf/lib4 ./scf/service/deploy/product4 ./scf/service/deploy/info12 ./scf/service/deploy16 ./scf/service4 ./scf/doc4 ./scf/bin32 ./scf8 ./test31288 . 只显示当前目录下面的子目录的目录大小和当前目录的总的大小，最下面的1288为当前目录的总大小显示指定文件所占的空间：12# du log2012.log 300 log2012.log 方便阅读的格式显示test目录所占空间情况：12345678910111213# du -h test608K test/test6308K test/test44.0K test/scf/lib4.0K test/scf/service/deploy/product4.0K test/scf/service/deploy/info12K test/scf/service/deploy16K test/scf/service4.0K test/scf/doc4.0K test/scf/bin32K test/scf8.0K test/test31.3M test","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"du","slug":"Linux/磁盘管理/du","permalink":"http://yoursite.com/categories/Linux/磁盘管理/du/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"du","slug":"du","permalink":"http://yoursite.com/tags/du/"}]},{"title":"Linux-dnsconf","slug":"Linux-dnsconf","date":"2019-05-02T01:54:35.448Z","updated":"2019-02-20T06:42:56.000Z","comments":true,"path":"2019/05/02/Linux-dnsconf/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-dnsconf/","excerpt":"dnsconf 命令dnsconf 命令用于设置DNS服务器组态。dnsconf实际上为Linuxconf的符号连接，提供图形界面的操作方式，以供管理员管理DNS服务器。","text":"dnsconf 命令dnsconf 命令用于设置DNS服务器组态。dnsconf实际上为Linuxconf的符号连接，提供图形界面的操作方式，以供管理员管理DNS服务器。 语法1dnsconf [--deldomain&lt;域&gt;][--delsecondary&lt;域&gt;][--newdomain&lt;域&gt;][--set&lt;主机&gt;&lt;IP&gt;][--setcname&lt;CNAME&gt;&lt;主机&gt;][--setmx&lt;域&gt;&lt;主机&gt;][--setns&lt;域&gt;&lt;主机&gt;][--unset&lt;主机&gt;] 参数 –deldomain&lt;域&gt; 删除域。 –delsecondary&lt;域&gt; 删除次级域。 –newdomain&lt;域&gt; 新增域。 –set&lt;主机&gt; 新增主机记录。 –setcname&lt;主机&gt; 设置。 –setmx&lt;域&gt;&lt;主机&gt; 指定域的邮件主机。 –setns&lt;域&gt;&lt;主机&gt; 指定域的DNS服务器。 –unset&lt;主机&gt; 删除DNS中某台主机的记录。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"dnsconf","slug":"Linux/网络通讯/dnsconf","permalink":"http://yoursite.com/categories/Linux/网络通讯/dnsconf/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"dnsconf","slug":"dnsconf","permalink":"http://yoursite.com/tags/dnsconf/"}]},{"title":"Linux-dmesg","slug":"Linux-dmesg","date":"2019-05-02T01:54:35.442Z","updated":"2019-03-01T05:31:35.000Z","comments":true,"path":"2019/05/02/Linux-dmesg/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-dmesg/","excerpt":"dmesg 命令dmesg 命令用于显示开机信息。","text":"dmesg 命令dmesg 命令用于显示开机信息。kernel会将开机信息存储在ring buffer中。您若是开机时来不及查看信息，可利用dmesg来查看。开机信息亦保存在/var/log目录中，名称为dmesg的文件里。 语法1dmesg [-cn][-s &lt;缓冲区大小&gt;] 参数 -c 显示信息后，清除ring buffer中的内容。 -s&lt;缓冲区大小&gt; 预设置为8196，刚好等于ring buffer的大小。 -n 设置记录信息的层级。 实例显示开机信息1dmesg |less 显示开机信息12345#pwd //查看当前所在目录/home/hnlinux/# dmesg &gt; boot.msg //将开机信息保存到 boot.msg文件中#ls //显示当前目录文件boot.msg","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"dmesg","slug":"Linux/系统设置/dmesg","permalink":"http://yoursite.com/categories/Linux/系统设置/dmesg/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"dmesg","slug":"dmesg","permalink":"http://yoursite.com/tags/dmesg/"}]},{"title":"Linux-dirs","slug":"Linux-dirs","date":"2019-05-02T01:54:35.435Z","updated":"2019-02-13T12:22:50.000Z","comments":true,"path":"2019/05/02/Linux-dirs/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-dirs/","excerpt":"dirs 命令dirs 命令用于显示目录记录。显示目录堆叠中的记录。","text":"dirs 命令dirs 命令用于显示目录记录。显示目录堆叠中的记录。 语法1dirs [+/-n -l] 参数 +n 显示从左边算起第n笔的目录。 -n 显示从右边算起第n笔的目录。 -l 显示目录完整的记录。 实例列出“/home/cc/Ruijie”里所有内容的详细信息：1dir -l /home/cc/Ruijie 输出内容为：1234567$ dir -l /home/cc/Ruijie总计2168-rwxr-xr-x 1 cc cc 112876 2008-06-26 libpcap.so.0.6.2 -rwxr-xr-x 1 cc cc 737192 2008-06-26 libstdc++.so.5 -rwxr-xr-x 1 cc cc1938 2004-04-23 readme.txt-rwxr-xr-x 1 cc cc 1350772 2005-08-31 xrgsu","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"dirs","slug":"Linux/磁盘管理/dirs","permalink":"http://yoursite.com/categories/Linux/磁盘管理/dirs/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"dirs","slug":"dirs","permalink":"http://yoursite.com/tags/dirs/"}]},{"title":"Linux-dircolors","slug":"Linux-dircolors","date":"2019-05-02T01:54:35.428Z","updated":"2019-02-28T14:00:24.000Z","comments":true,"path":"2019/05/02/Linux-dircolors/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-dircolors/","excerpt":"dircolors 命令dircolors 命令用于设置ls指令在显示目录或文件时所用的色彩。","text":"dircolors 命令dircolors 命令用于设置ls指令在显示目录或文件时所用的色彩。dircolors可根据[色彩配置文件]来设置LS_COLORS环境变量或是显示设置LS_COLORS环境变量的shell指令。 语法123dircolors [色彩配置文件]或dircolors [-bcp][--help][--version] 参数 -b或–sh或–bourne-shell 显示在Boume shell中，将LS_COLORS设为目前预设置的shell指令。 -c或–csh或–c-shell 显示在C shell中，将LS_COLORS设为目前预设置的shell指令。 -p或–print-database 显示预设置 -help 显示帮助。 -version 显示版本信息。 实例显示默认值12345678910# dircolors -p //显示默认值# Configuration file for dircolors, a utility to help you set the# LS_COLORS environment variable used by GNU ls with the --color option.# Copyright (C) 1996, 1999-2008# Free Software Foundation, Inc.# Copying and distribution of this file, with or without modification,# are permitted provided the copyright notice and this notice are preserved.# The keywords COLOR, OPTIONS, and EIGHTBIT (honored by the# slackware version of dircolors) are recognized but ignored.# Below, there should be one TERM entry for each termtype that is colorizable","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"dircolors","slug":"Linux/系统设置/dircolors","permalink":"http://yoursite.com/categories/Linux/系统设置/dircolors/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"dircolors","slug":"dircolors","permalink":"http://yoursite.com/tags/dircolors/"}]},{"title":"Linux-dip","slug":"Linux-dip","date":"2019-05-02T01:54:35.422Z","updated":"2019-02-20T05:44:02.000Z","comments":true,"path":"2019/05/02/Linux-dip/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-dip/","excerpt":"dip 命令dip 命令用于IP拨号连接。dip可控制调制解调器，以拨号IP的方式建立对外的双向连接。","text":"dip 命令dip 命令用于IP拨号连接。dip可控制调制解调器，以拨号IP的方式建立对外的双向连接。 语法1dip [-aikltv][-m&lt;MTU数目&gt;][-p&lt;协议&gt;][拨号script文件] 参数 -a 询问用户名称与密码。 -i 启动拨号服务器功能。 -k 删除执行中的dip程序。 -l 指定要删除的连线，必须配合-k参数一起使用。 -m&lt;MTU数目&gt; 设置最大传输单位，预设值为296。 -p&lt;协议&gt; 设置通信协议。 -t 进入dip的指令模式。 -v 执行时显示详细的信息。 实例建立拨号连接1dip -t","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"dip","slug":"Linux/网络通讯/dip","permalink":"http://yoursite.com/categories/Linux/网络通讯/dip/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"dip","slug":"dip","permalink":"http://yoursite.com/tags/dip/"}]},{"title":"Linux-diffstat","slug":"Linux-diffstat","date":"2019-05-02T01:54:35.415Z","updated":"2019-02-02T13:20:43.000Z","comments":true,"path":"2019/05/02/Linux-diffstat/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-diffstat/","excerpt":"diffstat 命令diffstat 命令根据diff的比较结果，显示统计数字。diffstat读取diff的输出结果，然后统计各文件的插入、删除、修改等差异计量。","text":"diffstat 命令diffstat 命令根据diff的比较结果，显示统计数字。diffstat读取diff的输出结果，然后统计各文件的插入、删除、修改等差异计量。 语法1diff [-wV][-n &lt;文件名长度&gt;][-p &lt;文件名长度&gt;] 参数 -n&lt;文件名长度&gt; 指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名。 -p&lt;文件名长度&gt; 与-n参数相同，但此处的&lt;文件名长度&gt;包括了文件的路径。 -w 指定输出时栏位的宽度。 -V 显示版本信息。 实例将目录”test1”和”test2”下的同名文件”testf.txt”使用diff指令进行比较。然后使用diffstat指令对结果进行统计显示1diff test1 test2 | diffstat #进行比较结果的统计显示","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"diffstat","slug":"Linux/文件管理/diffstat","permalink":"http://yoursite.com/categories/Linux/文件管理/diffstat/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"diffstat","slug":"diffstat","permalink":"http://yoursite.com/tags/diffstat/"}]},{"title":"Linux-diff","slug":"Linux-diff","date":"2019-05-02T01:54:35.409Z","updated":"2019-02-02T13:12:04.000Z","comments":true,"path":"2019/05/02/Linux-diff/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-diff/","excerpt":"diff 命令diff 命令是用于比较文件的差异。diff是以逐行的方式，比较文本文件的异同处。如果指定要比较目录，则diff会比较目录中相同文件名的文件，但不会比较其中子目录。","text":"diff 命令diff 命令是用于比较文件的差异。diff是以逐行的方式，比较文本文件的异同处。如果指定要比较目录，则diff会比较目录中相同文件名的文件，但不会比较其中子目录。 语法1diff [-abBcdefHilnNpPqrstTuvwy][-&lt;行数&gt;][-C &lt;行数&gt;][-D &lt;巨集名称&gt;][-I &lt;字符或字符串&gt;][-S &lt;文件&gt;][-W &lt;宽度&gt;][-x &lt;文件或目录&gt;][-X &lt;文件&gt;][--help][--left-column][--suppress-common-line][文件或目录1][文件或目录2] 参数 -&lt;行数&gt; 指定要显示多少行的文本。此参数必须与-c或-u参数一并使用。 -a或–text diff预设只会逐行比较文本文件。 -b或–ignore-space-change 不检查空格字符的不同。 -B或–ignore-blank-lines 不检查空白行。 -c 显示全部内文，并标出不同之处。 -C&lt;行数&gt;或–context&lt;行数&gt; 与执行”-c-&lt;行数&gt;”指令相同。 -d或–minimal 使用不同的演算法，以较小的单位来做比较。 -D&lt;巨集名称&gt;或ifdef&lt;巨集名称&gt; 此参数的输出格式可用于前置处理器巨集。 -e或–ed 此参数的输出格式可用于ed的script文件。 -f或-forward-ed 输出的格式类似ed的script文件，但按照原来文件的顺序来显示不同处。 -H或–speed-large-files 比较大文件时，可加快速度。 -l&lt;字符或字符串&gt;或–ignore-matching-lines&lt;字符或字符串&gt; 若两个文件在某几行有所不同，而这几行同时都包含了选项中指定的字符或字符串，则不显示这两个文件的差异。 -i或–ignore-case 不检查大小写的不同。 -l或–paginate 将结果交由pr程序来分页。 -n或–rcs 将比较结果以RCS的格式来显示。 -N或–new-file 在比较目录时，若文件A仅出现在某个目录中，预设会显示： Only in目录：文件A若使用-N参数，则diff会将文件A与一个空白的文件比较。 -p 若比较的文件为C语言的程序码文件时，显示差异所在的函数名称。 -P或–unidirectional-new-file 与-N类似，但只有当第二个目录包含了一个第一个目录所没有的文件时，才会将这个文件与空白的文件做比较。 -q或–brief 仅显示有无差异，不显示详细的信息。 -r或–recursive 比较子目录中的文件。 -s或–report-identical-files 若没有发现任何差异，仍然显示信息。 -S&lt;文件&gt;或–starting-file&lt;文件&gt; 在比较目录时，从指定的文件开始比较。 -t或–expand-tabs 在输出时，将tab字符展开。 -T或–initial-tab 在每行前面加上tab字符以便对齐。 -u,-U&lt;列数&gt;或–unified=&lt;列数&gt; 以合并的方式来显示文件内容的不同。 -v或–version 显示版本信息。 -w或–ignore-all-space 忽略全部的空格字符。 -W&lt;宽度&gt;或–width&lt;宽度&gt; 在使用-y参数时，指定栏宽。 -x&lt;文件名或目录&gt;或–exclude&lt;文件名或目录&gt; 不比较选项中所指定的文件或目录。 -X&lt;文件&gt;或–exclude-from&lt;文件&gt; 您可以将文件或目录类型存成文本文件，然后在=&lt;文件&gt;中指定此文本文件。 -y或–side-by-side 以并列的方式显示文件的异同之处。 –help 显示帮助。 –left-column 在使用-y参数时，若两个文件某一行内容相同，则仅在左侧的栏位显示该行内容。 –suppress-common-lines 在使用-y参数时，仅显示不同之处。 实例比较两个文件1diff 1.txt 2.txt 并排格式输出1diff 1.txt 2.txt -y -W 50","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"diff","slug":"Linux/文件管理/diff","permalink":"http://yoursite.com/categories/Linux/文件管理/diff/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"diff","slug":"diff","permalink":"http://yoursite.com/tags/diff/"}]},{"title":"Linux-df","slug":"Linux-df","date":"2019-05-02T01:54:35.403Z","updated":"2019-02-13T12:18:52.000Z","comments":true,"path":"2019/05/02/Linux-df/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-df/","excerpt":"df 命令df 命令用于显示目前在Linux系统上的文件系统的磁盘使用情况统计。","text":"df 命令df 命令用于显示目前在Linux系统上的文件系统的磁盘使用情况统计。 语法1df [选项]... [FILE]... 参数 文件-a, –all 包含所有的具有 0 Blocks 的文件系统 文件–block-size={SIZE} 使用 {SIZE} 大小的 Blocks 文件-h, –human-readable 使用人类可读的格式(预设值是不加这个选项的…) 文件-H, –si 很像 -h, 但是用 1000 为单位而不是用 1024 文件-i, –inodes 列出 inode 资讯，不列出已使用 block 文件-k, –kilobytes 就像是 –block-size=1024 文件-l, –local 限制列出的文件结构 文件-m, –megabytes 就像 –block-size=1048576 文件–no-sync 取得资讯前不 sync (预设值) 文件-P, –portability 使用 POSIX 输出格式 文件–sync 在取得资讯前 sync 文件-t, –type=TYPE 限制列出文件系统的 TYPE 文件-T, –print-type 显示文件系统的形式 文件-x, –exclude-type=TYPE 限制列出文件系统不要显示 TYPE 文件-v (忽略) 文件–help 显示这个帮手并且离开 文件–version 输出版本资讯并且离开 实例显示文件系统的磁盘使用情况统计：1234567# df Filesystem 1K-blocks Used Available Use% Mounted on /dev/sda6 29640780 4320704 23814388 16% / udev 1536756 4 1536752 1% /dev tmpfs 617620 888 616732 1% /run none 5120 0 5120 0% /run/lock none 1544044 156 1543888 1% /run/shm 第一列指定文件系统的名称，第二列指定一个特定的文件系统1K-块1K是1024字节为单位的总内存。用和可用列正在使用中，分别指定的内存量。使用列指定使用的内存的百分比，而最后一栏”安装在”指定的文件系统的挂载点。df也可以显示磁盘使用的文件系统信息：123# df test Filesystem 1K-blocks Used Available Use% Mounted on /dev/sda6 29640780 4320600 23814492 16% / 用一个-i选项的df命令的输出显示inode信息而非块使用量1234567df -i Filesystem Inodes IUsed IFree IUse% Mounted on /dev/sda6 1884160 261964 1622196 14% / udev 212748 560 212188 1% /dev tmpfs 216392 477 215915 1% /run none 216392 3 216389 1% /run/lock none 216392 8 216384 1% /run/shm 显示所有的信息12345678# df --total Filesystem 1K-blocks Used Available Use% Mounted on /dev/sda6 29640780 4320720 23814372 16% / udev 1536756 4 1536752 1% /dev tmpfs 617620 892 616728 1% /run none 5120 0 5120 0% /run/lock none 1544044 156 1543888 1% /run/shm total 33344320 4321772 27516860 14% 我们看到输出的末尾，包含一个额外的行，显示总的每一列。-h选项，通过它可以产生可读的格式df命令的输出：1234567# df -h Filesystem Size Used Avail Use% Mounted on /dev/sda6 29G 4.2G 23G 16% / udev 1.5G 4.0K 1.5G 1% /dev tmpfs 604M 892K 603M 1% /run none 5.0M 0 5.0M 0% /run/lock none 1.5G 156K 1.5G 1% /run/shm 我们可以看到输出显示的数字形式的’G’（千兆字节），”M”（兆字节）和”K”（千字节）。这使输出容易阅读和理解，从而使显示可读的。请注意，第二列的名称也发生了变化，为了使显示可读的”大小”。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"df","slug":"Linux/磁盘管理/df","permalink":"http://yoursite.com/categories/Linux/磁盘管理/df/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"df","slug":"df","permalink":"http://yoursite.com/tags/df/"}]},{"title":"Linux-depmod","slug":"Linux-depmod","date":"2019-05-02T01:54:35.396Z","updated":"2019-03-01T05:28:54.000Z","comments":true,"path":"2019/05/02/Linux-depmod/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-depmod/","excerpt":"depmod 命令depmod 命令用于分析可载入模块的相依性。","text":"depmod 命令depmod 命令用于分析可载入模块的相依性。depmod(depend module)可检测模块的相依性，供modprobe在安装模块时使用。 语法1depmod [-adeisvV][-m &lt;文件&gt;][--help][模块名称] 参数 -a或–all 分析所有可用的模块。 -d或debug 执行排错模式。 -e 输出无法参照的符号。 -i 不检查符号表的版本。 -m&lt;文件&gt;或system-map&lt;文件&gt; 使用指定的符号表文件。 -s或–system-log 在系统记录中记录错误。 -v或–verbose 执行时显示详细的信息。 -V或–version 显示版本信息。 –help 显示帮助。 实例显示可用模块1depmod -a","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"depmod","slug":"Linux/系统设置/depmod","permalink":"http://yoursite.com/categories/Linux/系统设置/depmod/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"depmod","slug":"depmod","permalink":"http://yoursite.com/tags/depmod/"}]},{"title":"Linux-declare","slug":"Linux-declare","date":"2019-05-02T01:54:35.390Z","updated":"2019-03-01T05:35:06.000Z","comments":true,"path":"2019/05/02/Linux-declare/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-declare/","excerpt":"declare 命令declare 命令用于声明shell变量。","text":"declare 命令declare 命令用于声明shell变量。declare为shell指令，在第一种语法中可用来声明变量并设置变量的属性([rix]即为变量的属性），在第二种语法中可用来显示shell函数。若不加上任何参数，则会显示全部的shell变量与函数(与执行set指令的效果相同)。 语法1declare [+/-][rxi][变量名称＝设置值] 或 declare -f 参数 +/- “-“可用来指定变量的属性，”+”则是取消变量所设的属性。 -f 仅显示函数。 r 将变量设置为只读。 x 指定的变量会成为环境变量，可供shell以外的程序来使用。 i [设置值]可以是数值，字符串或运算式。 实例声明整数类型变量1234# declare -i ab //声明整数型变量# ab=56 //改变变量内容# echo $ab //显示变量内容56 改变变量属性1234567891011# declare -i ef //声明整数型变量# ef=1 //变量赋值（整数值）# echo $ef //显示变量内容1# ef=&quot;wer&quot; //变量赋值（文本值）# echo $ef 0# declare +i ef //取消变量属性# ef=&quot;wer&quot;# echo $efwer 设置变量只读12345# declare -r ab //设置变量为只读# ab=88 //改变变量内容-bash: ab: 只读变量# echo $ab //显示变量内容56 声明数组变量123456# declare -a cd=&apos;([0]=&quot;a&quot; [1]=&quot;b&quot; [2]=&quot;c&quot;)&apos; //声明数组变量# echo $&#123;cd[1]&#125;b //显示变量内容# echo $&#123;cd[@]&#125; //显示整个数组变量内容a b c 显示函数123456789101112131415# declare -fcommand_not_found_handle () &#123; if [ -x /usr/lib/command-not-found ]; then /usr/bin/python /usr/lib/command-not-found -- $1; return $?; else if [ -x /usr/share/command-not-found ]; then /usr/bin/python /usr/share/command-not-found -- $1; return $?; else return 127; fi; fi&#125;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"declare","slug":"Linux/系统设置/declare","permalink":"http://yoursite.com/categories/Linux/系统设置/declare/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"declare","slug":"declare","permalink":"http://yoursite.com/tags/declare/"}]},{"title":"Linux-dd","slug":"Linux-dd","date":"2019-05-02T01:54:35.382Z","updated":"2019-02-15T11:41:40.000Z","comments":true,"path":"2019/05/02/Linux-dd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-dd/","excerpt":"dd 命令dd 命令用于读取、转换并输出数据。dd可从标准输入或文件中读取数据，根据指定的格式来转换数据，再输出到文件、设备或标准输出。","text":"dd 命令dd 命令用于读取、转换并输出数据。dd可从标准输入或文件中读取数据，根据指定的格式来转换数据，再输出到文件、设备或标准输出。 参数 if=文件名：输入文件名，缺省为标准输入。即指定源文件。 of=文件名：输出文件名，缺省为标准输出。即指定目的文件。 ibs=bytes：一次读入bytes个字节，即指定一个块大小为bytes个字节。 obs=bytes：一次输出bytes个字节，即指定一个块大小为bytes个字节。 bs=bytes：同时设置读入/输出的块大小为bytes个字节。 cbs=bytes：一次转换bytes个字节，即指定转换缓冲区大小。 skip=blocks：从输入文件开头跳过blocks个块后再开始复制。 seek=blocks：从输出文件开头跳过blocks个块后再开始复制。 count=blocks：仅拷贝blocks个块，块大小等于ibs指定的字节数。 conv=&lt;关键字&gt;，关键字可以有以下11种： conversion：用指定的参数转换文件。 ascii：转换ebcdic为ascii ebcdic：转换ascii为ebcdic ibm：转换ascii为alternate ebcdic block：把每一行转换为长度为cbs，不足部分用空格填充 unblock：使每一行的长度都为cbs，不足部分用空格填充 lcase：把大写字符转换为小写字符 ucase：把小写字符转换为大写字符 swab：交换输入的每对字节 noerror：出错时不停止 notrunc：不截短输出文件 sync：将每个输入块填充到ibs个字节，不足部分用空（NUL）字符补齐。 –help：显示帮助信息 –version：显示版本信息 实例在Linux下制作启动盘，命令如下：1dd if=boot.img of=/dev/fd0 bs=1440k 将testfile文件中的所有英文字母转换为大写，然后转成为testfile_1文件，在命令提示符中使用如下命令：1dd if=testfile_2 of=testfile_1 conv=ucase 其中testfile_2 的内容为：12345$ cat testfile_2 #testfile_2的内容 HELLO LINUX! Linux is a free unix-type opterating system. This is a linux testfile! Linux test 转换完成后，testfile_1 的内容如下：12345678$ dd if=testfile_2 of=testfile_1 conv=ucase #使用dd 命令，大小写转换记录了0+1 的读入 记录了0+1 的写出 95字节（95 B）已复制，0.000131446 秒，723 KB/s cmd@hdd-desktop:~$ cat testfile_1 #查看转换后的testfile_1文件内容 HELLO LINUX! LINUX IS A FREE UNIX-TYPE OPTERATING SYSTEM. THIS IS A LINUX TESTFILE! LINUX TEST #testfile_2中的所有字符都变成了大写字母 由标准输入设备读入字符串，并将字符串转换成大写后，再输出到标准输出设备，使用的命令为：1dd conv=ucase 输入以上命令后按回车键，输入字符串，再按回车键，按组合键Ctrl+D 退出，出现以下结果：123456$ dd conv=ucase Hello Linux! #输入字符串后按回车键 HELLO LINUX! #按组合键Ctrl+D退出，转换成大写结果 记录了0+1 的读入 记录了0+1 的写出 13字节（13 B）已复制，12.1558 秒，0.0 KB/s","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"dd","slug":"Linux/磁盘维护/dd","permalink":"http://yoursite.com/categories/Linux/磁盘维护/dd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"dd","slug":"dd","permalink":"http://yoursite.com/tags/dd/"}]},{"title":"Linux-date","slug":"Linux-date","date":"2019-05-02T01:54:35.376Z","updated":"2019-02-24T04:47:12.000Z","comments":true,"path":"2019/05/02/Linux-date/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-date/","excerpt":"date 命令date 命令可以用来显示或设定系统的指定的日期与时间，在显示方面，使用者可以设定欲显示的格式，格式设定为一个加号后接数个标记，其中可用的标记列表如下：","text":"date 命令date 命令可以用来显示或设定系统的指定的日期与时间，在显示方面，使用者可以设定欲显示的格式，格式设定为一个加号后接数个标记，其中可用的标记列表如下：时间方面： % : 印出 % %n : 下一行 %t : 跳格 %H : 小时(00..23) %I : 小时(01..12) %k : 小时(0..23) %l : 小时(1..12) %M : 分钟(00..59) %p : 显示本地 AM 或 PM %r : 直接显示时间 (12 小时制，格式为 hh:mm:ss [AP]M) %s : 从 1970 年 1 月 1 日 00:00:00 UTC 到目前为止的秒数 %S : 秒(00..61) %T : 直接显示时间 (24 小时制) %X : 相当于 %H:%M:%S %Z : 显示时区 日期方面： %a : 星期几 (Sun..Sat) %A : 星期几 (Sunday..Saturday) %b : 月份 (Jan..Dec) %B : 月份 (January..December) %c : 直接显示日期与时间 %d : 日 (01..31) %D : 直接显示日期 (mm/dd/yy) %h : 同 %b %j : 一年中的第几天 (001..366) %m : 月份 (01..12) %U : 一年中的第几周 (00..53) (以 Sunday 为一周的第一天的情形) %w : 一周中的第几天 (0..6) %W : 一年中的第几周 (00..53) (以 Monday 为一周的第一天的情形) %x : 直接显示日期 (mm/dd/yy) %y : 年份的最后两位数字 (00.99) %Y : 完整年份 (0000..9999) 若是不以加号作为开头，则表示要设定时间，而时间格式为 MMDDhhmm[[CC]YY][.ss]，其中 MM 为月份，DD 为日，hh 为小时，mm 为分钟，CC 为年份前两位数字，YY 为年份后两位数字，ss 为秒数。使用权限：所有使用者。当您不希望出现无意义的 0 时(比如说 1999/03/07)，则可以在标记中插入 - 符号，比如说 date ‘+%-H:%-M:%-S’ 会把时分秒中无意义的 0 给去掉，像是原本的 08:09:04 会变为 8:9:4。另外，只有取得权限者(比如说 root)才能设定系统时间。当您以 root 身分更改了系统时间之后，请记得以 clock -w 来将系统时间写入 CMOS 中，这样下次重新开机时系统时间才会持续抱持最新的正确值。 语法1date [-u] [-d datestr] [-s datestr] [--utc] [--universal] [--date=datestr] [--set=datestr] [--help] [--version] [+FORMAT] [MMDDhhmm[[CC]YY][.ss]] 参数 -d datestr : 显示 datestr 中所设定的时间 (非系统时间) –help : 显示辅助讯息 -s datestr : 将系统时间设为 datestr 中所设定的时间 -u : 显示目前的格林威治时间 –version : 显示版本编号 ##实例显示当前时间123456789101112# date三 5月 12 14:08:12 CST 2010# date &apos;+%c&apos; 2010年05月12日 星期三 14时09分02秒# date &apos;+%D&apos; //显示完整的时间05/12/10# date &apos;+%x&apos; //显示数字日期，年份两位数表示2010年05月12日# date &apos;+%T&apos; //显示日期，年份用四位数表示14:09:31# date &apos;+%X&apos; //显示24小时的格式14时09分39秒 按自己的格式输出12# date &apos;+usr_time: $1:%M %P -hey&apos;usr_time: $1:16 下午 -hey 显示时间后跳行，再显示目前日期1date &apos;+%T%n%D&apos; 显示月份与日数1date &apos;+%B %d&apos; 显示日期与设定日期（12：34：56）1date --date &apos;12:34:56&apos;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"date","slug":"Linux/系统管理/date","permalink":"http://yoursite.com/categories/Linux/系统管理/date/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"date","slug":"date","permalink":"http://yoursite.com/tags/date/"}]},{"title":"Linux-cut","slug":"Linux-cut","date":"2019-05-02T01:54:35.369Z","updated":"2019-02-03T15:49:11.000Z","comments":true,"path":"2019/05/02/Linux-cut/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cut/","excerpt":"cut 命令cut 命令用于显示每行从开头算起num1到num2的文字。","text":"cut 命令cut 命令用于显示每行从开头算起num1到num2的文字。 语法123cut [-bn] [file]cut [-c] [file]cut [-df] [file] 使用说明cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一。 参数 -b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。 -c ：以字符为单位进行分割。 -d ：自定义分隔符，默认为制表符。 -f ：与-d一起使用，指定显示哪个区域。 -n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的范围之内，该字符将被写出；否则，该字符将被排除","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"cut","slug":"Linux/文件管理/cut","permalink":"http://yoursite.com/categories/Linux/文件管理/cut/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"cut","slug":"cut","permalink":"http://yoursite.com/tags/cut/"}]},{"title":"Linux-cu","slug":"Linux-cu","date":"2019-05-02T01:54:35.362Z","updated":"2019-02-20T07:57:58.000Z","comments":true,"path":"2019/05/02/Linux-cu/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cu/","excerpt":"cu 命令cu 命令用于连接另一个主机。cu指令可连接 另一台主机，并采用类似拨号终端机的接口工作，也可执行简易的文件传输作业。","text":"cu 命令cu 命令用于连接另一个主机。cu指令可连接 另一台主机，并采用类似拨号终端机的接口工作，也可执行简易的文件传输作业。 语法1cu [dehnotv][-a&lt;通信端口&gt;][-c&lt;电话号码&gt;][-E&lt;脱离字符&gt;][-I&lt;设置文件&gt;][-l&lt;外围设备代号&gt;][-s&lt;连线速率&gt;][-x&lt;排错模式&gt;][-z&lt;系统主机&gt;][--help][-nostop][--parity=none][&lt;系统主机&gt;/&lt;电话号码&gt;] 参数 -a&lt;通信端口&gt;或-p&lt;通信端口&gt;或–port&lt;通信端口&gt; 使用指定的通信端口进行连线。 -c&lt;电话号码&gt;或–phone&lt;电话号码&gt; 拨打该电话号码。 -d 进入排错模式。 -e或–parity=even 使用双同位检查。 -E&lt;脱离字符&gt;或–escape&lt;脱离字符&gt; 设置脱离字符。 -h或–halfduple 使用半双工模式。 -I&lt;配置文件&gt;或–config&lt;配置文件&gt; 指定要使用的配置文件。 -l&lt;外围设备代号&gt;或–line&lt;外围设备代号&gt; 指定某项外围设备，作为连接的设备。 -n或–prompt 拨号时等待用户输入电话号码。 -o或–parity=odd 使用单同位检查。 -s&lt;连线速率&gt;或–speed&lt;连线速率&gt;或–baud&lt;连线速率&gt;或-&lt;连线速率&gt; 设置连线的速率，单位以鲍率计算。 -t或–maper 把CR字符置换成LF+CR字符。 -v或–version 显示版本信息。 -x&lt;排错模式&gt;或–debug&lt;排错模式&gt; 使用排错模式。 -z&lt;系统主机&gt;或–system&lt;系统主机&gt; 连接该系统主机。 –help 在线帮助。 –nostop 关闭Xon/Xoff软件流量控制。 –parity=none 不使用同位检查。 实例与远程主机连接1# cu -c 0102377765","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"cu","slug":"Linux/网络通讯/cu","permalink":"http://yoursite.com/categories/Linux/网络通讯/cu/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"cu","slug":"cu","permalink":"http://yoursite.com/tags/cu/"}]},{"title":"Linux-csplit","slug":"Linux-csplit","date":"2019-05-02T01:54:35.355Z","updated":"2019-02-10T13:49:12.000Z","comments":true,"path":"2019/05/02/Linux-csplit/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-csplit/","excerpt":"csplit命令csplit 命令用于分割文件。将文件依照指定的范本样式予以切割后，分别保存成名称为xx000,xx01,xx02…的文件。若给予的文件名称为“-”，则csplit指令会从标准输入设备读取数据。","text":"csplit命令csplit 命令用于分割文件。将文件依照指定的范本样式予以切割后，分别保存成名称为xx000,xx01,xx02…的文件。若给予的文件名称为“-”，则csplit指令会从标准输入设备读取数据。 语法12csplit [-kqsz][-b&lt;输出格式&gt;][-f&lt;输出字首字符串&gt;][-n&lt;输出文件名位数&gt;][--help][--version][文件][范本样式...] 参数 -b&lt;输出格式&gt;或–suffix-format=&lt;输出格式&gt; 预设的输出格式其文件名称为xx00,xx01…等，您可以通过改变&lt;输出格式&gt;来改变输出的文件名。 -f&lt;输出字首字符串&gt;或–prefix=&lt;输出字首字符串&gt; 预设的输出字首字符串其文件名为xx00,xx01…等，如果你指定输出字首字符串为”hello”，则输出的文件名称会变成hello00,hello01…等。 -k或–keep-files 保留文件，就算发生错误或中断执行，也不能删除已经输出保存的文件。 -n&lt;输出文件名位数&gt;或–digits=&lt;输出文件名位数&gt; 预设的输出文件名位数其文件名称为xx00,xx01…等，如果你指定输出文件名位数为”3”，则输出的文件名称会变成xx000,xx001…等。 -q或-s或–quiet或–silent 不显示指令执行过程。 -z或–elide-empty-files 删除长度为0 Byte文件。 –help 在线帮助。 –version 显示版本信息。 实例将文本文件testfile以第2行为分界点切割成两份1csplit testfile 2 testfile文件中的内容为12345$ cat testfile #查看testfile 文件内容 hello Linux! Linux is a free Unix-type operating system. This is a Linux testfile! Linux 使用csplit命令，输出结果为123$ csplit testfile 2 13 #xx00文件字符个数 76 #xx01文件字符个数 其中第1 行是第一个文件xx00的字符个数，同样，第2 行为第二个文件xx01的字符个数。同时，在testfile 的同目录下将生成两个文件，文件名分别为xx00、xx01，xx00 中的内容为：12$ cat xx00 #查看分割后的xx00文件内容 hello Linux! #testfile文件第1行的内容 xx01中的内容为1234$ cat xx01 #查看分割后的xx01文件内容 Linux is a free Unix-type operating system. #testfile文件第2行以后的内容 This is a Linux testfile! Linux","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"csplit","slug":"Linux/文档编辑/csplit","permalink":"http://yoursite.com/categories/Linux/文档编辑/csplit/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"csplit","slug":"csplit","permalink":"http://yoursite.com/tags/csplit/"}]},{"title":"Linux-crontab","slug":"Linux-crontab","date":"2019-05-02T01:54:35.349Z","updated":"2019-03-01T05:18:19.000Z","comments":true,"path":"2019/05/02/Linux-crontab/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-crontab/","excerpt":"crontab 命令crontab 命令用来定期执行程序的命令。","text":"crontab 命令crontab 命令用来定期执行程序的命令。 语法123crontab [ -u user ] file或crontab [ -u user ] &#123; -l | -r | -e &#125; 说明： crontab 是用来让使用者在固定时间或固定间隔执行程序之用，换句话说，也就是类似使用者的时程表。 -u user 是指设定指定 user 的时程表，这个前提是你必须要有其权限(比如说是 root)才能够指定他人的时程表。如果不使用 -u user 的话，就是表示设定自己的时程表。 参数 -e : 执行文字编辑器来设定时程表，内定的文字编辑器是 VI，如果你想用别的文字编辑器，则请先设定 VISUAL 环境变数来指定使用那个文字编辑器(比如说 setenv VISUAL joe) -r : 删除目前的时程表 -l : 列出目前的时程表 时程表的格式如下： 1f1 f2 f3 f4 f5 program 其中 f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天。program 表示要执行的程序。 当 f1 为 时表示每分钟都要执行 program，f2 为 时表示每小时都要执行程序，其馀类推 当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，其馀类推 当 f1 为 /n 时表示每 n 分钟个时间间隔执行一次，f2 为 /n 表示每 n 小时个时间间隔执行一次，其馀类推 当 f1 为 a, b, c,… 时表示第 a, b, c,… 分钟要执行，f2 为 a, b, c,… 时表示第 a, b, c…个小时要执行，其馀类推 使用者也可以将所有的设定先存放在文件中，用 crontab file 的方式来设定时程表。 实例每月每天每小时的第0分钟执行一次/bin/ls10 * * * * /bin/ls 在 12 月内, 每天的早上 6 点到 12 点，每隔 3 个小时 0 分钟执行一次 /usr/bin/backup10 6-12/3 * 12 * /usr/bin/backup 周一到周五每天下午 5:00 寄一封信给 alex@domain.name10 17 * * 1-5 mail -s &quot;hi&quot; alex@domain.name &lt; /tmp/maildata 每月每天的午夜 0 点 20 分, 2 点 20 分, 4 点 20 分….执行 echo “haha”120 0-23/2 * * * echo &quot;haha&quot; 下面再看看几个具体的例子：123456789101112130 */2 * * * /sbin/service httpd restart 意思是每两个小时重启一次apache 50 7 * * * /sbin/service sshd start 意思是每天7：50开启ssh服务 50 22 * * * /sbin/service sshd stop 意思是每天22：50关闭ssh服务 0 0 1,15 * * fsck /home 每月1号和15号检查/home 磁盘 1 * * * * /home/bruce/backup 每小时的第一分执行 /home/bruce/backup这个文件 00 03 * * 1-5 find /home &quot;*.xxx&quot; -mtime +4 -exec rm &#123;&#125; \\; 每周一至周五3点钟，在目录/home中，查找文件名为*.xxx的文件，并删除4天前的文件。30 6 */10 * * ls 意思是每月的1、11、21、31日是的6：30执行一次ls命令 注意：当程序在你所指定的时间执行后，系统会寄一封信给你，显示该程序执行的内容，若是你不希望收到这样的信，请在每一行空一格之后加上 &gt; /dev/null 2&gt;&amp;1 即可","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"crontab","slug":"Linux/系统设置/crontab","permalink":"http://yoursite.com/categories/Linux/系统设置/crontab/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"crontab","slug":"crontab","permalink":"http://yoursite.com/tags/crontab/"}]},{"title":"Linux-cpio","slug":"Linux-cpio","date":"2019-05-02T01:54:35.342Z","updated":"2019-03-02T05:12:59.000Z","comments":true,"path":"2019/05/02/Linux-cpio/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cpio/","excerpt":"cpio 命令cpio 命令用于备份文件。","text":"cpio 命令cpio 命令用于备份文件。cpio用来建立，还原备份档的工具程序，它可以加入，解开cpio或tra备份档内的文件。 语法1cpio [-0aABckLovV][-C &lt;输入/输出大小&gt;][-F &lt;备份档&gt;][-H &lt;备份格式&gt;][-O &lt;备份档&gt;][--block-size=&lt;区块大小&gt;][--force-local][--help][--quiet][--version] 或 cpio [-bBcdfikmnrsStuvV][-C &lt;输入/输出大小&gt;][-E &lt;范本文件&gt;][-F &lt;备份档&gt;][-H &lt;备份格式&gt;][-I &lt;备份档&gt;][-M &lt;回传信息&gt;][-R &lt;拥有者&gt;&lt;:/.&gt;&lt;所属群组&gt;][--block-size=&lt;区块大小&gt;][--force-local][--help][--no-absolute-filenames][--no-preserve-owner][--only-verify-crc][--quiet][--sparse][--version][范本样式...] 或 cpio [-0adkiLmpuvV][-R &lt;拥有者&gt;&lt;:/.&gt;&lt;所属群组&gt;][--help][--no-preserve-owner][--quiet][--sparse][--version][目的目] 参数 -0或–null 接受新增列控制字符，通常配合find指令的”-print0”参数使用。 -a或–reset-access-time 重新设置文件的存取时间。 -A或–append 附加到已存在的备份档中，且这个备份档必须存放在磁盘上，而不能放置于磁带机里。 -b或–swap 此参数的效果和同时指定”-sS”参数相同。 -B 将输入/输出的区块大小改成5210 Bytes。 -c 使用旧ASCII备份格式。 -C&lt;区块大小&gt;或–io-size=&lt;区块大小&gt; 设置输入/输出的区块大小，单位是Byte。 -d或–make-directories 如有需要cpio会自行建立目录。 -E&lt;范本文件&gt;或–pattern-file=&lt;范本文件&gt; 指定范本文件，其内含有一个或多个范本样式，让cpio解开符合范本条件的文件，格式为每列一个范本样式。 -f或–nonmatching 让cpio解开所有不符合范本条件的文件。 -F&lt;备份档&gt;或–file=&lt;备份档&gt; 指定备份档的名称，用来取代标准输入或输出，也能借此通过网络使用另一台主机的保存设备存取备份档。 -H&lt;备份格式&gt; 指定备份时欲使用的文件格式。 -i或–extract 执行copy-in模式，还原备份档。 -l&lt;备份档&gt; 指定备份档的名称，用来取代标准输入，也能借此通过网络使用另一台主机的保存设备读取备份档。 -k 此参数将忽略不予处理，仅负责解决cpio不同版本间的兼容性问题。 -l或–link 以硬连接的方式取代复制文件，可在copy-pass模式下运用。 -L或–dereference 不建立符号连接，直接复制该连接所指向的原始文件。 -m或preserve-modification-time 不去更换文件的更改时间。 -M&lt;回传信息&gt;或–message=&lt;回传信息&gt; 设置更换保存媒体的信息。 -n或–numeric-uid-gid 使用”-tv”参数列出备份档的内容时，若再加上参数”-n”，则会以用户识别码和群组识别码替代拥有者和群组名称列出文件清单。 -o或–create 执行copy-out模式，建立备份档。 -O&lt;备份档&gt; 指定备份档的名称，用来取代标准输出，也能借此通过网络 使用另一台主机的保存设备存放备份档。 -p或–pass-through 执行copy-pass模式，略过备份步骤，直接将文件复制到目的目录。 -r或–rename 当有文件名称需要更动时，采用互动模式。 -R&lt;拥有者&gt;&lt;:/.&gt;&lt;所属群组&gt;或 —-owner&lt;拥有者&gt;&lt;:/.&gt;&lt;所属群组&gt; 在copy-in模式还原备份档，或copy-pass模式复制文件时，可指定这些备份，复制的文件的拥有者与所属群组。 -s或–swap-bytes 交换每对字节的内容。 -S或–swap-halfwords 交换每半个字节的内容。 -t或–list 将输入的内容呈现出来。 -u或–unconditional 置换所有文件，不论日期时间的新旧与否，皆不予询问而直接覆盖。 -v或–verbose 详细显示指令的执行过程。 -V或–dot 执行指令时，在每个文件的执行程序前面加上”.”号 –block-size=&lt;区块大小&gt; 设置输入/输出的区块大小，假如设置数值为5，则区块大小为2500，若设置成10，则区块大小为5120，依次类推。 –force-local 强制将备份档存放在本地主机。 –help 在线帮助。 –no-absolute-filenames 使用相对路径建立文件名称。 –no-preserve-owner 不保留文件的拥有者，谁解开了备份档，那些文件就归谁所有。 -only-verify-crc 当备份档采用CRC备份格式时，可使用这项参数检查备份档内的每个文件是否正确无误。 –quiet 不显示复制了多少区块。 –sparse 倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。 –version 显示版本信息。 实例制作备份文件1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950[root@w3cschool.cc var]# ll //显示当前目录下的文件总用量 164drwxr-xr-x 2 root root 4096 2008-03-30 accountdrwxr-xr-x 9 root root 4096 2008-03-30 cachedrwxr-xr-x 3 netdump netdump 4096 2008-03-30 crashdrwxr-xr-x 3 root root 4096 2008-03-30 dbdrwxr-xr-x 3 root root 4096 2008-03-30 emptydrwxr-xr-x 3 root root 4096 2008-03-30 ftpdrwxrwx--T 2 root gdm 4096 4月 9 20:17 gdmdrwxr-xr-x 25 root root 4096 2008-03-30 libdrwxr-xr-x 2 root root 4096 2004-08-13 localdrwxrwxr-x 6 root lock 4096 5月 8 15:25 lockdrwxr-xr-x 14 root root 4096 5月 8 15:14 loglrwxrwxrwx 1 root root 10 2008-03-30 mail -&gt; spool/maildrwxr-xr-x 2 root root 4096 2004-08-13 nisdrwxr-xr-x 2 root root 4096 2004-08-13 optdrwxr-xr-x 2 root root 4096 2004-08-13 preservedrwxr-xr-x 16 root root 4096 5月 8 15:14 rundrwxr-xr-x 16 root root 4096 2008-03-30 spooldrwxrwxrwt 3 root root 4096 1月 13 18:53 tmpdrwx------ 2 root root 4096 2004-07-08 tuxdrwxr-xr-x 8 root root 4096 1月 19 19:39 wwwdrwxr-xr-x 3 root root 4096 2008-03-30 yp[root@w3cschool.cc var]# ls | cpio -o &gt;123.cpio //制作备份文件25 blocks[root@w3cschool.cc var]# ll //显示当前目录下的文件总用量 172-rw-r--r-- 1 root root 1024 5月 24 13:06 123.cpiodrwxr-xr-x 2 root root 4096 2008-03-30 accountdrwxr-xr-x 9 root root 4096 2008-03-30 cachedrwxr-xr-x 3 netdump netdump 4096 2008-03-30 crashdrwxr-xr-x 3 root root 4096 2008-03-30 dbdrwxr-xr-x 3 root root 4096 2008-03-30 emptydrwxr-xr-x 3 root root 4096 2008-03-30 ftpdrwxrwx--T 2 root gdm 4096 4月 9 20:17 gdmdrwxr-xr-x 25 root root 4096 2008-03-30 libdrwxr-xr-x 2 root root 4096 2004-08-13 localdrwxrwxr-x 6 root lock 4096 5月 8 15:25 lockdrwxr-xr-x 14 root root 4096 5月 8 15:14 loglrwxrwxrwx 1 root root 10 2008-03-30 mail -&gt; spool/maildrwxr-xr-x 2 root root 4096 2004-08-13 nisdrwxr-xr-x 2 root root 4096 2004-08-13 optdrwxr-xr-x 2 root root 4096 2004-08-13 preservedrwxr-xr-x 16 root root 4096 5月 8 15:14 rundrwxr-xr-x 16 root root 4096 2008-03-30 spooldrwxrwxrwt 3 root root 4096 1月 13 18:53 tmpdrwx------ 2 root root 4096 2004-07-08 tuxdrwxr-xr-x 8 root root 4096 1月 19 19:39 wwwdrwxr-xr-x 3 root root 4096 2008-03-30 yp[root@w3cschool.cc var]# 解压备份文件1[root@w3cschool.cc var]# ls | cpio -i -l 123.cpio 解压缩备份文件，并列出详细信息123456[root@w3cschool.cc var]# cpio -t -I 123.cpio 123.cpioa.cb.cc.c……省略部分结果 强制解压缩1[root@w3cschool.cc var]# cpio -i -u -I 123.cpio 解压缩时进行反向匹配，指定不解压的文件123[root@w3cschool.cc var]# cpio -i -I 123.cpio -f *.c //不解压.c结尾的文件 向指定的.cpio文件添加文件12345678[root@w3cschool.cc var]# ls123.cpio crash ftp local mail preserve tmp ypaccount db gdm lock nis run tuxcache empty lib log opt spool www[root@w3cschool.cc var]# cpio -o -O 123.cpio -Adb //用户输入 按下Ctrl+D结束输入1 block[root@w3cschool.cc var]# 从标准输入备份文件12345678[root@w3cschool.cc test]# ls a. a.c b.c c.c d.c f.c[root@w3cschool.cc test]# cpio -o &gt;123.cpioa.c //用户输入b.cc.c //按下Ctrl+D完成输入3 block[root@w3cschool.cc test]# 复制文件12345[root@w3cschool.cc test]# cpio -p /roota.c //用户输入b.cc.c //按下Ctrl+D完成输入3 block","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"cpio","slug":"Linux/备份压缩/cpio","permalink":"http://yoursite.com/categories/Linux/备份压缩/cpio/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"cpio","slug":"cpio","permalink":"http://yoursite.com/tags/cpio/"}]},{"title":"Linux-cp","slug":"Linux-cp","date":"2019-05-02T01:54:35.334Z","updated":"2019-02-07T11:30:01.000Z","comments":true,"path":"2019/05/02/Linux-cp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cp/","excerpt":"cp 命令cp 命令只要用于复制文件或目录。","text":"cp 命令cp 命令只要用于复制文件或目录。 语法123cp [options] source dest或cp [options] source... directory 参数 -a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。 -d：复制时保留链接。这里所说的链接相当于Windows系统中的快捷方式。 -f：覆盖已经存在的目标文件而不给出提示。 -i：与-f选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答”y”时目标文件将被覆盖。 -p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。 -r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。 -l：不复制文件，只是生成链接文件。 实例使用指令“cp”将当前目录“test/”下的所有文件复制到新目录“newtest”下1cp -r test/ newtest","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"cp","slug":"Linux/文件管理/cp","permalink":"http://yoursite.com/categories/Linux/文件管理/cp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"cp","slug":"cp","permalink":"http://yoursite.com/tags/cp/"}]},{"title":"Linux-compress","slug":"Linux-compress","date":"2019-05-02T01:54:35.328Z","updated":"2019-03-02T05:06:51.000Z","comments":true,"path":"2019/05/02/Linux-compress/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-compress/","excerpt":"compress 命令compress 命令是一个相当古老的 unix 档案压缩指令，压缩后的档案会加上一个 .Z 延伸档名以区别未压缩的档案，压缩后的档案可以以 uncompress 解压。若要将数个档案压成一个压缩档，必须先将档案 tar 起来再压缩。由于 gzip 可以产生更理想的压缩比例，一般人多已改用 gzip 为档案压缩工具。","text":"compress 命令compress 命令是一个相当古老的 unix 档案压缩指令，压缩后的档案会加上一个 .Z 延伸档名以区别未压缩的档案，压缩后的档案可以以 uncompress 解压。若要将数个档案压成一个压缩档，必须先将档案 tar 起来再压缩。由于 gzip 可以产生更理想的压缩比例，一般人多已改用 gzip 为档案压缩工具。 语法1compress [-dfvcV] [-b maxbits] [file ...] 参数 c 输出结果至标准输出设备（一般指荧幕） f 强迫写入档案，若目的档已经存在，则会被覆盖 (force) v 将程序执行的讯息印在荧幕上 (verbose) b 设定共同字串数的上限，以位元计算，可以设定的值为 9 至 16 bits 。由于值越大，能使用的共同字串就 越多，压缩比例就越大，所以一般使用预设值 16 bits (bits) d 将压缩档解压缩 V 列出版本讯息 实例压缩文件1compress abc.h 解压文件1compress -d abc.h.Z 按指定压缩比例进行压缩1compress -b 7 abc.h 强制压缩文件夹1compress -rf /home/abc/","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"compress","slug":"Linux/备份压缩/compress","permalink":"http://yoursite.com/categories/Linux/备份压缩/compress/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"compress","slug":"compress","permalink":"http://yoursite.com/tags/compress/"}]},{"title":"Linux-comm","slug":"Linux-comm","date":"2019-05-02T01:54:35.321Z","updated":"2019-02-10T13:37:10.000Z","comments":true,"path":"2019/05/02/Linux-comm/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-comm/","excerpt":"comm 命令comm 命令用于比较两个已排过序的文件。这项指令会一列列地比较两个已排序文件的差异，并将其结果显示出来，如果没有指定任何参数，则会把结果分成3行显示：第1行仅是在第1个文件中出现过的列，第2行是仅在第2个文件中出现过的列，第3行则是在第1与第2个文件里都出现过的列。若给予的文件名称为”-“，则comm指令会从标准输入设备读取数据。","text":"comm 命令comm 命令用于比较两个已排过序的文件。这项指令会一列列地比较两个已排序文件的差异，并将其结果显示出来，如果没有指定任何参数，则会把结果分成3行显示：第1行仅是在第1个文件中出现过的列，第2行是仅在第2个文件中出现过的列，第3行则是在第1与第2个文件里都出现过的列。若给予的文件名称为”-“，则comm指令会从标准输入设备读取数据。 语法1comm [-123][--help][--version][第1个文件][第2个文件] 参数 -1 不显示只在第1个文件里出现过的列。 -2 不显示只在第2个文件里出现过的列。 -3 不显示只在第1和第2个文件里出现过的列。 –help 在线帮助。 –version 显示版本信息。 实例aaa.txt与bbb.txt的文件内容如下123456789101112131415[root@localhost text]# cat aaa.txt aaa bbb ccc ddd eee 111 222[root@localhost text]# cat bbb.txtbbb ccc aaa hhh ttt jjj 执行comm 命令12345678910111213[root@localhost text]# comm aaa.txt bbb.txt aaa bbb ccc aaadddeee111222 hhh ttt jjj第一列 第二列 第三列 输出的第一列只包含在aaa.txt中出现的行，第二列包含在bbb.txt中出现的行，第三列包含在aaa.txt和bbb.txt中相同的行。各列是以制表符（\\t）作为定界符。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"comm","slug":"Linux/文档编辑/comm","permalink":"http://yoursite.com/categories/Linux/文档编辑/comm/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"comm","slug":"comm","permalink":"http://yoursite.com/tags/comm/"}]},{"title":"Linux-colrm","slug":"Linux-colrm","date":"2019-05-02T01:54:35.315Z","updated":"2019-02-10T13:27:35.000Z","comments":true,"path":"2019/05/02/Linux-colrm/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-colrm/","excerpt":"colrm 命令colrm 命令用于过滤掉指定的行。colrm 指令从标准输入设备读取书记，转而输出到标准输出设备。如果不加任何参数，则该指令不会过滤任何一行。","text":"colrm 命令colrm 命令用于过滤掉指定的行。colrm 指令从标准输入设备读取书记，转而输出到标准输出设备。如果不加任何参数，则该指令不会过滤任何一行。 语法1colrm [开始行数编号&lt;结束行数编号&gt;]&lt;/p&gt; 参数 开始行数编号： 指定要删除的列的起始编号 结束行数编号： 指定要删除的列的结束编号，有时候这个参数可以省略。 实例删除第4列到第六列的内容1colrm 4 6","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"colrm","slug":"Linux/文档编辑/colrm","permalink":"http://yoursite.com/categories/Linux/文档编辑/colrm/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"colrm","slug":"colrm","permalink":"http://yoursite.com/tags/colrm/"}]},{"title":"Linux-col","slug":"Linux-col","date":"2019-05-02T01:54:35.308Z","updated":"2019-02-09T10:23:33.000Z","comments":true,"path":"2019/05/02/Linux-col/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-col/","excerpt":"col 命令col 命令用于过滤控制字符。在许多UNIX说明文件里，都有RLF控制字符。当我们运用shell特殊字符”&gt;”和”&gt;&gt;”，把说明文件的内容输出成纯文本文件时，控制字符会变成乱码，col指令则能有效滤除这些控制字符。","text":"col 命令col 命令用于过滤控制字符。在许多UNIX说明文件里，都有RLF控制字符。当我们运用shell特殊字符”&gt;”和”&gt;&gt;”，把说明文件的内容输出成纯文本文件时，控制字符会变成乱码，col指令则能有效滤除这些控制字符。 语法1col [-bfx][-l&lt;缓冲区列数&gt;] 参数 -b 过滤掉所有的控制字符，包括RLF和HRLF。 -f 滤除RLF字符，但允许将HRLF字符呈现出来。 -x 以多个空格字符来表示跳格字符。 -l&lt;缓冲区列数&gt; 预设的内存缓冲区有128列，您可以自行指定缓冲区的大小。 实例将man命令的帮助文档保存为man_help，使用-b参数过滤所有控制字符1man man | col -b &gt; man_help 注:其中”|”用于建立管道，把man命令的输出结果转为col命令的输入数据。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文档编辑","slug":"Linux/文档编辑","permalink":"http://yoursite.com/categories/Linux/文档编辑/"},{"name":"col","slug":"Linux/文档编辑/col","permalink":"http://yoursite.com/categories/Linux/文档编辑/col/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文档编辑","slug":"文档编辑","permalink":"http://yoursite.com/tags/文档编辑/"},{"name":"col","slug":"col","permalink":"http://yoursite.com/tags/col/"}]},{"title":"Linux-cmp","slug":"Linux-cmp","date":"2019-05-02T01:54:35.302Z","updated":"2019-02-02T13:02:45.000Z","comments":true,"path":"2019/05/02/Linux-cmp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cmp/","excerpt":"cmp 命令cmp 命令是用于比较两个文件是否有差异。当相互比较的两个文件完全一样的时候，则该命令不会显示任何信息。若有差异，预设会标示出第一个不同之处的字符和列数编号。若不指定任何文件名称或是所给予的文件名为”-“,则cmp命令会从标准输入设备读取数据。","text":"cmp 命令cmp 命令是用于比较两个文件是否有差异。当相互比较的两个文件完全一样的时候，则该命令不会显示任何信息。若有差异，预设会标示出第一个不同之处的字符和列数编号。若不指定任何文件名称或是所给予的文件名为”-“,则cmp命令会从标准输入设备读取数据。 语法1cmp [-clsv][-i &lt;字符数目&gt;][--help][第一个文件][第二个文件] 参数 -c或–print-chars 除了标明差异处的十进制字码之外，一并显示该字符所对应字符。 -i&lt;字符数目&gt;或–ignore-initial=&lt;字符数目&gt; 指定一个数目。 -l或–verbose 标示出所有不一样的地方。 -s或–quiet或–silent 不显示错误信息。 -v或–version 显示版本信息。 –help 在线帮助。 实例比较两个文件是否相同1cmp textfile1.txt textfile2.txt","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"cmp","slug":"Linux/文件管理/cmp","permalink":"http://yoursite.com/categories/Linux/文件管理/cmp/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"cmp","slug":"cmp","permalink":"http://yoursite.com/tags/cmp/"}]},{"title":"Linux-clock","slug":"Linux-clock","date":"2019-05-02T01:54:35.295Z","updated":"2019-03-01T05:08:19.000Z","comments":true,"path":"2019/05/02/Linux-clock/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-clock/","excerpt":"clock 命令clock 命令用于调整RTC时间。","text":"clock 命令clock 命令用于调整RTC时间。RTC是电脑内建的硬件时间,执行这项指令可以显示现在时刻,调整硬件时钟的时间,将系统时间设成与硬件时钟的时间一致,或是把系统时间回存到硬件时钟。 语法1clock [--adjust][--debug][--directisa][--getepoch][--hctosys][--set --date=&quot;&lt;日期时间&gt;&quot;][--setepoch --epoch=&lt; &gt;][--show][--systohc][--test][--utc][--version] 参数 –adjust 第一次使用”–set”或”–systohc”参数设置硬件时钟，会在/etc目录下产生一个名称为adjtime的文件。当再次使用这两个参数调整硬件时钟，此文件便会记录两次调整间之差异，日后执行clock指令加上”–adjust”参数时，程序会自动根据记录文件的数值差异，计算出平均值，自动调整硬件时钟的时间。 –debug 详细显示指令执行过程，便于排错或了解程序执行的情形。 –directisa 告诉clock指令不要通过/dev/rtc设备文件，直接对硬件时钟进行存取。这个参数适用于仅有ISA总线结构的老式电脑。 –getepoch 把系统核心内的硬件时钟新时代数值，呈现到标准输出设备。 –hctosys Hardware Clock to System Time，把系统时间设成和硬件时钟一致。由于这个动作将会造成系统全面更新文件的存取时间，所以最好在系统启动时就执行它。 –set–date 设置硬件时钟的日期和时间。 –setepoch–epoch=&lt;年份&gt; 设置系统核心之硬件时钟的新时代数值，年份以四位树字表示。 –show 读取硬件时钟的时间，并将其呈现至标准输出设备。 –systohc System Time to Hardware Clock，将系统时间存回硬件时钟内。 –test 仅作测试，并不真的将时间写入硬件时钟或系统时间。 –utc 把硬件时钟上的时间时为CUT，有时也称为UTC或UCT。 –version 显示版本信息。 实例获取当前时间1clock 显示UTC时间1clock -utc","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"clock","slug":"Linux/系统设置/clock","permalink":"http://yoursite.com/categories/Linux/系统设置/clock/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"clock","slug":"clock","permalink":"http://yoursite.com/tags/clock/"}]},{"title":"Linux-clear","slug":"Linux-clear","date":"2019-05-02T01:54:35.289Z","updated":"2019-02-28T13:44:20.000Z","comments":true,"path":"2019/05/02/Linux-clear/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-clear/","excerpt":"clear 命令clear 命令用于清除屏幕。","text":"clear 命令clear 命令用于清除屏幕。 语法1clear 实例清屏1clear","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"clear","slug":"Linux/系统设置/clear","permalink":"http://yoursite.com/categories/Linux/系统设置/clear/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"clear","slug":"clear","permalink":"http://yoursite.com/tags/clear/"}]},{"title":"Linux-cksum","slug":"Linux-cksum","date":"2019-05-02T01:54:35.282Z","updated":"2019-02-02T12:55:46.000Z","comments":true,"path":"2019/05/02/Linux-cksum/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cksum/","excerpt":"cksum 命令cksum 命令是用与检查文件的CRC是否正确。确保文件从一个系统传输到另一个系统的过程中不被损坏。","text":"cksum 命令cksum 命令是用与检查文件的CRC是否正确。确保文件从一个系统传输到另一个系统的过程中不被损坏。 语法1cksum [--help][--version][文件...] 参数 –help：在线帮助。 –version：显示版本信息。 文件…:需要进行检查的文件路径 实例计算文件“textfile1”的完整性1cksum testfile1","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"cksum","slug":"Linux/文件管理/cksum","permalink":"http://yoursite.com/categories/Linux/文件管理/cksum/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"cksum","slug":"cksum","permalink":"http://yoursite.com/tags/cksum/"}]},{"title":"Linux-chsh","slug":"Linux-chsh","date":"2019-05-02T01:54:35.276Z","updated":"2019-02-27T04:49:14.000Z","comments":true,"path":"2019/05/02/Linux-chsh/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-chsh/","excerpt":"chsh 命令chsh 命令用于更改使用者shell设定。","text":"chsh 命令chsh 命令用于更改使用者shell设定。使用权限：所有使用者。 语法1shell&gt;&gt; chsh 实例通过-s参数改变当前的shell设置1chsh -s /bin/csh","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"chsh","slug":"Linux/系统管理/chsh","permalink":"http://yoursite.com/categories/Linux/系统管理/chsh/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"chsh","slug":"chsh","permalink":"http://yoursite.com/tags/chsh/"}]},{"title":"Linux-chroot","slug":"Linux-chroot","date":"2019-05-02T01:54:35.270Z","updated":"2019-02-28T14:24:14.000Z","comments":true,"path":"2019/05/02/Linux-chroot/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-chroot/","excerpt":"chroot 命令chroot 命令用于改变根目录。","text":"chroot 命令chroot 命令用于改变根目录。chroot(change root)命令把根目录换成指定的目的目录。 语法1chroot [--help][--version][目的目录][执行指令...] 参数 –help 在线帮助。 –version 显示版本信息。 实例改变根目录1# chroot /mnt/ls //改变根目录","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"chroot","slug":"Linux/系统设置/chroot","permalink":"http://yoursite.com/categories/Linux/系统设置/chroot/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"chroot","slug":"chroot","permalink":"http://yoursite.com/tags/chroot/"}]},{"title":"Linux-chown","slug":"Linux-chown","date":"2019-05-02T01:54:35.263Z","updated":"2019-02-02T12:45:32.000Z","comments":true,"path":"2019/05/02/Linux-chown/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-chown/","excerpt":"chown 命令chown 命令将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户ID；组可以是组名或者组ID；文件是以空格分开的要改变权限的文件列表，支持通配符。一般来说，这个指令只有是由系统管理者（root）所使用，一般使用者没有权限可以去改变别人的文件拥有者，也没有权限将自己的文件拥有者改为别人。只有系统管理者（root）才有这样的权限。使用权限：root","text":"chown 命令chown 命令将指定文件的拥有者改为指定的用户或组，用户可以是用户名或者用户ID；组可以是组名或者组ID；文件是以空格分开的要改变权限的文件列表，支持通配符。一般来说，这个指令只有是由系统管理者（root）所使用，一般使用者没有权限可以去改变别人的文件拥有者，也没有权限将自己的文件拥有者改为别人。只有系统管理者（root）才有这样的权限。使用权限：root 语法1chown [-cfhvR] [--help] [--version] user[:group] file... 参数 user : 新的文件拥有者的使用者 ID group : 新的文件拥有者的使用者组(group) -c : 显示更改的部分的信息 -f : 忽略错误信息 -h :修复符号链接 -v : 显示详细的处理信息 -R : 处理指定目录以及其子目录下的所有文件 –help : 显示辅助说明 –version : 显示版本 实例将文件file1.txt的拥有者设为runoob群体的使用者runoobgroup1chown runoob:runoobgroup file1.txt 将目录下的所有文件与子目录的拥有者皆设为runoob，群体使用者runoobgroup1chown -R runoob:runoobgroup *","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"chown","slug":"Linux/文件管理/chown","permalink":"http://yoursite.com/categories/Linux/文件管理/chown/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"chown","slug":"chown","permalink":"http://yoursite.com/tags/chown/"}]},{"title":"Linux-chmod","slug":"Linux-chmod","date":"2019-05-02T01:54:35.256Z","updated":"2019-01-31T13:21:46.000Z","comments":true,"path":"2019/05/02/Linux-chmod/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-chmod/","excerpt":"chmod 命令Linux/UNIX 的文件调用权限分为三级：文件拥有者、群组、其他。可以使用 chmod 命令控制文件如何被他人所调用。","text":"chmod 命令Linux/UNIX 的文件调用权限分为三级：文件拥有者、群组、其他。可以使用 chmod 命令控制文件如何被他人所调用。 语法1chmod [-cfvR] [--help] [--version] mode file... 参数说明mode：权限设定字串，格式如下：1[ugoa...][[+-=][rwxX]...][,...] 其中： u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。 表示增加权限、- 表示取消权限、= 表示唯一设定权限。 r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。 其他参数说明： -c : 若该文件权限确实已经更改，才显示其更改动作 -f : 若该文件权限无法被更改也不要显示错误讯息 -v : 显示权限变更的详细资料 -R : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递回的方式逐个变更) –help : 显示辅助说明 –version : 显示版本 实例将文件 file1.txt 设为所有人皆可读取 :1chmod ugo+r file1.txt 将文件 file1.txt 设为所有人皆可读取 :1chmod a+r file1.txt 将文件 file1.txt 与 file2.txt 设为该文件拥有者，与其所属同一个群体者可写入，但其他以外的人则不可写入 :1chmod ug+w,o-w file1.txt file2.txt 将 ex1.py 设定为只有该文件拥有者可以执行 :1chmod u+x ex1.py 将目前目录下的所有文件与子目录皆设为任何人可读取 :1chmod -R a+r * 此外chmod也可以用数字来表示权限如 :1chmod 777 file 语法为：1chmod abc file 其中a,b,c各为一个数字，分别表示User、Group、及Other的权限。r=4，w=2，x=1 若要rwx属性则4+2+1=7； 若要rw-属性则4+2=6； 若要r-x属性则4+1=5。 1chmod a=rwx file 和1chmod 777 file 效果相同1chmod ug=rwx,o=x file 和1chmod 771 file 效果相同 若用chmod 4755 filename可使此程序具有root的权限","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"chmod","slug":"Linux/文件管理/chmod","permalink":"http://yoursite.com/categories/Linux/文件管理/chmod/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"chmod","slug":"chmod","permalink":"http://yoursite.com/tags/chmod/"}]},{"title":"Linux-chkconfig","slug":"Linux-chkconfig","date":"2019-05-02T01:54:35.250Z","updated":"2019-03-01T12:12:33.000Z","comments":true,"path":"2019/05/02/Linux-chkconfig/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-chkconfig/","excerpt":"chkconfig 命令chkconfig 命令用于检查、设置系统的各种服务。","text":"chkconfig 命令chkconfig 命令用于检查、设置系统的各种服务。这是Red Hat公司遵循GPL规则所开发的程序，它可查询操作系统在每一个执行等级中会执行哪些系统服务，其中包括各类常驻服务。 语法1chkconfig [--add][--del][--list][系统服务] 或 chkconfig [--level &lt;等级代号&gt;][系统服务][on/off/reset] 参数 –add 增加所指定的系统服务，让chkconfig指令得以管理它，并同时在系统启动的叙述文件内增加相关数据。 –del 删除所指定的系统服务，不再由chkconfig指令管理，并同时在系统启动的叙述文件内删除相关数据。 –level&lt;等级代号&gt; 指定读系统服务要在哪一个执行等级中开启或关毕。 实例列出chkconfig所知道的所有命令1# chkconfig -list 开启服务12# chkconfig telnet on //开启Telnet服务# chkconfig -list //列出chkconfig所知道的所有的服务的情况 关闭服务12# chkconfig telnet off //关闭Telnet服务# chkconfig -list //列出chkconfig所知道的所有的服务的情况","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"chkconfig","slug":"Linux/系统设置/chkconfig","permalink":"http://yoursite.com/categories/Linux/系统设置/chkconfig/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"chkconfig","slug":"chkconfig","permalink":"http://yoursite.com/tags/chkconfig/"}]},{"title":"Linux-chgrep","slug":"Linux-chgrp","date":"2019-05-02T01:54:35.243Z","updated":"2019-01-31T13:09:26.000Z","comments":true,"path":"2019/05/02/Linux-chgrp/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-chgrp/","excerpt":"chgrep 命令chgrep 命令用于变更文件或目录的所属群组。在UNIX系统家族里，文件或目录权限的掌控以拥有者及所属群组来管理。可以使用chgrep命令去变更文件与目录的所属群组，设置方式采用群组名称或群组识别码皆可。","text":"chgrep 命令chgrep 命令用于变更文件或目录的所属群组。在UNIX系统家族里，文件或目录权限的掌控以拥有者及所属群组来管理。可以使用chgrep命令去变更文件与目录的所属群组，设置方式采用群组名称或群组识别码皆可。 语法1chgrp [-cfhRv][--help][--version][所属群组][文件或目录...] 或 chgrp [-cfhRv][--help][--reference=&lt;参考文件或目录&gt;][--version][文件或目录...] 参数说明 -c或–changes 效果类似”-v”参数，但仅回报更改的部分。 -f或–quiet或–silent 不显示错误信息。 -h或–no-dereference 只对符号连接的文件作修改，而不更动其他任何相关文件。 -R或–recursive 递归处理，将指定目录下的所有文件及子目录一并处理。 -v或–verbose 显示指令执行过程。 –help 在线帮助。 –reference=&lt;参考文件或目录&gt; 把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同。 –version 显示版本信息。 实例 改变文件的群组属性1chgrp -v bin log2012.log 根据指定文件改变文件的群组属性1chgrp --reference=log2012.log log2013.log","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"chgrep","slug":"Linux/文件管理/chgrep","permalink":"http://yoursite.com/categories/Linux/文件管理/chgrep/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"chgrep","slug":"chgrep","permalink":"http://yoursite.com/tags/chgrep/"}]},{"title":"Linux-chfn","slug":"Linux-chfn","date":"2019-05-02T01:54:35.237Z","updated":"2019-02-24T03:19:25.000Z","comments":true,"path":"2019/05/02/Linux-chfn/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-chfn/","excerpt":"chfn 命令chfn 命令提供使用者更改个人资讯，用于finger and mail username。使用权限：所有使用者。","text":"chfn 命令chfn 命令提供使用者更改个人资讯，用于finger and mail username。使用权限：所有使用者。 语法1shell&gt;&gt; chfn 实例改变finger信息12345678# chfnChanging finger information for root.Name [root]: hnlinuxOffice []: hnOffice Phone []: 888888Home Phone []: 9999999Finger information changed. 改变账号真实姓名：123# chfn -f hnunixChanging finger information for root.Finger information changed.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"chfn","slug":"Linux/系统管理/chfn","permalink":"http://yoursite.com/categories/Linux/系统管理/chfn/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"chfn","slug":"chfn","permalink":"http://yoursite.com/tags/chfn/"}]},{"title":"Linux-cfdisk","slug":"Linux-cfdisk","date":"2019-05-02T01:54:35.230Z","updated":"2019-02-15T11:28:02.000Z","comments":true,"path":"2019/05/02/Linux-cfdisk/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cfdisk/","excerpt":"cfdisk 命令cfdisk 命令用于磁盘分区。cfdisk 是用来磁盘分区的程序，他十分类似DOS的fdisk，具有互动式操作界面而非传统fdisk的问答式界面，您可以轻易地使用方向键来操控分区操作。","text":"cfdisk 命令cfdisk 命令用于磁盘分区。cfdisk 是用来磁盘分区的程序，他十分类似DOS的fdisk，具有互动式操作界面而非传统fdisk的问答式界面，您可以轻易地使用方向键来操控分区操作。 语法1cfdisk [-avz][-c &lt;柱面数目&gt;-h &lt;磁头数目&gt;-s &lt;盘区数目&gt;][-P &lt;r,s,t&gt;][外围设备代号] 参数 -a 在程序里不用反白代表选取，而以箭头表示。 -c&lt;柱面数目&gt; 忽略BIOS的数值，直接指定磁盘的柱面数目。 -h&lt;磁头数目&gt; 忽略BIOS的数值，直接指定磁盘的磁头数目。 -P &lt; r,s,t &gt; 显示分区表的内容，附加参数”r”会显示整个分区表的详细资料，附加参数”s”会依照磁区的顺序显示相关信息，附加参数”t”则会以磁头，磁区，柱面的方式来显示资料。 -s&lt;磁区数目&gt; 忽略BIOS的数值，直接指定磁盘的磁区数目。 -v 显示版本信息。 -z 不读取现有的分区，直接当作没有分区的新磁盘使用。 实例进行磁盘分区1cfdisk 进行磁盘分区，使用箭头进行操作，而不使用反白表示：1cfdisk -a 进行磁盘分区，使用箭头进行操作，而不使用反白表示：1cfdisk -s 3","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"cfdisk","slug":"Linux/磁盘维护/cfdisk","permalink":"http://yoursite.com/categories/Linux/磁盘维护/cfdisk/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"cfdisk","slug":"cfdisk","permalink":"http://yoursite.com/tags/cfdisk/"}]},{"title":"Linux-cd","slug":"Linux-cd","date":"2019-05-02T01:54:35.223Z","updated":"2019-02-13T12:12:24.000Z","comments":true,"path":"2019/05/02/Linux-cd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cd/","excerpt":"cd 命令cd 命令用于切换当前工作目录值dirName（目录参数）。其中dirName表示法可谓绝对路径或相对路径。若目录名称省略，则变换至使用者的home目录（也就是刚login时所在的目录）。另外，“~”也表示为home目录的意思，“.”则是表示目前所在的目录，“..”则表示目前目录位置的上一层目录。","text":"cd 命令cd 命令用于切换当前工作目录值dirName（目录参数）。其中dirName表示法可谓绝对路径或相对路径。若目录名称省略，则变换至使用者的home目录（也就是刚login时所在的目录）。另外，“~”也表示为home目录的意思，“.”则是表示目前所在的目录，“..”则表示目前目录位置的上一层目录。 语法1cd [dirName] dirName：要切换的目标目录。 实例跳到/usr/bin1cd /usr/bin 跳到自己的home目录1cd ~ 跳到目前目录的上上两层1cd ../..","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘管理","slug":"Linux/磁盘管理","permalink":"http://yoursite.com/categories/Linux/磁盘管理/"},{"name":"cd","slug":"Linux/磁盘管理/cd","permalink":"http://yoursite.com/categories/Linux/磁盘管理/cd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘管理","slug":"磁盘管理","permalink":"http://yoursite.com/tags/磁盘管理/"},{"name":"cd","slug":"cd","permalink":"http://yoursite.com/tags/cd/"}]},{"title":"Linux-cat","slug":"Linux-cat","date":"2019-05-02T01:54:35.216Z","updated":"2019-01-29T13:58:04.000Z","comments":true,"path":"2019/05/02/Linux-cat/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-cat/","excerpt":"cat 命令cat命令用于连接文件并打印到标准输出设备上。 使用权限所有使用者","text":"cat 命令cat命令用于连接文件并打印到标准输出设备上。 使用权限所有使用者 语法格式1cat [-AbeEnstTuv] [--help] [--version] fileName 参数说明 -n 或 –number：由 1 开始对所有输出的行数编号。 -b 或 –number-nonblank：和 -n 相似，只不过对于空白行不编号。 -s 或 –squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行。 -v 或 –show-nonprinting：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外。 -E 或 –show-ends : 在每行结束处显示 $。 -T 或 –show-tabs: 将 TAB 字符显示为 ^I。 -A, –show-all：等价于 -vET。 -e：等价于”-vE”选项； -t：等价于”-vT”选项； 实例将 textfile1 的内容追加到textfile2 中1cat textfile1 &gt;&gt; textfile2","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"cat","slug":"Linux/文件管理/cat","permalink":"http://yoursite.com/categories/Linux/文件管理/cat/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"cat","slug":"cat","permalink":"http://yoursite.com/tags/cat/"}]},{"title":"Linux-bzip2recover","slug":"Linux-bzip2recover","date":"2019-05-02T01:54:35.209Z","updated":"2019-03-02T04:54:24.000Z","comments":true,"path":"2019/05/02/Linux-bzip2recover/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-bzip2recover/","excerpt":"bzip2recover 命令bzip2recover 命令用来修复损坏的.bz2文件。","text":"bzip2recover 命令bzip2recover 命令用来修复损坏的.bz2文件。bzip2是以区块的方式来压缩文件，每个区块视为独立的单位。因此，当某一区块损坏时，便可利用bzip2recover，试着将文件中的区块隔开来，以便解压缩正常的区块。通常只适用在压缩文件很大的情况。 语法1bzip2recover [.bz2 压缩文件] 实例修复.bz2文件1# bzip2recover col.bz2","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"bzip2recover","slug":"Linux/备份压缩/bzip2recover","permalink":"http://yoursite.com/categories/Linux/备份压缩/bzip2recover/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"bzip2recover","slug":"bzip2recover","permalink":"http://yoursite.com/tags/bzip2recover/"}]},{"title":"Linux-bzip2","slug":"Linux-bzip2","date":"2019-05-02T01:54:35.203Z","updated":"2019-03-02T04:51:46.000Z","comments":true,"path":"2019/05/02/Linux-bzip2/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-bzip2/","excerpt":"bzip2 命令bzip2 命令是.bz2文件的压缩程序。","text":"bzip2 命令bzip2 命令是.bz2文件的压缩程序。bzip2采用新的压缩演算法，压缩效果比传统的LZ77/LZ78压缩演算法来得好。若没有加上任何参数，bzip2压缩完文件后会产生.bz2的压缩文件，并删除原始的文件。 语法1bzip2 [-cdfhkLstvVz][--repetitive-best][--repetitive-fast][- 压缩等级][要压缩的文件] 参数 -c或–stdout 将压缩与解压缩的结果送到标准输出。 -d或–decompress 执行解压缩。 -f或–force bzip2在压缩或解压缩时，若输出文件与现有文件同名，预设不会覆盖现有文件。若要覆盖，请使用此参数。 -h或–help 显示帮助。 -k或–keep bzip2在压缩或解压缩后，会删除原始的文件。若要保留原始文件，请使用此参数。 -s或–small 降低程序执行时内存的使用量。 -t或–test 测试.bz2压缩文件的完整性。 -v或–verbose 压缩或解压缩文件时，显示详细的信息。 -z或–compress 强制执行压缩。 -L,–license, -V或–version 显示版本信息。 –repetitive-best 若文件中有重复出现的资料时，可利用此参数提高压缩效果。 –repetitive-fast 若文件中有重复出现的资料时，可利用此参数加快执行速度。 -压缩等级 压缩时的区块大小。 实例解压.bz2文件1bzip2 -v temp.bz2 //解压文件显示详细处理信息 压缩文件1bzip2 -c a.c b.c c.c 检查文件完整性1bzip2 -t temp.bz2","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"bzip2","slug":"Linux/备份压缩/bzip2","permalink":"http://yoursite.com/categories/Linux/备份压缩/bzip2/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"bzip2","slug":"bzip2","permalink":"http://yoursite.com/tags/bzip2/"}]},{"title":"Linux-bye","slug":"Linux-bye","date":"2019-05-02T01:54:35.197Z","updated":"2019-02-12T13:42:34.000Z","comments":true,"path":"2019/05/02/Linux-bye/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-bye/","excerpt":"bye 命令bye 命令用于中断FTP连线并结束程序。在ftp模式下，输入bye即可中断目前的连线作业，结束ftp的执行。","text":"bye 命令bye 命令用于中断FTP连线并结束程序。在ftp模式下，输入bye即可中断目前的连线作业，结束ftp的执行。 语法1bye","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件传输","slug":"Linux/文件传输","permalink":"http://yoursite.com/categories/Linux/文件传输/"},{"name":"bye","slug":"Linux/文件传输/bye","permalink":"http://yoursite.com/categories/Linux/文件传输/bye/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件传输","slug":"文件传输","permalink":"http://yoursite.com/tags/文件传输/"},{"name":"bye","slug":"bye","permalink":"http://yoursite.com/tags/bye/"}]},{"title":"Linux-bunzip2","slug":"Linux-bunzip2","date":"2019-05-02T01:54:35.190Z","updated":"2019-03-02T04:33:12.000Z","comments":true,"path":"2019/05/02/Linux-bunzip2/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-bunzip2/","excerpt":"bunzip2 命令bunzip2 命令是.bz2文件的解压缩程序。","text":"bunzip2 命令bunzip2 命令是.bz2文件的解压缩程序。bunzip2可解压缩.bz2格式的压缩文件。bunzip2实际上是bzip2的符号连接，执行bunzip2与bzip2 -d的效果相同。 语法1bunzip2 [-fkLsvV][.bz2压缩文件] 参数 -f或–force 解压缩时，若输出的文件与现有文件同名时，预设不会覆盖现有的文件。若要覆盖，请使用此参数。 -k或–keep 在解压缩后，预设会删除原来的压缩文件。若要保留压缩文件，请使用此参数。 -s或–small 降低程序执行时，内存的使用量。 -v或–verbose 解压缩文件时，显示详细的信息。 -l,–license,-V或–version 显示版本信息。 实例解压.bz2文件1# bunzip2 -v temp.bz2 //解压文件显示详细处理信息","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"bunzip2","slug":"Linux/备份压缩/bunzip2","permalink":"http://yoursite.com/categories/Linux/备份压缩/bunzip2/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"bunzip2","slug":"bunzip2","permalink":"http://yoursite.com/tags/bunzip2/"}]},{"title":"Linux-bind","slug":"Linux-bind","date":"2019-05-02T01:54:35.184Z","updated":"2019-02-28T14:21:25.000Z","comments":true,"path":"2019/05/02/Linux-bind/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-bind/","excerpt":"bind 命令bind 命令用于显示或设置键盘按键与其相关的功能。","text":"bind 命令bind 命令用于显示或设置键盘按键与其相关的功能。可以利用bind命令了解有哪些按键组合与其功能，也可以自行指定要用哪些按键组合。 语法1bind [-dlv][-f &lt;按键配置文件&gt;][-m &lt;按键配置&gt;][-q &lt;功能&gt;] 参数 -d 显示按键配置的内容。 -f&lt;按键配置文件&gt; 载入指定的按键配置文件。 -l 列出所有的功能。 -m&lt;按键配置&gt; 指定按键配置。 -q&lt;功能&gt; 显示指定功能的按键。 -v 列出目前的按键配置与其功能。 实例显示按键组合的所有功能1bind -l 显示当前按键组合的设置1bind -l 列出指定功能的按键和按键组合12345# bind -q abort//请用 调用abort “C-g”, “C-xC-g”, “eC-g”.# bind -q accept-line //列出功能“accept-line”按键以及组合按键//请用 调用accept-line “C-j”, “C-m”.","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"bind","slug":"Linux/系统设置/bind","permalink":"http://yoursite.com/categories/Linux/系统设置/bind/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"bind","slug":"bind","permalink":"http://yoursite.com/tags/bind/"}]},{"title":"Linux-badblocks","slug":"Linux-badblocks","date":"2019-05-02T01:54:35.176Z","updated":"2019-02-15T11:17:07.000Z","comments":true,"path":"2019/05/02/Linux-badblocks/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-badblocks/","excerpt":"badblocks 命令badblocks 命令用于检查磁盘装置中损坏的区块。执行指令时须指定所要检查的磁盘装置，及此装置的磁盘区块数。","text":"badblocks 命令badblocks 命令用于检查磁盘装置中损坏的区块。执行指令时须指定所要检查的磁盘装置，及此装置的磁盘区块数。 语法1badblocks [-svw][-b &lt;区块大小&gt;][-o &lt;输出文件&gt;][磁盘装置][磁盘区块数][启始区块] 参数 -b&lt;区块大小&gt; 指定磁盘的区块大小，单位为字节。 -o&lt;输出文件&gt; 将检查的结果写入指定的输出文件。 -s 在检查时显示进度。 -v 执行时显示详细的信息。 -w 在检查时，执行写入测试。 [磁盘装置] 指定要检查的磁盘装置。 [磁盘区块数] 指定磁盘装置的区块总数。 [启始区块] 指定要从哪个区块开始检查。 实例查看系统当前硬盘信息1fdisk -l 例如，显示信息如下：123456789101112Disk /dev/sda: 298.9 GB, 298999349248 bytes255 heads, 63 sectors/track, 36351 cylindersUnits = cylinders of 16065 * 512 = 8225280 bytes Device Boot Start End Blocks Id System/dev/sda1 1 262 2104483+ 82 Linux swap / Solaris/dev/sda2 * 263 32898 262148670 83 Linux/dev/sda3 32899 36351 27736222+ 83 LinuxDisk /dev/sdb: 42.9 GB, 42949672960 bytes64 heads, 32 sectors/track, 40960 cylindersUnits = cylinders of 2048 * 512 = 1048576 bytes 通过命令扫描硬盘1badblocks -s -v /dev/sdnx 其中n表示硬盘设备名，x表示硬盘对应的分区号。例如需要检查“/dev/sda2”，执行命令如下：1234567891011121314151617# badblocks -s -v /dev/sda2Checking blocks 0 to 30681000Checking for bad blocks (read-only test): 306809600674112/ 30681000000030680964306809653068096630680967306809683068096930680970306809713068097230680973...donePass completed, 37 bad blocks found.其中，“37 bad blocks found”表示硬盘存在37个坏块。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"磁盘维护","slug":"Linux/磁盘维护","permalink":"http://yoursite.com/categories/Linux/磁盘维护/"},{"name":"badblocks","slug":"Linux/磁盘维护/badblocks","permalink":"http://yoursite.com/categories/Linux/磁盘维护/badblocks/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"磁盘维护","slug":"磁盘维护","permalink":"http://yoursite.com/tags/磁盘维护/"},{"name":"badblocks","slug":"badblocks","permalink":"http://yoursite.com/tags/badblocks/"}]},{"title":"Linux-awk","slug":"Linux-awk","date":"2019-05-02T01:54:35.169Z","updated":"2019-02-07T13:04:21.000Z","comments":true,"path":"2019/05/02/Linux-awk/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-awk/","excerpt":"awk 命令awk是一种处理文本文件的语言，是一种强大的文本分析工具。","text":"awk 命令awk是一种处理文本文件的语言，是一种强大的文本分析工具。 语法123awk [选项参数] &apos;script&apos; var=value file(s)或awk [选项参数] -f scriptfile var=value file(s) 参数 -F fs or –field-separator fs 指定输入文件折分隔符，fs是一个字符串或者是一个正则表达式，如-F:。 -v var=value or –asign var=value 赋值一个用户定义变量。 -f scripfile or –file scriptfile 从脚本文件中读取awk命令。 -mf nnn and -mr nnn 对nnn值设置内在限制，-mf选项限制分配给nnn的最大块数目；-mr选项限制记录的最大数目。这两个功能是Bell实验室版awk的扩展功能，在标准awk中不适用。 -W compact or –compat, -W traditional or –traditional 在兼容模式下运行awk。所以gawk的行为和标准的awk完全一样，所有的awk扩展都被忽略。 -W copyleft or –copyleft, -W copyright or –copyright 打印简短的版权信息。 -W help or –help, -W usage or –usage 打印全部awk选项和每个选项的简短说明。 -W lint or –lint 打印不能向传统unix平台移植的结构的警告。 -W lint-old or –lint-old 打印关于不能向传统unix平台移植的结构的警告。 -W posix 打开兼容模式。但有以下限制，不识别：/x、函数关键字、func、换码序列以及当fs是一个空格时，将新行作为一个域分隔符；操作符和=不能代替^和^=；fflush无效。 -W re-interval or –re-inerval 允许间隔正则表达式的使用，参考(grep中的Posix字符类)，如括号表达式[[:alpha:]]。 -W source program-text or –source program-text 使用program-text作为源代码，可与-f命令混用。 -W version or –version 打印bug报告信息的版本。 基本用法log.txt文本内容如下：12342 this is a test3 Are you like awkThis&apos;s a test10 There are orange,apple,mongo 用法一：1awk &apos;&#123;[pattern] action&#125;&apos; &#123;filenames&#125; # 行匹配语句 awk &apos;&apos; 只能用单引号 实例：1234567891011121314# 每行按空格或TAB分割，输出文本中的1、4项 $ awk &apos;&#123;print $1,$4&#125;&apos; log.txt --------------------------------------------- 2 a 3 like This&apos;s 10 orange,apple,mongo # 格式化输出 $ awk &apos;&#123;printf &quot;%-8s %-10s\\n&quot;,$1,$4&#125;&apos; log.txt --------------------------------------------- 2 a 3 like This&apos;s 10 orange,apple,mongo 用法二：1awk -F #-F相当于内置变量FS, 指定分割字符 实例：123456789101112131415161718192021# 使用&quot;,&quot;分割 $ awk -F, &apos;&#123;print $1,$2&#125;&apos; log.txt --------------------------------------------- 2 this is a test 3 Are you like awk This&apos;s a test 10 There are orange apple # 或者使用内建变量 $ awk &apos;BEGIN&#123;FS=&quot;,&quot;&#125; &#123;print $1,$2&#125;&apos; log.txt --------------------------------------------- 2 this is a test 3 Are you like awk This&apos;s a test 10 There are orange apple # 使用多个分隔符.先使用空格分割，然后对分割结果再使用&quot;,&quot;分割 $ awk -F &apos;[ ,]&apos; &apos;&#123;print $1,$2,$5&#125;&apos; log.txt --------------------------------------------- 2 this test 3 Are awk This&apos;s a 10 There apple 用法三：1awk -v # 设置变量 实例：123456789101112$ awk -va=1 &apos;&#123;print $1,$1+a&#125;&apos; log.txt---------------------------------------------2 33 4This&apos;s 110 11$ awk -va=1 -vb=s &apos;&#123;print $1,$1+a,$1b&#125;&apos; log.txt---------------------------------------------2 3 2s3 4 3sThis&apos;s 1 This&apos;ss10 11 10s 用法四：1awk -f &#123;awk脚本&#125; &#123;文件名&#125; 实例：1$ awk -f cal.awk log.txt 运算符 运算符 描述 = += -= *= /= %= ^= **= 赋值 ?: C条件表达式 &#124;&#124; 逻辑或 &amp;&amp; 逻辑与 ~ ~! 匹配正则表达式和不匹配正则表达式 &lt; &lt;= &gt; &gt;= != == 关系运算符 空格 连接 + - 加，减 * / % 乘，除与求余 + - ! 一元加，减和逻辑非 ^ *** 求幂 ++ – 增加或减少，作为前缀或后缀 $ 字段引用 in 数组成员 过滤第一列大于2的行12345$ awk &apos;$1&gt;2&apos; log.txt #命令#输出3 Are you like awkThis&apos;s a test10 There are orange,apple,mongo 过滤第一列等于2的行123$ awk &apos;$1==2 &#123;print $1,$3&#125;&apos; log.txt #命令#输出2 is 过滤第一列大于2并且第二列等于’Are’的行123$ awk &apos;$1&gt;2 &amp;&amp; $2==&quot;Are&quot; &#123;print $1,$2,$3&#125;&apos; log.txt #命令#输出3 Are you 内建变量 变量 描述 $n 当前记录的第n个字段，字段间由FS分隔 $0 完整的输入记录 ARGC 命令行参数的数目 ARGIND 命令行中当前文件的位置(从0开始算) ARGV 包含命令行参数的数组 CONVFMT 数字转换格式(默认值为%.6g)ENVIRON环境变量关联数组 ERRNO 最后一个系统错误的描述 FIELDWIDTHS 字段宽度列表(用空格键分隔) FILENAME 当前文件名 FNR 各文件分别计数的行号 FS 字段分隔符(默认是任何空格) IGNORECASE 如果为真，则进行忽略大小写的匹配 NF 一条记录的字段的数目 NR 已经读出的记录数，就是行号，从1开始 OFMT 数字的输出格式(默认值是%.6g) OFS 输出记录分隔符（输出换行符），输出时用指定的符号代替换行符 ORS 输出记录分隔符(默认值是一个换行符) RLENGTH 由match函数所匹配的字符串的长度 RS 记录分隔符(默认是一个换行符) RSTART 由match函数所匹配的字符串的第一个位置 SUBSEP 数组下标分隔符(默认值是/034) 12345678910111213141516171819202122232425262728$ awk &apos;BEGIN&#123;printf &quot;%4s %4s %4s %4s %4s %4s %4s %4s %4s\\n&quot;,&quot;FILENAME&quot;,&quot;ARGC&quot;,&quot;FNR&quot;,&quot;FS&quot;,&quot;NF&quot;,&quot;NR&quot;,&quot;OFS&quot;,&quot;ORS&quot;,&quot;RS&quot;;printf &quot;---------------------------------------------\\n&quot;&#125; &#123;printf &quot;%4s %4s %4s %4s %4s %4s %4s %4s %4s\\n&quot;,FILENAME,ARGC,FNR,FS,NF,NR,OFS,ORS,RS&#125;&apos; log.txtFILENAME ARGC FNR FS NF NR OFS ORS RS---------------------------------------------log.txt 2 1 5 1log.txt 2 2 5 2log.txt 2 3 3 3log.txt 2 4 4 4$ awk -F\\&apos; &apos;BEGIN&#123;printf &quot;%4s %4s %4s %4s %4s %4s %4s %4s %4s\\n&quot;,&quot;FILENAME&quot;,&quot;ARGC&quot;,&quot;FNR&quot;,&quot;FS&quot;,&quot;NF&quot;,&quot;NR&quot;,&quot;OFS&quot;,&quot;ORS&quot;,&quot;RS&quot;;printf &quot;---------------------------------------------\\n&quot;&#125; &#123;printf &quot;%4s %4s %4s %4s %4s %4s %4s %4s %4s\\n&quot;,FILENAME,ARGC,FNR,FS,NF,NR,OFS,ORS,RS&#125;&apos; log.txtFILENAME ARGC FNR FS NF NR OFS ORS RS---------------------------------------------log.txt 2 1 &apos; 1 1log.txt 2 2 &apos; 1 2log.txt 2 3 &apos; 2 3log.txt 2 4 &apos; 1 4# 输出顺序号 NR, 匹配文本行号$ awk &apos;&#123;print NR,FNR,$1,$2,$3&#125;&apos; log.txt---------------------------------------------1 1 2 this is2 2 3 Are you3 3 This&apos;s a test4 4 10 There are# 指定输出分割符$ awk &apos;&#123;print $1,$2,$5&#125;&apos; OFS=&quot; $ &quot; log.txt---------------------------------------------2 $ this $ test3 $ Are $ awkThis&apos;s $ a $10 $ There $ 使用正则，字符串匹配1234# 输出第二列包含 &quot;th&quot;，并打印第二列与第四列$ awk &apos;$2 ~ /th/ &#123;print $2,$4&#125;&apos; log.txt---------------------------------------------this a ~ 表示模式开始。// 中是模式。12345# 输出包含&quot;re&quot; 的行$ awk &apos;/re/ &apos; log.txt---------------------------------------------3 Are you like awk10 There are orange,apple,mongo 忽略大小写1234$ awk &apos;BEGIN&#123;IGNORECASE=1&#125; /this/&apos; log.txt---------------------------------------------2 this is a testThis&apos;s a test 模式取反12345678910$ awk &apos;$2 !~ /th/ &#123;print $2,$4&#125;&apos; log.txt---------------------------------------------Are likeaThere orange,apple,mongo$ awk &apos;!/th/ &#123;print $2,$4&#125;&apos; log.txt---------------------------------------------Are likeaThere orange,apple,mongo awk脚本关于awk脚本，我们需要注意两个关键词BEGIN和END。 BEGIN{ 这里面放的是执行前的语句 } END {这里面放的是处理完所有的行后要执行的语句 } {这里面放的是处理每一行时要执行的语句} 假设有这么一个文件（学生成绩表）：123456$ cat score.txtMarry 2143 78 84 77Jack 2321 66 78 45Tom 2122 48 77 71Mike 2537 87 97 95Bob 2415 40 57 62 我们的awk脚本如下：123456789101112131415161718192021222324$ cat cal.awk#!/bin/awk -f#运行前BEGIN &#123; math = 0 english = 0 computer = 0 printf &quot;NAME NO. MATH ENGLISH COMPUTER TOTAL\\n&quot; printf &quot;---------------------------------------------\\n&quot;&#125;#运行中&#123; math+=$3 english+=$4 computer+=$5 printf &quot;%-6s %-6s %4d %8d %8d %8d\\n&quot;, $1, $2, $3,$4,$5, $3+$4+$5&#125;#运行后END &#123; printf &quot;---------------------------------------------\\n&quot; printf &quot; TOTAL:%10d %8d %8d \\n&quot;, math, english, computer printf &quot;AVERAGE:%10.2f %8.2f %8.2f\\n&quot;, math/NR, english/NR, computer/NR&#125; 我们来看一下执行结果：1234567891011$ awk -f cal.awk score.txtNAME NO. MATH ENGLISH COMPUTER TOTAL---------------------------------------------Marry 2143 78 84 77 239Jack 2321 66 78 45 189Tom 2122 48 77 71 196Mike 2537 87 97 95 279Bob 2415 40 57 62 159--------------------------------------------- TOTAL: 319 393 350AVERAGE: 63.80 78.60 70.00 另外一些实例AWK的hello world程序为：1BEGIN &#123; print &quot;Hello, world!&quot; &#125; 计算文件大小123$ ls -l *.txt | awk &apos;&#123;sum+=$6&#125; END &#123;print sum&#125;&apos;--------------------------------------------------666581 从文件中找出长度大于80的行1awk &apos;length&gt;80&apos; log.txt 打印九九乘法表1seq 9 | sed &apos;H;g&apos; | awk -v RS=&apos;&apos; &apos;&#123;for(i=1;i&lt;=NF;i++)printf(&quot;%dx%d=%d%s&quot;, i, NR, i*NR, i==NR?&quot;\\n&quot;:&quot;\\t&quot;)&#125;&apos;","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"文件管理","slug":"Linux/文件管理","permalink":"http://yoursite.com/categories/Linux/文件管理/"},{"name":"awk","slug":"Linux/文件管理/awk","permalink":"http://yoursite.com/categories/Linux/文件管理/awk/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"文件管理","slug":"文件管理","permalink":"http://yoursite.com/tags/文件管理/"},{"name":"awk","slug":"awk","permalink":"http://yoursite.com/tags/awk/"}]},{"title":"Linux-aumix","slug":"Linux-aumix","date":"2019-05-02T01:54:35.161Z","updated":"2019-02-28T14:09:38.000Z","comments":true,"path":"2019/05/02/Linux-aumix/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-aumix/","excerpt":"aumix 命令aumix 命令用于设置音效设置。","text":"aumix 命令aumix 命令用于设置音效设置。aumix（audio mixer）命令设置各项音效装置的信号强度以及指定播放与录音的装置。 语法1aumix [-123bcilmoprstvwWx][(+/-)强度][PqR][-dfhILqS] 参数[-123bcilmoprstvwWx]为频道参数，用来指定装置的频道；[PqR]可用来指定播放或录音装置；[-dfhILqS] 则为指令参数。若不加任何参数，aumix会显示简单的图形界面供调整设置频道参数。 -1 输入信号线１。 -2 输入信号线２。 -3 输入信号线３。 -b 低音。 -c CD。 -i 输入信号强度。 -m 麦克风。 -o 输出信号强度。 -p PC喇叭。 -r 录音。 -s 合成器。 -t 高音。 -v 主音量。 -w PCM。 -W PCM2。 -x 混音器。 (+/-)强度 出现(+/-)时，代表在原有的强度上加减指定值。若未使用(+/-)，则直接将强度设为指定值。 指定音效装置 P 指定播放装置。 q 显示频道设置。 R 指定录音装置。 指令参数 -d 指定音效装置的名称。 -f 指定存储或载入设置的文件。 -h 在使用时显示信息。 -I 以图形界面方式来执行aumix。 -L 从$HOME/.aumixrc或/etc/aumixrc载入设置。 -q 显示所有频道的设置值。 -S 将设置值保存至/HOME/.aumixrc。 实例设置音效设备1aumix","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"aumix","slug":"Linux/系统设置/aumix","permalink":"http://yoursite.com/categories/Linux/系统设置/aumix/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"aumix","slug":"aumix","permalink":"http://yoursite.com/tags/aumix/"}]},{"title":"Linux-arpwatch","slug":"Linux-arpwatch","date":"2019-05-02T01:54:35.155Z","updated":"2019-02-20T05:30:31.000Z","comments":true,"path":"2019/05/02/Linux-arpwatch/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-arpwatch/","excerpt":"arpwatch 命令arpwatch 命令用于监听网络上ARP的记录。ARP(Address Resolution Protocol)是用来解析IP与网络装置硬件地址的协议。arpwatch可监听区域网络中的ARP数据包并记录，同时将监听到的变化通过E-mail来报告。","text":"arpwatch 命令arpwatch 命令用于监听网络上ARP的记录。ARP(Address Resolution Protocol)是用来解析IP与网络装置硬件地址的协议。arpwatch可监听区域网络中的ARP数据包并记录，同时将监听到的变化通过E-mail来报告。 语法1arpwatch [-d][-f&lt;记录文件&gt;][-i&lt;接口&gt;][-r&lt;记录文件&gt;] 参数 -d 启动排错模式。 -f&lt;记录文件&gt; 设置存储ARP记录的文件，预设为/var/arpwatch/arp.dat。 -i&lt;接口&gt; 指定监听ARP的接口，预设的接口为eth0。 -r&lt;记录文件&gt; 从指定的文件中读取ARP记录，而不是从网络上监听。 -n 指定附加的本地网络 -u 指定用户和用户组 -e 发送邮件给指定用户，非默认的root用户 -s 指定用户名作为返回地址，而不是默认的用户root 实例监听网卡eth0的ARP信息：1arpwatch -i eth0 监听ARP的信息，将相关信息记录到相应的文件：1# arpwatch -i eth0 -f a.log //将信息记录到a.log中","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"arpwatch","slug":"Linux/网络通讯/arpwatch","permalink":"http://yoursite.com/categories/Linux/网络通讯/arpwatch/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"arpwatch","slug":"arpwatch","permalink":"http://yoursite.com/tags/arpwatch/"}]},{"title":"Linux-ar","slug":"Linux-ar","date":"2019-05-02T01:54:35.147Z","updated":"2019-03-02T04:23:10.000Z","comments":true,"path":"2019/05/02/Linux-ar/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-ar/","excerpt":"ar 命令ar 命令用于建立或修改备份文件，或是从备份文件中抽取文件。","text":"ar 命令ar 命令用于建立或修改备份文件，或是从备份文件中抽取文件。ar可让您集合许多，成为单一的备份文件。在备份文件中，所有成员文件 皆保有原来的属性与权限。 语法1ar[-dmpqrtx][cfosSuvV][a&lt;成员文件&gt;][b&lt;成员文件&gt;][i&lt;成员文件&gt;][备存文件][成员文件] 参数必要参数 -d 删除备存文件中的成员文件。 -m 变更成员文件在备存文件中的次序。 -p 显示备存文件中的成员文件内容。 -q 将文件附加在备存文件末端。 -r 将文件插入备存文件中。 -t 显示备存文件中所包含的文件。 -x 自备存文件中取出成员文件。 选项参数 a&lt;成员文件&gt; 将文件插入备存文件中指定的成员文件之后。 b&lt;成员文件&gt; 将文件插入备存文件中指定的成员文件之前。 c 建立备存文件。 f 为避免过长的文件名不兼容于其他系统的ar指令指令，因此可利用此参数，截掉要放入备存文件中过长的成员文件名称。 i&lt;成员文件&gt; 将文件插入备存文件中指定的成员文件之前。 o 保留备存文件中文件的日期。 s 若备存文件中包含了对象模式，可利用此参数建立备存文件的符号表。 S 不产生符号表。 u 只将日期较新文件插入备存文件中。 v 程序执行时显示详细的信息。 V 显示版本信息。 实例打包文件1ar rv one.bak a.c b.c //打包 a.c b.c文件 打包多个文件1ar rv two.bak *.c //打包以.c结尾的文件 显示打包文件的内容1ar t two.bak 删除打包文件的成员文件12# ar d two.bak a.c b.c c.c # ar t two.bak","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"备份压缩","slug":"Linux/备份压缩","permalink":"http://yoursite.com/categories/Linux/备份压缩/"},{"name":"ar","slug":"Linux/备份压缩/ar","permalink":"http://yoursite.com/categories/Linux/备份压缩/ar/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"备份压缩","slug":"备份压缩","permalink":"http://yoursite.com/tags/备份压缩/"},{"name":"ar","slug":"ar","permalink":"http://yoursite.com/tags/ar/"}]},{"title":"Linux-apmd","slug":"Linux-apmd","date":"2019-05-02T01:54:35.140Z","updated":"2019-03-01T12:33:12.000Z","comments":true,"path":"2019/05/02/Linux-apmd/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-apmd/","excerpt":"apmd 命令apmd 命令用于进阶电源管理服务程序。","text":"apmd 命令apmd 命令用于进阶电源管理服务程序。apmd负责BIOS进阶电源管理（APM）相关的记录，警告与管理工作。 语法1apmd [-u v V W][-p &lt;百分比变化量&gt;][-w &lt;百分比值&gt;] 参数 -p&lt;百分比变化量&gt;或–percentage&lt;百分比变化量&gt; 当电力变化的幅度超出设置的百分比变化量，即记录事件百分比变化量的预设值为5，若设置值超过100，则关闭此功能。 -u或–utc 将BIOS时钟设为UTC，以便从悬待模式恢复时，将-u参数传送至clock或hwclock程序。 -v或–verbose 记录所有的APM事件。 -V或–version 显示版本信息。 w&lt;百分比值&gt;或–warn&lt;百分比值&gt; 当电池不在充电状态时，且电池电量低于设置的百分比值，则在syslog(2)的ALERT层记录警告信息。百分比值的预设置为10，若设置为0，则关闭此功能。 -W或–wall 发出警告信息给所有人。 实例记录所有的电源管理事件1apmd -v 设置BIOS时钟1apmd -utc //设置 BIOS时钟为UTC","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"apmd","slug":"Linux/系统设置/apmd","permalink":"http://yoursite.com/categories/Linux/系统设置/apmd/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"apmd","slug":"apmd","permalink":"http://yoursite.com/tags/apmd/"}]},{"title":"Linux-apachectl","slug":"Linux-apachectl","date":"2019-05-02T01:54:35.133Z","updated":"2019-02-20T05:26:10.000Z","comments":true,"path":"2019/05/02/Linux-apachectl/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-apachectl/","excerpt":"apachectl 命令apachectl 命令可用来控制Apache HTTP服务器的程序。apachectl是slackware内附Apache HTTP服务器的script文件，可供管理员控制服务器，但在其他Linux的Apache HTTP服务器不一定有这个文件。","text":"apachectl 命令apachectl 命令可用来控制Apache HTTP服务器的程序。apachectl是slackware内附Apache HTTP服务器的script文件，可供管理员控制服务器，但在其他Linux的Apache HTTP服务器不一定有这个文件。 语法1apachectl [configtest][fullstatus][graceful][help][restart][start][status][stop] 参数 configtest 检查设置文件中的语法是否正确。 fullstatus 显示服务器完整的状态信息。 graceful 重新启动Apache服务器，但不会中断原有的连接。 help 显示帮助信息。 restart 重新启动Apache服务器。 start 启动Apache服务器。 status 显示服务器摘要的状态信息。 stop 停止Apache服务器。","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"网络通讯","slug":"Linux/网络通讯","permalink":"http://yoursite.com/categories/Linux/网络通讯/"},{"name":"apachectl","slug":"Linux/网络通讯/apachectl","permalink":"http://yoursite.com/categories/Linux/网络通讯/apachectl/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"网络通讯","slug":"网络通讯","permalink":"http://yoursite.com/tags/网络通讯/"},{"name":"apachectl","slug":"apachectl","permalink":"http://yoursite.com/tags/apachectl/"}]},{"title":"Linux-alias","slug":"Linux-alias","date":"2019-05-02T01:54:35.127Z","updated":"2019-02-28T13:54:43.000Z","comments":true,"path":"2019/05/02/Linux-alias/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-alias/","excerpt":"alias 命令alias 命令用于设置指令的别名。","text":"alias 命令alias 命令用于设置指令的别名。用户可利用alias，自定指令的别名。若仅输入alias，则可列出目前所有的别名设置。alias的效力仅及于该次登入的操作。若要每次登入是即自动设好别名，可在.profile或.cshrc中设定指令的别名。 语法1alias[别名]=[指令名称] 参数说明：若不加任何参数，则列出目前所有的别名设置。 实例给命令设置别名12alias lx=lslx","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统设置","slug":"Linux/系统设置","permalink":"http://yoursite.com/categories/Linux/系统设置/"},{"name":"alias","slug":"Linux/系统设置/alias","permalink":"http://yoursite.com/categories/Linux/系统设置/alias/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统设置","slug":"系统设置","permalink":"http://yoursite.com/tags/系统设置/"},{"name":"alias","slug":"alias","permalink":"http://yoursite.com/tags/alias/"}]},{"title":"Linux-adduser","slug":"Linux-adduser","date":"2019-05-02T01:54:35.121Z","updated":"2019-02-24T03:14:35.000Z","comments":true,"path":"2019/05/02/Linux-adduser/","link":"","permalink":"http://yoursite.com/2019/05/02/Linux-adduser/","excerpt":"adduser 命令adduser 命令用于新增使用者账号或更新预设的使用者资料。adduser 与useradd指令为同一指令（经由符号连接symbolic link）。","text":"adduser 命令adduser 命令用于新增使用者账号或更新预设的使用者资料。adduser 与useradd指令为同一指令（经由符号连接symbolic link）。使用权限：系统管理员。adduser是增加使用者。相对的，也有删除使用者的指令，userdel。 语法123adduser [-c comment] [-d home_dir] [-e expire_date] [-f inactive_time] [-g initial_group] [-G group[,...]] [-m [-k skeleton_dir] | -M] [-p passwd] [-s shell] [-u uid [ -o]] [-n] [-r] loginid或adduser -D [-g default_group] [-b default_home] [-f default_inactive] [-e default_expire_date] [-s default_shell] 参数 -c comment 新使用者位于密码档（通常是 /etc/passwd）的注解资料 -d home_dir 设定使用者的家目录为 home_dir ，预设值为预设的 home 后面加上使用者帐号 loginid -e expire_date 设定此帐号的使用期限（格式为 YYYY-MM-DD），预设值为永久有效 -f inactive_time 范例：","categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"系统管理","slug":"Linux/系统管理","permalink":"http://yoursite.com/categories/Linux/系统管理/"},{"name":"adduser","slug":"Linux/系统管理/adduser","permalink":"http://yoursite.com/categories/Linux/系统管理/adduser/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/tags/Linux/"},{"name":"系统管理","slug":"系统管理","permalink":"http://yoursite.com/tags/系统管理/"},{"name":"adduser","slug":"adduser","permalink":"http://yoursite.com/tags/adduser/"}]},{"title":"Hexo主题casper使用教程","slug":"Hexo主题casper使用教程","date":"2019-05-02T01:54:35.035Z","updated":"2019-04-17T14:08:16.453Z","comments":true,"path":"2019/05/02/Hexo主题casper使用教程/","link":"","permalink":"http://yoursite.com/2019/05/02/Hexo主题casper使用教程/","excerpt":"Hexo主题casper使用教程demo","text":"Hexo主题casper使用教程demo 安装下载1git clone https://github.com/xzhih/hexo-theme-casper.git themes/hexo-casper 更改主题为casper把Hexo根目录的配置文件_config.yml中的theme改为hexo-casper。 升级建议先备份以下再执行下面的操作。12cd themes/casper git pull 添加统一的文章模板参数把下面的内容添加到Hexo根目录下的scaffolds/post.md。 1234cover_img: # 在文章摘要上显示feature_img: # 在文章详细页面上置顶description: # 文章描述keywords: # 关键字 自定义配置编辑themes/hexo-casper/_config.yml进行配置。12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273# Configrss: # linkfavicon: https://i.loli.net/2017/11/26/5a19c0b50432e.pngblog_logo: header_image: https://i.loli.net/2017/11/26/5a19c56faa29f.jpgbio: This is a demopost_toc: true# 菜单menu: About: /about Archives: /archives # 其他的可以按照上面的模板添加# 作者author_image: # 链接author_bio: # 描述author_location: # 地址# 社交链接social: facebook: https://www.facebook.com twitter: https://www.twitter.com twitter: https://twitter.com facebook: https://facebook telegram: bilibili: youtube: # 插件（显示在网站底部）widgets: recent_posts: true category: true tagcloud: true # 这是个简洁的主题，我认为3个就够了# 文章图片相册（点击图片可以放大）# https://github.com/sachinchoolur/lightgallery.jslightgallery: true# 懒加载# 首页已经默认开启，其他页面在此开启# https://github.com/dinbror/blazylazyload: true# 搜索功能local_search: true# Valine 评论系统# https://valine.js.orgcomment: falsevaline: notify: false # mail notifier , https://github.com/xCss/Valine/wiki verify: false # Verification code appId: # your leancloud application appid appKey: # your leancloud application appkey placeholder: Just go go # comment box placeholder avatar: mm # gravatar style pageSize: 10 # pagination size# PWA # 你需要在 hexo 目录的 source 文件夹里创建一个 manifest.json 文件manifest: falseservice_workers: falsenavColor: &apos;3c484e&apos;# Baidu 链接提交baidu: false# Google AnalyticsgoogleAnalytics: falseGA_TRACKING_ID: UA-XXXXXXXXXX-1 本地搜索功能安装1npm install hexo-generator-search --save 配置在Hexo根目录下中的_config.yml进行配置。1234search： path：search.xml field：post content：true path-文件路径。默认为search.xml。如果文件扩展名为.json，则输出格式为JSON。否则将导出XML格式文件。filed-要搜索的文件范围。 post（默认）-所有帖子 page -所有页面 all -所有帖子和页面 content-是否包含每篇文章的全部内容。默认为true。如果false，生成的结果仅覆盖没有主体的标题和其他元信息。 排除索引要将某个帖子或页面排除在索引之外，您只需indexing: false在其前端的顶部插入设置，例如： title: &quot;Code Highlight&quot; date: &quot;2014-03-15 20:17:16&quot; tags: highlight categories: Demo description: &quot;A collection of Hello World applications from helloworld.org.&quot; toc: true indexing: false ---","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"},{"name":"Hexo主题casper使用教程","slug":"Hexo/Hexo主题casper使用教程","permalink":"http://yoursite.com/categories/Hexo/Hexo主题casper使用教程/"}],"tags":[{"name":"Hexo主题casper使用教程","slug":"Hexo主题casper使用教程","permalink":"http://yoursite.com/tags/Hexo主题casper使用教程/"}]},{"title":"hexo-theme-indigo","slug":"hexo-theme-indigo","date":"2019-05-02T01:54:35.020Z","updated":"2019-04-16T14:29:05.240Z","comments":true,"path":"2019/05/02/hexo-theme-indigo/","link":"","permalink":"http://yoursite.com/2019/05/02/hexo-theme-indigo/","excerpt":"hexo-theme-indigo 主题demo","text":"hexo-theme-indigo 主题demo 主题安装安装需确认Hexo版本在 3.0 以上，以及Node版本在6.x以上，在Hexo根目录，执行以下命令：1git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo 切换主题在Hexo根目录下的_config.yml文件中修改，如下：1theme: indigo 注：记得保存。 依赖安装Less主题默认使用 less 作为 css 预处理工具。1npm install hexo-renderer-less --save Feed用于生成 rss。1npm install hexo-generator-feed --save Json-content用于生成静态站点数据，用作站内搜索的数据源。1npm install hexo-generator-json-content --save QRCode(可选)用于生成微信分享二维码。可选，不安装时会请求 jiathis Api 生成二维码。1npm install hexo-helper-qrcode --save 开启分类页仅 card theme 支持。1hexo new page categories 修改 hexo/source/categories/index.md 的元数据123layout: categoriescomments: false--- 开启标签页1hexo new page tags 修改 hexo/source/tags/index.md 的元数据 123layout: tagscomments: false--- 常见问题文章截断在Markdown中加 添加多个标签1tags: [a, b, c] 或 1234tags: - a - b - c 分类1categories: [a, b, c] 更改站点配色编辑 themes\\indigo\\source\\css_partial\\variable.less，更改对应的颜色变量。配色参考：Material Design Color Palette Generator注意：使用自定义配色时需把主题配置中的 cdn 关闭，cdn: false。 其他参考：https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98 站点配置编辑站点配置文件 \\themes\\landscape的_config.yml文件。 启动主题1theme: indigo 基本配置左侧菜单1234567891011121314151617menu: home: text: 主页 url: / archives: url: /archives tags: url: /tags github: url: https://github.com/yscoder target: _blank weibo: url: http://www.weibo.com/ysweb target: _blank link: text: 测试 url: / 添加新菜单项时，在 menu 下增加子属性即可。属性说明如下：12345menu: link: # fontawesome图标，省略前缀，本主题前缀为 icon-，必须 text: About # 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写 url: /about # 链接，绝对或相对路径，必须 target: _blank # 是否跳出，省略则在当前页面打开 favicon站点 logo，显示在浏览器当前标签页左上角。1favicon: /favicon.ico 头像位于左侧菜单上方1avatar: /img/logo.jpg email头像下方1email: 634206017@qq.com color设置 Android L Chrome 浏览器状态栏颜色，不需要可去除此项或设为 false。1color: &apos;#3F51B5&apos; 其他参考：https://github.com/yscoder/hexo-theme-indigo/wiki/%E9%85%8D%E7%BD%AE","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"},{"name":"hexo-theme-indigo","slug":"Hexo/hexo-theme-indigo","permalink":"http://yoursite.com/categories/Hexo/hexo-theme-indigo/"}],"tags":[{"name":"hexo-theme-indigo","slug":"hexo-theme-indigo","permalink":"http://yoursite.com/tags/hexo-theme-indigo/"}]},{"title":"Hexo yilia 添加目录页面","slug":"Hexo yilia 添加目录页面","date":"2019-05-02T01:54:34.999Z","updated":"2018-12-17T14:02:00.000Z","comments":true,"path":"2019/05/02/Hexo yilia 添加目录页面/","link":"","permalink":"http://yoursite.com/2019/05/02/Hexo yilia 添加目录页面/","excerpt":"步骤 1.添加 categories 页面 2.添加 categories 链接 3.修改 yilia 主题 4.多层分类 5.效果 6.参考文档","text":"步骤 1.添加 categories 页面 2.添加 categories 链接 3.修改 yilia 主题 4.多层分类 5.效果 6.参考文档 1 添加 categories 页面1.1 新建 categories 页面 输入命令： 1hexo new page categories 该命令在 source 目录下生成一个 categories 目录，categories 目录下有一个 index.md 文件。 1.2 修改 index.md 文件1234567---title: 文章分类date: 2018-10-19 11:22:21type: &quot;categories&quot;layout: &quot;categories&quot;comments: false #关闭评论--- 2 添加 categories 链接 若主题为 yilia ，则打开 yilia/_config.yml ，修改为： 1234menu: 主页: / 相册: / 分类: /categories 3 修改 yilia 主题3.1 新建yilia/layout/categories.ejs12345678910111213141516171819202122&lt;article class=&quot;article article-type-post show&quot;&gt; &lt;header class=&quot;article-header&quot;&gt; &lt;h1 class=&quot;article-title&quot; itemprop=&quot;name&quot;&gt; &lt;%= page.title %&gt; &lt;/h1&gt; &lt;/header&gt; &lt;% if (site.categories.length)&#123; %&gt; &lt;div class=&quot;category-all-page article-type-post show&quot;&gt; &lt;h3&gt;共计&amp;nbsp;&lt;%= site.categories.length %&gt;&amp;nbsp;个分类&lt;/h3&gt; &lt;ul class=&quot;category-list&quot;&gt; &lt;% site.categories.sort(&apos;name&apos;).each(function(item)&#123; %&gt; &lt;% if(item.posts.length)&#123; %&gt; &lt;li class=&quot;category-list-item&quot;&gt; &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- item.path %&gt;&quot; title=&quot;&lt;%= item.name %&gt;&quot;&gt;&lt;%= item.name %&gt;&lt;sup&gt;[&lt;%= item.posts.length %&gt;]&lt;/sup&gt;&lt;/a&gt; &lt;/li&gt; &lt;% &#125; %&gt; &lt;% &#125;); %&gt; &lt;/ul&gt; &lt;/div&gt; &lt;% &#125; %&gt;&lt;/article&gt; 3.2 修改 yilia\\source\\main.0cf68a.css，将下面的内容添加进去1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950category-all-page &#123; margin: 30px 40px 30px 40px; position: relative; min-height: 70vh; &#125; .category-all-page h2 &#123; margin: 20px 0; &#125; .category-all-page .category-all-title &#123; text-align: center; &#125; .category-all-page .category-all &#123; margin-top: 20px; &#125; .category-all-page .category-list &#123; margin: 0; padding: 0; list-style: none; &#125; .category-all-page .category-list-item-list-item &#123; margin: 10px 15px; &#125; .category-all-page .category-list-item-list-count &#123; color: $grey; &#125; .category-all-page .category-list-item-list-count:before &#123; display: inline; content: &quot; (&quot;; &#125; .category-all-page .category-list-item-list-count:after &#123; display: inline; content: &quot;) &quot;; &#125; .category-all-page .category-list-item &#123; margin: 10px 10px; &#125; .category-all-page .category-list-count &#123; color: $grey; &#125; .category-all-page .category-list-count:before &#123; display: inline; content: &quot; (&quot;; &#125; .category-all-page .category-list-count:after &#123; display: inline; content: &quot;) &quot;; &#125; .category-all-page .category-list-child &#123; padding-left: 10px; &#125; 4 多层分类4.1 修改yilia/layout/categories.ejs为：1234567891011121314151617181920&lt;article class=&quot;article article-type-post show&quot;&gt; &lt;header class=&quot;article-header&quot; style=&quot;border-bottom: 1px solid #ccc&quot;&gt; &lt;h1 class=&quot;article-title&quot; itemprop=&quot;name&quot;&gt; &lt;%= page.title %&gt; &lt;/h1&gt; &lt;/header&gt; &lt;% if (site.categories.length)&#123; %&gt; &lt;div class=&quot;category-all-page&quot;&gt; &lt;h2&gt;共计&amp;nbsp;&lt;%= site.categories.length %&gt;&amp;nbsp;个分类&lt;/h2&gt; &lt;%- list_categories(site.categories, &#123; show_count: true, class: &apos;category-list-item&apos;, style: &apos;list&apos;, depth: 2, separator: &apos;&apos; &#125;) %&gt; &lt;/div&gt; &lt;% &#125; %&gt;&lt;/article&gt; 4.2 修改自己的文章123456---title: Hexo yilia 添加目录页面tags: Hexo yilia 添加目录toc: truecategories: [Hexo,创建目录]--- 5 效果 如下图： 6 参考文档 Hexo添加categories页面","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"},{"name":"创建目录","slug":"Hexo/创建目录","permalink":"http://yoursite.com/categories/Hexo/创建目录/"}],"tags":[{"name":"Hexo yilia 添加目录","slug":"Hexo-yilia-添加目录","permalink":"http://yoursite.com/tags/Hexo-yilia-添加目录/"}]},{"title":"Hexo yilia 添加Valine","slug":"Hexo yilia 添加Valine","date":"2019-05-02T01:54:34.989Z","updated":"2018-10-21T04:49:50.000Z","comments":true,"path":"2019/05/02/Hexo yilia 添加Valine/","link":"","permalink":"http://yoursite.com/2019/05/02/Hexo yilia 添加Valine/","excerpt":"步骤 1.Valine 介绍 2.注册LeanCloud 3.配置 4.参考文档","text":"步骤 1.Valine 介绍 2.注册LeanCloud 3.配置 4.参考文档 Valine 介绍 Valine- 一款快速、简洁且高效的无后端评论系统。 Valine 诞生于2017年8月7日，是一款基于Leancloud的快速、简洁且高效的无后端评论系统。理论上支持但不限于静态博客，目前已有Hexo、Jekyll、Typecho、Hugo 等博客程序在使用Valine。 特性 快速安全Emoji 😉无后端实现MarkDown 全语法支持轻量易用(~15kb gzipped)文章阅读量统计 v1.2.0+ 注册 LeanCloud 注册 LeanCloud 注册完成后创建一个应用。然后打开设置-应用Key。如下图： 复制图中的 App ID App key Master Key 作为备用 配置 _config.yml 12345678#6、Valine https://valine.js.orgvaline: appid: #Leancloud应用的appId appkey: #Leancloud应用的appKey verify: false #验证码 notify: false #评论回复提醒 avatar: mm #评论列表头像样式：&apos;&apos;/mm/identicon/monsterid/wavatar/retro/hide placeholder: Just go go #评论框占位符 layout/_partial/article.ejs 12345678910 &lt;% if (theme.valine &amp;&amp; theme.valine.appid &amp;&amp; theme.valine.appkey)&#123; %&gt; &lt;section id=&quot;comments&quot; style=&quot;margin:10px;padding:10px;background:#fff;&quot;&gt; &lt;%- partial(&apos;post/valine&apos;, &#123; key: post.slug, title: post.title, url: config.url+url_for(post.path) &#125;) %&gt; &lt;/section&gt; &lt;% &#125; %&gt;&lt;% &#125; %&gt; layout/_partial/post/valine.ejs 123456789101112131415161718&lt;div id=&quot;vcomment&quot; class=&quot;comment&quot;&gt;&lt;/div&gt; &lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;//unpkg.com/valine/dist/Valine.min.js&quot;&gt;&lt;/script&gt;&lt;script&gt; var notify = &apos;&lt;%= theme.valine.notify %&gt;&apos; == true ? true : false; var verify = &apos;&lt;%= theme.valine.verify %&gt;&apos; == true ? true : false; window.onload = function() &#123; new Valine(&#123; el: &apos;.comment&apos;, notify: notify, verify: verify, app_id: &quot;&lt;%= theme.valine.appid %&gt;&quot;, app_key: &quot;&lt;%= theme.valine.appkey %&gt;&quot;, placeholder: &quot;&lt;%= theme.valine.placeholder %&gt;&quot;, avatar:&quot;&lt;%= theme.valine.avatar %&gt;&quot; &#125;); &#125;&lt;/script&gt; 参考文档 1 为你的Hexo加上评论系统-Valine2 新增对Valine评论系统的支持","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"},{"name":"Valine评论","slug":"Hexo/Valine评论","permalink":"http://yoursite.com/categories/Hexo/Valine评论/"}],"tags":[{"name":"Hexo yilia Valine","slug":"Hexo-yilia-Valine","permalink":"http://yoursite.com/tags/Hexo-yilia-Valine/"}]},{"title":"git使用","slug":"git使用","date":"2019-05-02T01:54:34.975Z","updated":"2019-04-19T09:46:25.180Z","comments":true,"path":"2019/05/02/git使用/","link":"","permalink":"http://yoursite.com/2019/05/02/git使用/","excerpt":"","text":"提交文件到GitHub具体步骤如下： 登录GitHub，复制git仓库的地址 [github_repository_url]。 执行 git clone [github_repository_url],将GitHub 的仓库克隆到本地。 进入到克隆的仓库目录，若目录是很久之前克隆出来，需要使用 git pull 以更新到GitHub中的最新文件。 执行 git add . 将改动添加到本地仓库中。 执行 git commit -m “这次提交的内容的描述，自行填写” 将改动提交到本地仓库。 执行 git push origin master 将本地的改动提交到GitHub，master 为主分支。 撤销123git add Titlegit commit -m &quot;ceshi&quot;git commit --amend","categories":[{"name":"版本控制","slug":"版本控制","permalink":"http://yoursite.com/categories/版本控制/"},{"name":"git","slug":"版本控制/git","permalink":"http://yoursite.com/categories/版本控制/git/"}],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"版本控制","slug":"版本控制","permalink":"http://yoursite.com/tags/版本控制/"}]},{"title":"GitHub+Hexo搭建个人博客","slug":"GitHub+Hexo搭建个人博客","date":"2019-05-02T01:54:34.959Z","updated":"2018-12-12T13:43:01.000Z","comments":true,"path":"2019/05/02/GitHub+Hexo搭建个人博客/","link":"","permalink":"http://yoursite.com/2019/05/02/GitHub+Hexo搭建个人博客/","excerpt":"搭建步骤 1.GitHub 创建个人仓库 2.安装Git 3.安装Node.js 4.安装Hexo 5.美化 6.部署","text":"搭建步骤 1.GitHub 创建个人仓库 2.安装Git 3.安装Node.js 4.安装Hexo 5.美化 6.部署 1 GitHub 创建个人仓库1.1 创建仓库（用户名.github.io) 1 登录GitHub,如果没有的话请先注册。 2 登录之后点击GitHub 中的 New repository创建新的仓库. 3 仓库名应为：用户名.github.io 比如： 2 安装Git2.1 安装Git 1 安装Git。 2 下载安装成功后进行将自己的Github账号与Git进行绑定. 2.2 配置 1 打开Git,并配置。输入以下命令： 12git config --global user.name &quot;自己注册GitHub的用户名&quot; git config --global user.email &quot;注册GitHub时所用的邮箱&quot; 2.3 ssh 1 设置user.name和user.email配置信息之后进行生成ssh密匙文件 1ssh-keygen -t rsa -C &quot;####@####.com&quot; 2 然后找到该命令生成的id_rsa.pub密匙。路径为 C:\\Users\\Admin\\.ssh 3 打开该文件，推荐使用 Visual Studio Code 打开 2.4 GitHub 添加密匙 1 复制文件中的所有内容，然后进入 GitHub_Settings_Deploy keys 界面，点击右边的Add deploy key 如图所示： 2 新建 new SSH Key 注： title可自定义内容，Key为之前复制的密匙 2.5 检测 1 以上步骤完成后， 检测GitHub公匙是否成功，输入下面的命令： 1ssh git@github.com ssh连接成功 3 安装Node.js3.1 安装Node.js 1 下载并安装Node.js,根据自己的喜好下载不同的版本 3.2 检测是否安装成功 1 检测Node.js是否安装成功 1node -v 2 检测nopm是否安装成功 1npm -v 4 安装Hexo4.1 创建 1 创建一个文件夹，创建完成之后选择该文件夹并按住shift右键,如下图所示： 4.2 添加Hexo 1 依次输入,参考Hexo官方文档 1234npm install hexo-cli -ghexo initnpm installhexo server 4.3 预览 1 在浏览器输入localhost:4000 2 若出现错误，参考以下： 使用localhost:4000访问本地blog一直无响应使用localhost:4000访问本地blog一直无响应使用localhost:4000访问本地blog一直无响应 5 美化5.1 挑选主题 1 Hexo官网提供的主题 2 我使用的是yilia，我的博客 5.2 下载主题 1 在根目录打开Git，输入 1git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 5.3 更新主题12cd thems/yiliagit pull 5.4 配置主题 1 根目录打开_config.yml配置文件 2 将 themes:##### 改为 theme: yilia 5.5 个性化主题 1 打开 themes 下的 yilia 文件夹中的 _config.yml 2 配置主题（添加头像，图标及其他） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127# Headermenu: 主页: / 相册: /photos# SubNavsubnav: #github: &quot;#&quot; #weibo: &quot;#&quot; #rss: &quot;#&quot; #zhihu: &quot;#&quot; #qq: &quot;#&quot; #weixin: &quot;#&quot; #jianshu: &quot;#&quot; #douban: &quot;#&quot; #segmentfault: &quot;#&quot; #bilibili: &quot;#&quot; #acfun: &quot;#&quot; #mail: &quot;#&quot; #facebook: &quot;#&quot; #google: &quot;#&quot; #twitter: &quot;#&quot; #linkedin: &quot;#&quot;#rss: /atom.xmlurl: ## 是否需要修改 root 路径# 如果您的网站存放在子目录中，例如 http://yoursite.com/blog，# 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。root: /# Content# 文章太长，截断按钮文字excerpt_link: more# 文章卡片右下角常驻链接，不需要请设置为falseshow_all_link: &apos;展开全文&apos;# 数学公式mathjax: false# 是否在新窗口打开链接open_in_new: false# 打赏# 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏reward_type: 0# 打赏wordingreward_wording: &apos;谢谢你请我吃糖果&apos;# 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpgalipay: # 微信二维码图片地址weixin: # 目录# 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录toc: 1# 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为falsetoc_hide_index: true# 目录为空时的提示toc_empty_wording: &apos;目录，不存在的…&apos;# 是否有快速回到顶部的按钮top: true# Miscellaneousbaidu_analytics: &apos;&apos;google_analytics: &apos;&apos;#路径为E:\\Blog\\sourcefavicon: /assets/img/head.png#你的头像url 路径为E:\\Blog\\sourceavatar: /assets/img/face.jpg#是否开启分享share_jia: true#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment#不需要使用某项，直接设置值为false，或注释掉#具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/#1、多说duoshuo: false#2、网易云跟帖wangyiyun: false#3、畅言changyan_appid: falsechangyan_conf: false#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的disqus: false#5、Gitmentgitment_owner: false #你的 GitHub IDgitment_repo: &apos;&apos; #存储评论的 repogitment_oauth: client_id: &apos;&apos; #client ID client_secret: &apos;&apos; #client secret# 样式定制 - 一般不需要修改，除非有很强的定制欲望…style: # 头像上面的背景颜色 header: &apos;#4d4d4d&apos; # 右滑板块背景 slider: &apos;linear-gradient(200deg,#a0cfe4,#e8c37e)&apos;# slider的设置slider: # 是否默认展开tags板块 showTags: false# 智能菜单# 如不需要，将该对应项置为false# 比如#smart_menu:# friends: falsesmart_menu: innerArchive: &apos;所有文章&apos; friends: &apos;友链&apos; aboutme: &apos;关于我&apos;friends: 友情链接: # aboutme: # 注：可以根据这个自己修改，记得保存 6 部署6.1 安装Git插件 1 为Hexo安装Git插件 1npm install hexo-deployer-git --save 2 修改根目录下的 _config.yml 配置文件。 1234deploy: type: git repository: https://github.com/yanxin152133/yanxin152133.github.io.git branch: master 6.2 部署 1 打开Git，输入： 1hexo d 2 成功的标志","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/categories/Hexo/"},{"name":"搭建","slug":"Hexo/搭建","permalink":"http://yoursite.com/categories/Hexo/搭建/"}],"tags":[{"name":"GitHub Hexo 个人博客","slug":"GitHub-Hexo-个人博客","permalink":"http://yoursite.com/tags/GitHub-Hexo-个人博客/"}]},{"title":"Rocket.chat","slug":"Docker搭建Rocket.chat","date":"2019-05-02T01:54:34.951Z","updated":"2019-03-23T05:01:07.832Z","comments":true,"path":"2019/05/02/Docker搭建Rocket.chat/","link":"","permalink":"http://yoursite.com/2019/05/02/Docker搭建Rocket.chat/","excerpt":"Docker 搭建 Rocket.chat","text":"Docker 搭建 Rocket.chat 安装 Docker 参考 Ubuntu 安装 Docker Rocket.chat 搭建获取镜像请输入以下命令：1docker pull rocket.chat 启动 首先启动一个mongo实例 1docker run --name db -d mongo:3.0 --smallfiles 启动Rocket.chat链接到这个mongo实例 1docker run --name rocketchat --link db -d rocket.chat 如果想直接在主机上的标准端口访问实例1docker run --name rocketchat -p 80:3000 --env ROOT_URL=http://localhost --link db -d rocket.chat","categories":[{"name":"Docker","slug":"Docker","permalink":"http://yoursite.com/categories/Docker/"},{"name":"Rocket.chat","slug":"Docker/Rocket-chat","permalink":"http://yoursite.com/categories/Docker/Rocket-chat/"}],"tags":[{"name":"Rocket.chat","slug":"Rocket-chat","permalink":"http://yoursite.com/tags/Rocket-chat/"}]},{"title":"deepin","slug":"deepin","date":"2019-05-02T01:54:34.945Z","updated":"2019-03-21T04:16:23.111Z","comments":true,"path":"2019/05/02/deepin/","link":"","permalink":"http://yoursite.com/2019/05/02/deepin/","excerpt":"Deepin无线网络极慢的解决方案初次安装，出现无线网络网速极慢的状况。","text":"Deepin无线网络极慢的解决方案初次安装，出现无线网络网速极慢的状况。 更改文件参数1vim /etc/modprobe.d/iwlwifi.conf 将该文件中的11n_disable=1改为11n_disable=8 驱动安装查看驱动型号输入以下命令1lspci|grep Wireless 例如下图中的型号： 型号为：Intel Corporation Intel Dual Band Wireless-AC 3165 Plus Bluetooth (rev 99) 下载相对应的驱动下载地址：英特尔® 无线适配器的 Linux* 支持 安装输入以下命令：123tar -zxvf iwlwifi-7265-ucode-25.30.14.0.tgzsudo cp iwlwifi-*.ucode /lib/firmwaresudo reboot 一般情况下是可以解决该问题的。 electorn-ssr下载地址下载地址：electron-ssr也可以根据喜好自己下载：列表 配置一般情况下安装后是无法使用electron-ssr的，需要进行配置。如图（二选一即可）： node.js安装主要讲两个方式： 第一种方式下载下载地址：node.js根据个人习惯进行下载。 安装输入以下命令：123tar xvJf node-v10.15.3-linux-x64.tar.xz //解压cd node-v10.15.3-linux-x64/bin/./node -v 设置全局123ln -s /home/kun/mysofltware/node-v0.10.28-linux-x64/bin/node /usr/local/bin/nodeln -s /home/kun/mysofltware/node-v0.10.28-linux-x64/bin/npm /usr/local/bin/npm# /home/kun/mysofltware/node-v0.10.28-linux-x64/bin/node为自己存放文件的地址 /usr/local/bin/npm和/usr/local/bin/node不需要更改 第二种方式通过命令进行安装，输入以下命令：12sudo apt-get install nodejssudo apt-get install npm 配置Clion更新1sudo apt update gcc、g++12sudo apt-get install build-essentialsudo apt-get install g++ 设置环境变量1234sudo vim /etc/profile## 将以下内容填写进去 export CC=/usr/bin/gccexport CXX=/usr/bin/g++ 验证是否安装成功12gcc --versiong++ --version cmake下载下载列表：cmake下载地址:[cmake-3.11.3.tar.gz]https://cmake.org/files/v3.11/cmake-3.11.3.tar.gz 安装新建一个“cmake”目录12cd /homemkdir Cmake 解压12cd /home/Cmaketar -xzvf cmake-3.11.3.tar.gz 进入cmake 目录1cd cmake-3.11.3 编译安装12### 最好使用root用户./bootstrap &amp;&amp; make &amp;&amp; make install 验证是否安装成功1cmake -version 配置Clion如图所示： deepin下idea中文异常输入以下命令123supasswdaptitude search uming 1aptitude install fonts-arphic-uming 之后重新启动idea（Netbeans也适用） 安装 Docker参考链接：deepin安装Docker Android Studio: /dev/kvm device permission denied安装 qemu-kvm输入以下命令：1sudo apt install qemu-kvm 检查/dev/kvm 使用的所有权输入以下命令：1ls -al /dev/kvm 结果为：1crw-rw---- 1 root kvm 10, 232 3月 11 10:36 /dev/kvm 检查组中的用户kvm，使用：1grep kvm /etc/group 添加用户到kvm中，请使用：1sudo adduser yourname kvm 再检查1grep kvm /etc/group 最后重启或注销。","categories":[{"name":"deepin","slug":"deepin","permalink":"http://yoursite.com/categories/deepin/"},{"name":"配置","slug":"deepin/配置","permalink":"http://yoursite.com/categories/deepin/配置/"}],"tags":[{"name":"deepin","slug":"deepin","permalink":"http://yoursite.com/tags/deepin/"}]},{"title":"CentOS7+Hadoop-2.9.2+Hbase-1.4.9+MapReduce编程","slug":"CentOS 7+Hadoop-2.9.2+Hbase-1.4.9+MapReduce编程","date":"2019-05-02T01:54:34.937Z","updated":"2019-01-10T07:47:41.000Z","comments":true,"path":"2019/05/02/CentOS 7+Hadoop-2.9.2+Hbase-1.4.9+MapReduce编程/","link":"","permalink":"http://yoursite.com/2019/05/02/CentOS 7+Hadoop-2.9.2+Hbase-1.4.9+MapReduce编程/","excerpt":"所用软件及环境 Centos 7 jdk1.8.0_181 hadoop-2.9.2 Hbase-1.4.9 idea U","text":"所用软件及环境 Centos 7 jdk1.8.0_181 hadoop-2.9.2 Hbase-1.4.9 idea U 注：全程使用root用户 规划 组件 版本 路径 jdk 1.8.0_181 /usr/local/java Hadoop 2.9.2 /usr/local/hadoop Hbase 1.4.9 /usr/local/hbase 节点 node01 node02 node03 注：节点IP根据实际情况自行配置 Hadoop、jdk、Hbase下载下载地址点击即可下载 Hadoop-2.9.2jdk-1.8.0_181Hbase-1.4.9 配置1.主机名修改 在node01上输入 1hostnamectl --static set-hostname node01 2.添加各个节点的IP输入： 1vim /etc/hosts 添加各个节点信息 1234&lt;!-- 下列的IP需根据自己的主机确定，不唯一 --&gt;192.168.130.130 node01192.168.130.133 node02192.168.130.135 node03 3.防火墙设置 若主机中未安装iptables,执行以下命令进行安装 1yum install iptables-services 执行iptables -L -n -v命令可以查看iptables配置，执行以下命令永久关闭主机的iptables： 1chkconfig iptables off 同时关闭主机的iptables和firewalld并设置开机不启动，执行以下命令： 1234systemctl stop iptablessystemctl disable iptablessystemctl stop firewalldsystemctl disable firewalld 执行systemctl status iptables和systemctl status firewalld可以查看防火墙已经关闭。 4.时钟同步 执行以下命令安装ntdate 1yum install ntpdate 执行以下命令同步时针 1ntpdate us.pool.ntp.org 添加时针同步的定时任务，执行以下命令 1crontab -e 接着输入以下内容，设置每天凌晨5点同步时针 10 5 * * * /usr/sbin/ntpdate cn.pool.ntp.org 执行以下命令重启服务并设置开机自启： 12service crond restartsystemctl enable crond.service 5.SSH免密登录 首先执行以下以下命令，可以生成.ssh隐藏文件夹 1ssh localhost 接着执行 12345cd .sshssh-keygen -t rsa #遇到提示一路回车就行ll #会看到 id_rsa id_rsa.pub 两文件前为私钥，后为公钥cat id_rsa.pub &gt;&gt; authorized_keys #把公钥内容追加到authorized_keys文件中chmod 600 authorized_keys #修改文件权限，重要不要忽略 在最后的克隆node01得到的node02,node03主机以及node01上可通过ssh node01/node02/node03/node04测试是否可以免密登录若能连接即为成功 6.安装并配置jdk 通过 git 将已下载好的jdk1.8.0_181 发送给各个节点，执行以下命令 12cd C:/Users//Yan/Downloads #C:/Users//Yan/Downloads为本人jdk1.8.0_181下载后的路径scp jdk1.8.0_181 root@192.168.130.130:/usr/local/java #输入密码后即可将jdk1.8.0_181发送给node01,192.168.130.130为自己node01的IP cd /usr/local/java进入该目录后执行 1tar -zxvf jdk-8u181-linux-x64.tar.gz 添加环境变量,执行 1vim /etc/profile 添加以下配置 1234export JAVA_HOME=/usr/local/java/jdk1.8.0_181export JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=.:$JAVA_HOME/bin:$PATH 之后执行以下命令使配置生效 1source /etc/profile 可通过 java -version 查看jdk版本 安装 Hadoop 并配置 执行以下命令 12cd /usr/local/hadooptar -zxvf hadoop-2.9.2.tar.gz #解压 添加环境变量,执行 1vim /etc/profile 在该文件中添加以下内容 12export HADOOP_HOME=/usr/local/hadoop/hadoop-2.9.2export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin 执行 source /etc/profile 使配置生效同时创建Hadoop相关配置目录 1mkdir -p /data/hadoop/hdfs/name /data/hadoop/hdfs/data /var/log/hadoop/tmp 修改相关文件 执行以下命令 1cd /usr/local/hadoop/hadoop-2.9.2/etc/hadoop hadoop-env.sh1export JAVA_HOME=/usr/local/java/jdk1.8.0_181 #一定要写真实路径 core-site.xml1234567&lt;configuration&gt; &lt;!-- define the default file system host and port --&gt; &lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://node01:9000/&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; hdfs-site.xml123456789101112131415161718192021&lt;configuration&gt; &lt;!-- set namenode storage path--&gt; &lt;!-- storage node info --&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt; &lt;value&gt;file:///root/hdfs/namenode&lt;/value&gt; &lt;description&gt;NameNode directory for namespace and transaction logs storage.&lt;/description&gt; &lt;/property&gt; &lt;!-- set datanode storage path--&gt; &lt;!-- storage data --&gt; &lt;property&gt; &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt; &lt;value&gt;file:///root/hdfs/datanode&lt;/value&gt; &lt;description&gt;DataNode directory&lt;/description&gt; &lt;/property&gt; &lt;!-- set the number of copies, default 3, reset to 2 --&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;2&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; mapred-site.xml1234567&lt;configuration&gt; &lt;!-- specify the frame name --&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; slaves123node02node03node04 yarn-site.xml1234567891011121314151617&lt;configuration&gt; &lt;!-- Ancillary services running on the NodeManager. You need to configure &quot;mapreduce_shuffle&quot; to run the MapReduce program. --&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;/property&gt; &lt;!-- The class corresponding to the auxiliary service in the NodeManager. --&gt; &lt;!-- &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services.mapreduce_shuffle.class&lt;/name&gt; &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt; &lt;/property&gt; --&gt; &lt;!-- Configuration name node --&gt; &lt;property&gt; &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; &lt;value&gt;node01&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; 启动 Hadoop初始化 执行以下命令 12cd /usr/local/hadoop/hadoop-2.9.2/bin./hdfs namenode -format 等待一会后，不报错返回 “Exiting with status 0” 为成功，“Exiting with status 1”为失败切勿多次执行 克隆 对node01进行克隆操作进而得到node02,node03,node04修改node02,node03,node04的主机名，以及检查/etc/hosts文件中的各个节点对应的IP地址是否有误同时也要检查自己配置的/etc/profile文件是否已经生效 启动Hadoop输入以下命令 123sudo -s #若是root用户可省略cd /usr/local/hadoop/hadoop-2.9.2/sbin./start-all.sh 查看Hadoop进程输入命令jps若出现6个进程则为配置正确在浏览器输入192.168.130.130：8088则可以看到在浏览器输入192.168.130.130：50070则可以看到即配置成功 停止Hadoop1./stop-all.sh #在/usr/local/hadoop/hadoop-2.9.2/sbin目录下 安装 Hbase 并配置 执行以下命令 12345678cd /usr/local/hbase/&lt;!-- 解压 --&gt;tar -zxvf hbase-1.4.9-bin.tar.gz&lt;!-- 创建目录 --&gt;cd hbase-1.4.9/mkdir logsmkdir pidsmkdir tmp 配置/etc/profile12export HBASE_HOME=/usr/local/hbasehbase-1.4.9export PATH=$HBASE_HOME/bin:$PATH 1source /etc/profile #使配置立即生效 hbase-env.sh123456789#内容export JAVA_HOME=/usr/local/java/jdk1.8.0_181export HBASE_CLASSPATH=/usr/local/hbase/hbase-1.4.9/conf# 此配置信息，设置由hbase自己管理zookeeper，不需要单独的zookeeper。export HBASE_MANAGES_ZK=trueexport HBASE_HOME=/usr/local/hbase/hbase-1.4.9export HADOOP_HOME=/usr/local/hadoop/hadoop-2.9.2#Hbase日志目录export HBASE_LOG_DIR=/usr/local/hbase/hbase-1.4.9/logs hbase-site.xml123456789101112131415161718&lt;configuration&gt; &lt;property&gt; &lt;name&gt;hbase.rootdir&lt;/name&gt; &lt;value&gt;hdfs://node01:9000/hbase&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;hbase.cluster.distributed&lt;/name&gt; &lt;value&gt;true&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;hbase.master&lt;/name&gt; &lt;value&gt;node01:60000&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;hbase.zookeeper.quorum&lt;/name&gt; &lt;value&gt;node01:2181,node02:2181,node03:2181&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt; regionservers123node01node02node03 拷贝给其他节点12scp -r /usr/local/hbase root@node02:/usr/local/scp -r /usr/local/hbase root@node03:/usr/local/ 启动HBase在node01上启动 执行 12cd /usr/local/hbase/hbase-1.4.9/bin./start-hbase.sh 验证 在每个节点使用jps命令查看 node01上是否有HMaster进程node02,node03上是否有HRegionServer进程 通过node:16010查看HBase集群相关情况,如下图所示： 500 为初始化，稍等即可 wordcount 输入以下命令(root用户下) 123456789101112cd /home/hadoop #hadoop为自己创建的用户名，不固定touch README.txtvim README.txt #下面为README.txt的内容 hello c hello java hello pythonhadoop fs -mkdir /wordcounthadoop fs -mkdir /wordcount/inputhadoop fs -put /home/hadoop/README.txt /wordcount/input cd /usr/local/hadoop/hadoop-2.9.2/share/hadoop/mapreduce/hadoop jar hadoop-mapreduce-examples-2.9.2.jar wordcount /wordcount/input /wordcount/output 出现以下信息即为成功：12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364652018-12-29 20:38:15,997 INFO mapreduce.Job: map 100% reduce 0%2018-12-29 20:38:24,174 INFO mapreduce.Job: map 100% reduce 100%2018-12-29 20:38:28,259 INFO mapreduce.Job: Job job_1546086772385_0001 completed successfully2018-12-29 20:38:29,164 INFO mapreduce.Job: Counters: 55 File System Counters FILE: Number of bytes read=50 FILE: Number of bytes written=429541 FILE: Number of read operations=0 FILE: Number of large read operations=0 FILE: Number of write operations=0 HDFS: Number of bytes read=144 HDFS: Number of bytes written=28 HDFS: Number of read operations=8 HDFS: Number of large read operations=0 HDFS: Number of write operations=2 Job Counters Failed map tasks=3 Launched map tasks=4 Launched reduce tasks=1 Other local map tasks=3 Data-local map tasks=1 Total time spent by all maps in occupied slots (ms)=38093 Total time spent by all reduces in occupied slots (ms)=5732 Total time spent by all map tasks (ms)=38093 Total time spent by all reduce tasks (ms)=5732 Total vcore-milliseconds taken by all map tasks=38093 Total vcore-milliseconds taken by all reduce tasks=5732 Total megabyte-milliseconds taken by all map tasks=39007232 Total megabyte-milliseconds taken by all reduce tasks=5869568 Map-Reduce Framework Map input records=5 Map output records=6 Map output bytes=56 Map output materialized bytes=50 Input split bytes=110 Combine input records=6 Combine output records=4 Reduce input groups=4 Reduce shuffle bytes=50 Reduce input records=4 Reduce output records=4 Spilled Records=8 Shuffled Maps =1 Failed Shuffles=0 Merged Map outputs=1 GC time elapsed (ms)=152 CPU time spent (ms)=2050 Physical memory (bytes) snapshot=517804032 Virtual memory (bytes) snapshot=5624598528 Total committed heap usage (bytes)=336592896 Peak Map Physical memory (bytes)=293904384 Peak Map Virtual memory (bytes)=2790219776 Peak Reduce Physical memory (bytes)=223899648 Peak Reduce Virtual memory (bytes)=2834378752 Shuffle Errors BAD_ID=0 CONNECTION=0 IO_ERROR=0 WRONG_LENGTH=0 WRONG_MAP=0 WRONG_REDUCE=0 File Input Format Counters Bytes Read=34 File Output Format Counters Bytes Written=28 查看统计结果 12hdfs dfs -ls /wordcount/outputhdfs dfs -cat /wordcount/output/part-r-00000 MapReduce编程pom.xml12345678910111213141516171819202122232425262728293031323334353637383940414243444546&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.hadoop&lt;/groupId&gt; &lt;artifactId&gt;wordcount&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;commons-beanutils&lt;/groupId&gt; &lt;artifactId&gt;commons-beanutils&lt;/artifactId&gt; &lt;version&gt;1.9.3&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;artifactId&gt;hadoop-common&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;artifactId&gt;hadoop-hdfs&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;artifactId&gt;hadoop-mapreduce-client-common&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;org.apache.hadoop&lt;/groupId&gt; &lt;artifactId&gt;hadoop-mapreduce-client-core&lt;/artifactId&gt; &lt;version&gt;2.7.0&lt;/version&gt; &lt;/dependency&gt; &lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;3.8.1&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/project&gt; src/main/java/WordcountMapper.java12345678910111213141516171819202122232425import org.apache.hadoop.io.IntWritable;import org.apache.hadoop.io.LongWritable;import org.apache.hadoop.io.Text;import org.apache.hadoop.mapreduce.Mapper;import java.io.IOException;/** * Created by zxk on 2017/6/29. */public class WordcountMapper extends Mapper&lt;LongWritable, Text, Text, IntWritable&gt; &#123; protected void map(LongWritable key, Text value, Context context) throws IOException, InterruptedException &#123; //得到输入的每一行数据 String line = value.toString(); //通过空格分隔 String[] words = line.split(&quot; &quot;); //循环遍历输出 for (String word : words) &#123; context.write(new Text(word), new IntWritable(1)); &#125; &#125;&#125; src/main/java/WordcountReducer.java123456789101112131415161718import org.apache.hadoop.io.IntWritable;import org.apache.hadoop.io.Text;import org.apache.hadoop.mapreduce.Reducer;import java.io.IOException;/** * Created by zxk on 2017/6/29. */public class WordcountReducer extends Reducer&lt;Text, IntWritable, Text, IntWritable&gt; &#123; protected void reduce(Text key, Iterable&lt;IntWritable&gt; values, Context context) throws IOException, InterruptedException &#123; Integer count = 0; for (IntWritable value : values) &#123; count += value.get(); &#125; context.write(key, new IntWritable(count)); &#125;&#125; src/main/java/WordCountMapReduce.java1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950import org.apache.hadoop.conf.Configuration;import org.apache.hadoop.fs.Path;import org.apache.hadoop.io.IntWritable;import org.apache.hadoop.io.Text;import org.apache.hadoop.mapreduce.Job;import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;/** * Created by zxk on 2017/6/29. */public class WordCountMapReduce &#123; public static void main(String[] args) throws Exception &#123; //创建配置对象 Configuration conf = new Configuration(); //创建job对象 Job job = Job.getInstance(conf, &quot;wordcount&quot;); //设置运行job的类 job.setJarByClass(WordCountMapReduce.class); //设置mapper 类 job.setMapperClass(WordcountMapper.class); //设置reduce 类 job.setReducerClass(WordcountReducer.class); //设置map输出的key value job.setMapOutputKeyClass(Text.class); job.setMapOutputValueClass(IntWritable.class); //设置reduce 输出的 key value job.setOutputKeyClass(Text.class); job.setOutputValueClass(IntWritable.class); //设置输入输出的路径 FileInputFormat.setInputPaths(job, new Path(args[0])); FileOutputFormat.setOutputPath(job, new Path(args[1])); //提交job boolean b = job.waitForCompletion(true); if (!b) &#123; System.out.println(&quot;wordcount task fail!&quot;); &#125; &#125;&#125; 编译打包 在idea中打jar包可以参考这里 点击 运行12&lt;!-- 一些命令与worcount命令相同不再重复 --&gt;hadoop jar hadoop-demo.jar WordCountMapReduce /wordcount/input /wordcount/output 参考 在centos7上搭建hadoop集群CentOS 7搭建Apache Hadoop 3.1.1集群Linux上安装Hadoop集群(CentOS7+hadoop-2.8.0)Centos7虚拟机 搭建 Hadoop3.1.1 教程CentOS 7下安装集群HBase1.2.4windows下idea编写WordCount程序，并打jar包上传到hadoop集群运行 推荐 使用 Docker 搭建 Hadoop 集群","categories":[{"name":"大数据","slug":"大数据","permalink":"http://yoursite.com/categories/大数据/"},{"name":"Hadoop Hbase MapReduce编程","slug":"大数据/Hadoop-Hbase-MapReduce编程","permalink":"http://yoursite.com/categories/大数据/Hadoop-Hbase-MapReduce编程/"}],"tags":[{"name":"大数据","slug":"大数据","permalink":"http://yoursite.com/tags/大数据/"},{"name":"Hadoop Hbase MapReduce编程","slug":"Hadoop-Hbase-MapReduce编程","permalink":"http://yoursite.com/tags/Hadoop-Hbase-MapReduce编程/"}]},{"title":"BugFree安装","slug":"BugFree","date":"2019-05-02T01:54:34.926Z","updated":"2019-04-22T14:06:59.994Z","comments":true,"path":"2019/05/02/BugFree/","link":"","permalink":"http://yoursite.com/2019/05/02/BugFree/","excerpt":"BugFree准备工作：（Windows环境下） XAMPP 版本在5.x.x bugfree_v3.0.1 不要用最新版本的XAMPP，切记。","text":"BugFree准备工作：（Windows环境下） XAMPP 版本在5.x.x bugfree_v3.0.1 不要用最新版本的XAMPP，切记。 下载XAMPP bugfree提取码: ff5d XAMPP 安装双击exe文件傻瓜式安装。 安装 bugfree1.在上一步安装XAMPP时路径C:\\xampp\\htdocs\\下新建文件夹bugfree,将下载bugfree文件解压后的内容复制进去。同时在新建一个BugFile文件夹，用于下一步操作。2.打开XAMPP主界面上的前两个start按钮。3.打开浏览器输入localhost/bugfree,如下图： 4.上图中的全部为绿色的勾勾仅为成功。然后点击继续。5.按照下图中进行配置。 6.然后修改C:\\xampp\\htdocs\\bugfree\\protected\\config中的main.php。全部替换即可。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104&lt;?phpreturn array ( &apos;basePath&apos; =&gt; &apos;C:\\\\xampp\\\\htdocs\\\\bugfree\\\\protected\\\\config\\\\..&apos;, &apos;name&apos; =&gt; &apos;BugFree 3.0.1&apos;, &apos;preload&apos; =&gt; array ( 0 =&gt; &apos;log&apos;, ), &apos;language&apos; =&gt; &apos;zh_cn&apos;, &apos;theme&apos; =&gt; &apos;classic&apos;, &apos;defaultController&apos; =&gt; &apos;site&apos;, &apos;timeZone&apos; =&gt; &apos;Asia/Shanghai&apos;, &apos;import&apos; =&gt; array ( 0 =&gt; &apos;application.models.*&apos;, 1 =&gt; &apos;application.components.*&apos;, 2 =&gt; &apos;application.service.*&apos;, ), &apos;modules&apos; =&gt; array ( &apos;gii&apos; =&gt; array ( &apos;class&apos; =&gt; &apos;system.gii.GiiModule&apos;, &apos;password&apos; =&gt; &apos;123456&apos;, &apos;ipFilters&apos; =&gt; array ( 0 =&gt; &apos;127.0.0.1&apos;, 1 =&gt; &apos;::1&apos;, ), ), ), &apos;components&apos; =&gt; array ( &apos;user&apos; =&gt; array ( &apos;allowAutoLogin&apos; =&gt; true, ), &apos;request&apos; =&gt; array ( &apos;enableCookieValidation&apos; =&gt; true, ), &apos;cache&apos; =&gt; array ( &apos;class&apos; =&gt; &apos;CDbCache&apos;, &apos;connectionID&apos; =&gt; &apos;db&apos;, ), &apos;db&apos; =&gt; array ( &apos;pdoClass&apos; =&gt; &apos;NestedPDO&apos;, &apos;connectionString&apos; =&gt; &apos;mysql:host=localhost;dbname=bugfree;port=3306&apos;, &apos;emulatePrepare&apos; =&gt; true, &apos;username&apos; =&gt; &apos;root&apos;, &apos;password&apos; =&gt; &apos;&apos;, &apos;charset&apos; =&gt; &apos;utf8&apos;, &apos;tablePrefix&apos; =&gt; &apos;bf_&apos;, ), &apos;errorHandler&apos; =&gt; array ( &apos;errorAction&apos; =&gt; &apos;site/error&apos;, ), &apos;log&apos; =&gt; array ( &apos;class&apos; =&gt; &apos;CLogRouter&apos;, &apos;routes&apos; =&gt; array ( 0 =&gt; array ( &apos;class&apos; =&gt; &apos;CFileLogRoute&apos;, &apos;levels&apos; =&gt; &apos;info, error, warning&apos;, &apos;categories&apos; =&gt; &apos;bugfree.*&apos;, ), ), ), ), &apos;params&apos; =&gt; array ( &apos;uploadPath&apos; =&gt; &apos;../BugFile&apos;, &apos;picPreviewApp&apos; =&gt; &apos;http://::1/BugFile&apos;, &apos;allUserGroupId&apos; =&gt; 1, &apos;ldap&apos; =&gt; array ( &apos;host&apos; =&gt; &apos;&apos;, &apos;port&apos; =&gt; &apos;&apos;, &apos;base&apos; =&gt; &apos;&apos;, &apos;user&apos; =&gt; &apos;&apos;, &apos;pass&apos; =&gt; &apos;&apos;, ), &apos;mail&apos; =&gt; array ( &apos;on&apos; =&gt; &apos;1&apos;, &apos;from_address&apos; =&gt; &apos;bugfree-noreply@test.com&apos;, &apos;from_name&apos; =&gt; &apos;BugFree&apos;, &apos;send_method&apos; =&gt; &apos;SMTP&apos;, &apos;send_params&apos; =&gt; array ( &apos;host&apos; =&gt; &apos;&apos;, &apos;smtp_auth&apos; =&gt; false, &apos;username&apos; =&gt; &apos;&apos;, &apos;password&apos; =&gt; &apos;&apos;, ), ), ),)?&gt; 7.刷新之后就会出现登录界面。","categories":[{"name":"软件缺陷","slug":"软件缺陷","permalink":"http://yoursite.com/categories/软件缺陷/"},{"name":"BugFree","slug":"软件缺陷/BugFree","permalink":"http://yoursite.com/categories/软件缺陷/BugFree/"}],"tags":[{"name":"软件缺陷","slug":"软件缺陷","permalink":"http://yoursite.com/tags/软件缺陷/"},{"name":"BugFree","slug":"BugFree","permalink":"http://yoursite.com/tags/BugFree/"}]},{"title":"Android studio-AVD","slug":"AVD","date":"2019-05-02T01:54:34.903Z","updated":"2019-04-08T14:33:58.931Z","comments":true,"path":"2019/05/02/AVD/","link":"","permalink":"http://yoursite.com/2019/05/02/AVD/","excerpt":"AVD","text":"AVD 点击上图红圈中的图标后，在出现的界面中点击Create Virtual Device… 之后会出现以下情况 选择自己喜欢的系统进行下载。 可以参考以下链接： 创建和管理虚拟设备","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"Android studio-AVD","slug":"Android/Android-studio-AVD","permalink":"http://yoursite.com/categories/Android/Android-studio-AVD/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"Android studio-AVD","slug":"Android-studio-AVD","permalink":"http://yoursite.com/tags/Android-studio-AVD/"}]},{"title":"Android 简介","slug":"Android 简介","date":"2019-05-02T01:54:34.897Z","updated":"2018-11-05T04:32:39.000Z","comments":true,"path":"2019/05/02/Android 简介/","link":"","permalink":"http://yoursite.com/2019/05/02/Android 简介/","excerpt":"了解全貌Android发展史&emsp;&emsp;2003年10月，Andy Rubin等人一起创办了Android公司。2005年8月谷歌收购这家仅仅成立了22月的公司，并让Andy Rubin继续负责Android项目。在2008年推出第一个Android系统版本。之后遭到重重阻挠，但是再多的困难也阻挡不了Android快速前进的步伐。现在Android系统是目前世界上市场上占有率最高的移动操作系统。","text":"了解全貌Android发展史&emsp;&emsp;2003年10月，Andy Rubin等人一起创办了Android公司。2005年8月谷歌收购这家仅仅成立了22月的公司，并让Andy Rubin继续负责Android项目。在2008年推出第一个Android系统版本。之后遭到重重阻挠，但是再多的困难也阻挡不了Android快速前进的步伐。现在Android系统是目前世界上市场上占有率最高的移动操作系统。 Android系统架构1.Linux内核层&emsp;&emsp;Android 系统是基于 Linux 内核的，这一层为 Android 设备的各种硬件提供了底层的驱动，如显示驱动、音频驱动、照相机驱动、蓝牙驱动等等。 2.系统运行库&emsp;&emsp;这一层通过一些 C/C++ 库来为 Android 系统提供了主要的特性支持。同时这一层还有 Android 运行时库，主要提供一些核心库，能够允许开发者使用 Java 语言来编写 Android 应用。 Android 运行时库中还包括了 Dalvik 虚拟机（5.0系统之后改为 ART 运行环境）,它使得每一个 Android 应用都能运行在独立的进程中，并且拥有一个自己的 Dalvik 虚拟机实力。相比较于 Java 虚拟机，Dalvik 是专门为移动设备定制的，它针对手机内存、CPU性能有限等情况做了优化处理。 3.应用框架层&emsp;&emsp;这一层主要提供了构建应用程序时可能用到的各种 API ，Android 自带的一些核心应用就是使用这些 API 完成的，开发者也可以通过这些 API 构建自己的应用程序。 4.应用层&emsp;&emsp;手机上的所有应用程序就属于这一层，如系统自带的程序或第三方软件。 Android 已发布的版本Android系统版本及其代号 版本号 系统代号 1.0 无 1.1 Petit Four 1.5 Cupcake 1.6 Donut 2.0/2.1 Éclair 2.2 Froyo 2.3 Gingerbread 3.0/3.1/3.2 Honeycomb 4.0 Ice Cream Sandwich 4.1/4.2/4.3 Jelly Bean 4.4 KitKat 5.0/5.1 Lollipop 6.0 Marshmallow 7.0 Nougat（Android N） 8.0 Oreo（Android O） 9.0 Pie （Android P） Android 应用开发特色1.四大组件&emsp;&emsp;Android系统四大组件分别为活动（Activity）、服务（Service）、广播接收器（Broadcast Receiver)和内容提供器（Content Provider)。 2.丰富的系统控件&emsp;&emsp;为开发者提供了丰富的系统控件，使得开发者更轻松地编写出漂亮的界面。 3.SQLLite 数据库&emsp;&emsp;Android系统自带了轻量级、运算速度极快的嵌入式关系型数据库。不仅支持标准的SQL语法，还可以通过Android封装好的API进行操作，让存储和读取数据变得更为方便。 4.强大的多媒体&emsp;&emsp;Android提供了丰富的多媒体服务。可以在程序中通过代码进行控制。 5.地理位置定位&emsp;&emsp;内置GPS，随时随地提供位置服务。 参考书籍第一行代码（第二版） 郭霖*著","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"简介","slug":"Android/简介","permalink":"http://yoursite.com/categories/Android/简介/"}],"tags":[{"name":"简介","slug":"简介","permalink":"http://yoursite.com/tags/简介/"},{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"}]},{"title":"Android studio安装","slug":"Android studio安装","date":"2019-05-02T01:54:34.890Z","updated":"2018-11-07T09:47:10.000Z","comments":true,"path":"2019/05/02/Android studio安装/","link":"","permalink":"http://yoursite.com/2019/05/02/Android studio安装/","excerpt":"准备 1.配置环境变量 2.安装 3.创建HelloWorld","text":"准备 1.配置环境变量 2.安装 3.创建HelloWorld 配置环境变量 为什么首先要配置环境变量呢？配置环境变量可以防止之后Android studio安装SDK时安装到默认位置，减少C盘的占用空间。 新建 变量名 ANDROID_HOME ，值为 自己创建的放置SDK的路径 安装 首先下载 Android studio &gt;下载完成直接打开。 如果不想安装到C盘也可以选择其他的。 等待一段时间。 点击 cancle 选择喜欢的主题 之后就是漫长的等待… 等待总会有结果的。 创建第一个 Android 程序 HelloWorld 点击上图中的 Start a new Android Studio project Application name 填写 HelloWorldCompany domain 按照系统默认的就行Project location 存放自己代码的位置，可自定义。 系统默认即可 一般选择 Empty Activity 点击 Finish。 等待红线部分加载完毕。加载完成后点击工具栏-Bulid—Bulid Bundle(s)/APK(s)-Bulid APK(s)。之后可以选择自己手机运行自己的程序。也可以选择下图中的自行安装模拟器运行。 之后再补充…","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"Android studio安装","slug":"Android/Android-studio安装","permalink":"http://yoursite.com/categories/Android/Android-studio安装/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"Android studio安装","slug":"Android-studio安装","permalink":"http://yoursite.com/tags/Android-studio安装/"}]},{"title":"AlertDialog","slug":"AlertDialog","date":"2019-05-02T01:54:34.883Z","updated":"2019-04-19T08:14:01.319Z","comments":true,"path":"2019/05/02/AlertDialog/","link":"","permalink":"http://yoursite.com/2019/05/02/AlertDialog/","excerpt":"AlertDialogAlertDialog可以在当前的界面弹出一个对话框，这个对话框是置顶于所有界面元素之上的，能够屏蔽掉其他空间的交互能力，因此AlertDialog一般都是用于提示一些非常重要的内容或者警告信息。比如为了防止用户误删重要内容，在删除前弹出一个确认对话框。","text":"AlertDialogAlertDialog可以在当前的界面弹出一个对话框，这个对话框是置顶于所有界面元素之上的，能够屏蔽掉其他空间的交互能力，因此AlertDialog一般都是用于提示一些非常重要的内容或者警告信息。比如为了防止用户误删重要内容，在删除前弹出一个确认对话框。 创建布局activity_main.xml 123456789101112&lt;LinearLayout android:orientation=&quot;vertical&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;match_parent&quot;&gt; &lt;Button android:id=&quot;@+id/button&quot; android:layout_width=&quot;match_parent&quot; android:layout_height=&quot;wrap_content&quot; android:text=&quot;button&quot;/&gt; &lt;/LinearLayout&gt; 为Button添加事件MainActivity 12345678910111213141516171819202122232425262728293031323334353637public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); Button button = findViewById(R.id.button); button.setOnClickListener(this); &#125; @Override public void onClick(View v) &#123; switch (v.getId()) &#123; case R.id.button: AlertDialog.Builder dialog = new AlertDialog.Builder(MainActivity.this); dialog.setTitle(&quot;This is Dialog&quot;); //设置标题 dialog.setMessage(&quot;Something important.&quot;); //设置内容 dialog.setCancelable(false); //设置是否可以取消 dialog.setPositiveButton(&quot;OK&quot;, new DialogInterface.OnClickListener() &#123; //设置点击确定按钮的事件 @Override public void onClick(DialogInterface dialog, int which) &#123; &#125; &#125;); dialog.setNegativeButton(&quot;Cancle&quot;, new DialogInterface.OnClickListener() &#123; //设置取消按钮的事件 @Override public void onClick(DialogInterface dialog, int which) &#123; &#125; &#125;); dialog.show(); break; default: break; &#125; &#125;&#125;","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/categories/Android/"},{"name":"AlertDialog","slug":"Android/AlertDialog","permalink":"http://yoursite.com/categories/Android/AlertDialog/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/tags/Android/"},{"name":"AlertDialog","slug":"AlertDialog","permalink":"http://yoursite.com/tags/AlertDialog/"}]},{"title":"AJAX 实例","slug":"AJAX实例","date":"2019-05-02T01:54:34.825Z","updated":"2019-02-25T11:58:00.000Z","comments":true,"path":"2019/05/02/AJAX实例/","link":"","permalink":"http://yoursite.com/2019/05/02/AJAX实例/","excerpt":"通过实例来了解AJAX的工作原理。","text":"通过实例来了解AJAX的工作原理。 AJAX的工作原理 AJAX的工作原理 手动尝试 实例解释上面的 AJAX 应用程序包含一个 div 和一个按钮。 div 部分用于显示来自服务器的信息。当按钮被点击时，它负责调用名为 loadXMLDoc() 的函数： 12345678html&gt;&lt;body&gt;&lt;div id=&quot;myDiv&quot;&gt;&lt;h3&gt;Let AJAX change this text&lt;/h3&gt;&lt;/div&gt;&lt;button type=&quot;button&quot; onclick=&quot;loadXMLDoc()&quot;&gt;Change Content&lt;/button&gt;&lt;/body&gt;&lt;/html&gt; 接下来，在页面的 head 部分添加一个&lt; script &gt;标签。该标签中包含了这个 loadXMLDoc() 函数： 12345678&lt;head&gt;&lt;script type=&quot;text/javascript&quot;&gt;function loadXMLDoc()&#123;.... AJAX script goes here ...&#125;&lt;/script&gt;&lt;/head&gt; 参考AJAX 实例","categories":[{"name":"AJAX","slug":"AJAX","permalink":"http://yoursite.com/categories/AJAX/"},{"name":"AJAX基础","slug":"AJAX/AJAX基础","permalink":"http://yoursite.com/categories/AJAX/AJAX基础/"},{"name":"实例","slug":"AJAX/AJAX基础/实例","permalink":"http://yoursite.com/categories/AJAX/AJAX基础/实例/"}],"tags":[{"name":"AJAX","slug":"AJAX","permalink":"http://yoursite.com/tags/AJAX/"},{"name":"实例","slug":"实例","permalink":"http://yoursite.com/tags/实例/"}]},{"title":"AJAX 简介","slug":"AJAX简介","date":"2019-05-02T01:54:34.813Z","updated":"2018-12-19T12:11:57.000Z","comments":true,"path":"2019/05/02/AJAX简介/","link":"","permalink":"http://yoursite.com/2019/05/02/AJAX简介/","excerpt":"AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。","text":"AJAX 是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。 什么是AJAXAJAX=异步 JavaScript 和 XML。AJAX 是一种用于创建快速动态网页的技术。通过在后台与服务器进行少量数据交换，AJAX可以是网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。传统的网页（不使用AJAX）如果需要更新内容，必须要重新加载整个页面。AJAX的应用实例：Google地图等。 AJAX是基于现有的Internet标准AJAX是基于现有的Internet标准，并且联合使用它们： XMLHttpRequest 对象 (异步的与服务器交换数据) JavaScript/DOM (信息显示/交互) CSS (给数据定义样式) XML (作为转换数据的格式) AJAX应用程序与浏览器和平台无关的！ 参考AJAX 简介AJAX 简介","categories":[{"name":"AJAX","slug":"AJAX","permalink":"http://yoursite.com/categories/AJAX/"},{"name":"AJAX基础","slug":"AJAX/AJAX基础","permalink":"http://yoursite.com/categories/AJAX/AJAX基础/"},{"name":"简介","slug":"AJAX/AJAX基础/简介","permalink":"http://yoursite.com/categories/AJAX/AJAX基础/简介/"}],"tags":[{"name":"AJAX","slug":"AJAX","permalink":"http://yoursite.com/tags/AJAX/"},{"name":"简介","slug":"简介","permalink":"http://yoursite.com/tags/简介/"}]}]}