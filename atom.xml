<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yan&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-02T12:55:00.898Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PHP入门</title>
    <link href="http://yoursite.com/2019/08/01/PHP%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2019/08/01/PHP入门/</id>
    <published>2019-08-01T12:41:00.188Z</published>
    <updated>2019-08-02T12:55:00.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码仓库"><a href="#代码仓库" class="headerlink" title="代码仓库"></a>代码仓库</h1><p>仓库地址：<a href="https://github.com/yanxin152133/PHP.git" target="_blank" rel="noopener">GitHub</a></p><p><strong>环境</strong>：      </p><ul><li>Apache/2.2.25 (Win32)</li><li>PHP 7.3.6</li><li>PhpStorm 2019.2</li><li>MySql 5.6</li></ul><h1 id="搭建PHP环境（Windows）"><a href="#搭建PHP环境（Windows）" class="headerlink" title="搭建PHP环境（Windows）"></a>搭建PHP环境（Windows）</h1><h2 id="Apache-下载"><a href="#Apache-下载" class="headerlink" title="Apache 下载"></a>Apache 下载</h2><p>下载地址：<a href="https://archive.apache.org/dist/httpd/binaries/win32/" target="_blank" rel="noopener">Apache msi</a><br><a id="more"></a><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47942980403_d6cb5a4b44_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h2 id="Apache-安装"><a href="#Apache-安装" class="headerlink" title="Apache 安装"></a>Apache 安装</h2><ol><li>双击下载的文件。</li><li>相关配置。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47943015906_fd90108b4a_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>选择自定义安装模式<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47942997977_460a18ec9d_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><h3 id="Apache-目录结构说明"><a href="#Apache-目录结构说明" class="headerlink" title="Apache 目录结构说明"></a>Apache 目录结构说明</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47942998182_e4d3bab27e_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="Apache-httpd-exe介绍"><a href="#Apache-httpd-exe介绍" class="headerlink" title="Apache-httpd.exe介绍"></a>Apache-httpd.exe介绍</h3><p>Httpd.exe的详细应用      </p><ol><li><p>服务器进程：运行之后才能够使用。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47978909873_f73c0d5d20_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>用来查看Apache具有哪些功能以及配置文件是否有错：httpd或者httpd.exe（文件所在目录）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47978911057_67194e20c5_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>查看使用的模块：httpd -M</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47979212733_7e7d0c55bc_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>验证配置文件是否有效：httpd -t</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47979219121_af7c01dac5_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><h2 id="PHP-安装"><a href="#PHP-安装" class="headerlink" title="PHP 安装"></a>PHP 安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>下载地址：<a href="https://windows.php.net/download#php-7.3" target="_blank" rel="noopener">PHP 7.3 (7.3.7)</a>     </p><p><strong>关于php下载时VC各版本的区别和Non Thread Safe、Thread safe的简单辨析</strong></p><p>参考：<a href="https://blog.csdn.net/yeweiyang16/article/details/71108427" target="_blank" rel="noopener">php下载时VC各版本的区别和Non Thread Safe、Thread safe的简单辨析</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li>解压缩</li><li>将压缩包放到E:/server/,同时重命名为PHP7</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;代码仓库&quot;&gt;&lt;a href=&quot;#代码仓库&quot; class=&quot;headerlink&quot; title=&quot;代码仓库&quot;&gt;&lt;/a&gt;代码仓库&lt;/h1&gt;&lt;p&gt;仓库地址：&lt;a href=&quot;https://github.com/yanxin152133/PHP.git&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;：      &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache/2.2.25 (Win32)&lt;/li&gt;
&lt;li&gt;PHP 7.3.6&lt;/li&gt;
&lt;li&gt;PhpStorm 2019.2&lt;/li&gt;
&lt;li&gt;MySql 5.6&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;搭建PHP环境（Windows）&quot;&gt;&lt;a href=&quot;#搭建PHP环境（Windows）&quot; class=&quot;headerlink&quot; title=&quot;搭建PHP环境（Windows）&quot;&gt;&lt;/a&gt;搭建PHP环境（Windows）&lt;/h1&gt;&lt;h2 id=&quot;Apache-下载&quot;&gt;&lt;a href=&quot;#Apache-下载&quot; class=&quot;headerlink&quot; title=&quot;Apache 下载&quot;&gt;&lt;/a&gt;Apache 下载&lt;/h2&gt;&lt;p&gt;下载地址：&lt;a href=&quot;https://archive.apache.org/dist/httpd/binaries/win32/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apache msi&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
      <category term="入门" scheme="http://yoursite.com/categories/PHP/%E5%85%A5%E9%97%A8/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="入门" scheme="http://yoursite.com/tags/%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>饥荒游戏服务器端搭建</title>
    <link href="http://yoursite.com/2019/07/29/%E9%A5%A5%E8%8D%92%E6%B8%B8%E6%88%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2019/07/29/饥荒游戏服务器端搭建/</id>
    <published>2019-07-29T10:20:26.091Z</published>
    <updated>2019-08-02T12:18:10.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux服务器要求"><a href="#Linux服务器要求" class="headerlink" title="Linux服务器要求"></a>Linux服务器要求</h1><ul><li>上行带宽：8KBps 一个玩家；</li><li>内存：差不多一个玩家 65Mbytes；</li><li>CPU：没太大要求</li></ul><a id="more"></a><h1 id="服务器端口开放"><a href="#服务器端口开放" class="headerlink" title="服务器端口开放"></a>服务器端口开放</h1><p><strong>默认情况下，服务器在端口10999上使用UDP流量</strong></p><p>因此需要将服务器的10999端口进行开放</p><h1 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h1><p>为了防止内存不足，开启SWAP。</p><ul><li>首先确认SWAP设置了多少 </li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><ul><li>如果觉得不满意其空间大小，则对SWAP进行删除</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a</span><br></pre></td></tr></table></figure><ul><li>新增SWAP分区</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/root/swapfile bs=1M count=1024</span><br><span class="line">  <span class="comment">#1024大小可根据自己情况进行更改</span></span><br></pre></td></tr></table></figure><ul><li>格式化交换分区文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /root/swapfile</span><br></pre></td></tr></table></figure><ul><li>启用swap分区文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /root/swapfile</span><br></pre></td></tr></table></figure><ul><li>添加开机启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/fstab</span><br></pre></td></tr></table></figure><p>这里提一下vi编辑器的基本用法：<br>进入文本后按键盘上的insert按钮开始编辑，按esc退出编辑，输入:wq保存并退出。           </p><ol><li>添加或修改</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/swapfile swap swap defaults 0 0</span><br></pre></td></tr></table></figure><ol start="2"><li>重启下是否生效</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><ol start="3"><li>重启后输入指令查看下SWAP是否增加</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br></pre></td></tr></table></figure><h1 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">$ sudo apt-get install libstdc++6:i386 libgcc1:i386 libcurl4-gnutls-dev:i386 lib32gcc1</span><br><span class="line"><span class="comment"># CentOS(仅供参考)</span></span><br><span class="line">$ yum -y install glibc.i686 libstdc++.i686 libcurl4-gnutls-dev.i686 libcurl.i686</span><br></pre></td></tr></table></figure><h1 id="安装-SteamCMD"><a href="#安装-SteamCMD" class="headerlink" title="安装 SteamCMD"></a>安装 SteamCMD</h1><p>SteamCMD，顾名思义，就是 Steam 的命令行版本。虽然饥荒服务器本身并不需要用 Steam 进行验证啊之类的，但我们还是得用它来把服务器更新到最新版本，不然其他人是进不来的。</p><p>我们最好新建一个用户来运行 SteamCMD，如果直接用 root 用户运行游戏服务端的话可能会导致严重的安全隐患。在 root 权限下使用以下命令来创建一个新用户： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ useradd -m steam</span><br><span class="line">$ su - steam</span><br></pre></td></tr></table></figure><p>然后在你喜欢的地方创建一个为 SteamCMD 准备的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~/steamcmd  <span class="comment">## 创建目录</span></span><br><span class="line">$ <span class="built_in">cd</span> ~/steamcmd  <span class="comment">## 进入该目录</span></span><br></pre></td></tr></table></figure><p>下载并解压 Linux 专用的 SteamCMD：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz  <span class="comment">##  下载</span></span><br><span class="line">$ tar -xvzf steamcmd_linux.tar.gz  <span class="comment">## 解压</span></span><br></pre></td></tr></table></figure><p>运行 SteamCMD：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./steamcmd.sh</span><br></pre></td></tr></table></figure><p>登录安装退出操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 匿名登录，没必要用用户名密码登录</span></span><br><span class="line">login anonymous</span><br><span class="line"><span class="comment"># 这里我们强制要 Steam 把饥荒服务端安装到此目录下</span></span><br><span class="line"><span class="comment"># 最好用绝对路径，否则可能会安装到奇怪的地方去</span></span><br><span class="line">force_install_dir ../dontstarvetogether_dedicated_server</span><br><span class="line">app_update 343050 validate</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><p>安装完成后，使用 quit 命令退出 steam 程序。</p><ul><li>成功安装所出现的标志：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Success! App <span class="string">'343050'</span> fully installed.</span><br></pre></td></tr></table></figure><h1 id="通过客户端获取配置文件"><a href="#通过客户端获取配置文件" class="headerlink" title="通过客户端获取配置文件"></a>通过客户端获取配置文件</h1><h2 id="服务器端配置文件位置及相关操作"><a href="#服务器端配置文件位置及相关操作" class="headerlink" title="服务器端配置文件位置及相关操作"></a>服务器端配置文件位置及相关操作</h2><p>饥荒的配置目录位于: <strong>~/.klei/DoNotStarveTogether</strong></p><p>然后手动创建一个存档目录：     </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/.klei/DoNotStarveTogether/MyDediServer</span><br></pre></td></tr></table></figure><h2 id="利用客户端创建世界"><a href="#利用客户端创建世界" class="headerlink" title="利用客户端创建世界"></a>利用客户端创建世界</h2><ol><li>进入游戏</li><li>创建自己的世界，设置可自定应。</li><li>以 Windows 为例（Linux/Mac 类似），存档位置位于 <strong>/Users/username/Documents/Klei/DoNotStarveTogether</strong>，也就是文档目录下。</li><li>在该目录的下一级目录中，在一个<strong>全是数字的文件夹</strong>中有一个命名为 Cluster_X 的文件夹（X 为数字编号），提取出刚刚创建的存档。</li></ol><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p><strong>cluster.ini</strong></p><p>修改<strong>bind_ip</strong>和<strong>master_ip</strong>内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[SHARD]</span><br><span class="line">shard_enabled = true</span><br><span class="line">bind_ip = 0.0.0.0 </span><br><span class="line">master_ip = 你的主服务器的 IP</span><br></pre></td></tr></table></figure></p><h2 id="Mod"><a href="#Mod" class="headerlink" title="Mod"></a>Mod</h2><p>进入到服务器的的饥荒安装目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/dontstarvetogether_dedicated_server/mods</span><br></pre></td></tr></table></figure><p>修改该目录下的 dedicated_server_mods_setup.lua 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim dedicated_server_mods_setup.lua </span><br><span class="line"></span><br><span class="line"><span class="comment"># 在该文件中添加类似这样的内容，这串 ID 是 Mod 文件在 Steam 中的 ID</span></span><br><span class="line"><span class="comment"># 可以在提取到的配置文件的 Master/modoverrides.lua 中找到</span></span><br><span class="line"><span class="comment"># 然后添加到本文件中，一行一个</span></span><br><span class="line">ServerModSetup(<span class="string">"362175979"</span>)</span><br></pre></td></tr></table></figure><p>本教程模板：    </p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">ServerModSetup(<span class="string">"1089344410"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"1146082006"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"1200745268"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"1207269058"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"1290228121"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"1301033176"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"352499675"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"362175979"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"375850593"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"378160973"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"380423963"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"444235588"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"458587300"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"462434129"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"488009136"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"577104313"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"622448972"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"666155465"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"682721879"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"785295023"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"841471368"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"892478248"</span>)</span><br><span class="line">ServerModSetup(<span class="string">"934638020"</span>)</span><br></pre></td></tr></table></figure><h2 id="上传配置文件"><a href="#上传配置文件" class="headerlink" title="上传配置文件"></a>上传配置文件</h2><p>将配置文件上传到 <strong>~/.klei/DoNotStarveTogether/MyDediServer</strong>下</p><p>Linux传输文件可参考链接：     </p><ul><li><a href="https://www.runoob.com/linux/linux-comm-scp.html" target="_blank" rel="noopener">Linux scp命令</a></li><li><a href="https://blog.csdn.net/chenjianqi0502/article/details/69943915" target="_blank" rel="noopener">Linux下如何将一个用户下的文件拷贝到另一个用户里</a></li><li><a href="https://www.cnblogs.com/dump/p/7716823.html" target="_blank" rel="noopener">Linux中zip压缩和unzip解压缩命令详解</a></li></ul><h1 id="配置user-id和自己的token"><a href="#配置user-id和自己的token" class="headerlink" title="配置user_id和自己的token"></a>配置user_id和自己的token</h1><p>搭建服务器需要相关的管理人员以及相关token文件</p><ol><li><p>获取相关文件<br>进入 <a href="https://accounts.klei.com/account/info" target="_blank" rel="noopener">https://accounts.klei.com/account/info</a>  该链接</p></li><li><p>按图中步骤进行操作<br>首先获取用户id,下图中的箭头所指的即是用户id，复制之后作为设置管理员文件的信息。</p></li></ol><p><img src="https://live.staticflickr.com/65535/48404433496_87c7015b3f_z.jpg" alt></p><p>点击 <strong>导航栏</strong> – <strong>游戏</strong> – <strong>Don’t Starve Together Server</strong></p><p><img src="https://live.staticflickr.com/65535/48404433451_ba62f3135c_z.jpg" alt></p><p>下图中三个箭头所指的东西任选其一即可，同时最下方也可以支持添加。复制作为token。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48404582862_0cc950201d_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><ol start="3"><li>编辑相关文件<br>先新建 cluster_token.txt 文件，再将此前获取到的 Token 复制到文件中。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch cluster_token.txt</span><br></pre></td></tr></table></figure><p>再新建 adminlist.txt 文件，再将此前获取到的 UserID 复制到文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch adminlist.txt</span><br></pre></td></tr></table></figure><h1 id="启动游戏"><a href="#启动游戏" class="headerlink" title="启动游戏"></a>启动游戏</h1><h2 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h2><p>创建脚本文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~ &amp;&amp; touch startDST.sh</span><br></pre></td></tr></table></figure><p>编辑脚本文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">steamcmd_dir=<span class="string">"<span class="variable">$HOME</span>/steamcmd"</span></span><br><span class="line">install_dir=<span class="string">"<span class="variable">$HOME</span>/dontstarvetogether_dedicated_server"</span></span><br><span class="line">cluster_name=<span class="string">"MyDediServer"</span></span><br><span class="line">dontstarve_dir=<span class="string">"<span class="variable">$HOME</span>/.klei/DoNotStarveTogether"</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$install_dir</span>/bin"</span></span><br><span class="line">run_shared=(./dontstarve_dedicated_server_nullrenderer)</span><br><span class="line">run_shared+=(-console)</span><br><span class="line">run_shared+=(-cluster <span class="string">"<span class="variable">$cluster_name</span>"</span>)</span><br><span class="line">run_shared+=(-monitor_parent_process $$)</span><br><span class="line"><span class="string">"<span class="variable">$&#123;run_shared[@]&#125;</span>"</span> -shard Caves  | sed <span class="string">'s/^/Caves:  /'</span> &amp;</span><br><span class="line"><span class="string">"<span class="variable">$&#123;run_shared[@]&#125;</span>"</span> -shard Master | sed <span class="string">'s/^/Master: /'</span></span><br></pre></td></tr></table></figure><p>给启动脚本添加权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./startDST.sh</span><br></pre></td></tr></table></figure><p>运行：    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./startDST.sh</span><br></pre></td></tr></table></figure><h1 id="更新游戏版本"><a href="#更新游戏版本" class="headerlink" title="更新游戏版本"></a>更新游戏版本</h1><p>创建脚本文件：    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~ &amp;&amp; touch updateDST.sh</span><br></pre></td></tr></table></figure><p>编辑脚本文件：    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">steamcmd_dir=<span class="string">"<span class="variable">$HOME</span>/steamcmd"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 检查并更新更新游戏版本</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$steamcmd_dir</span>"</span></span><br><span class="line">./steamcmd.sh +@ShutdownOnFailedCommand 1 +@NoPromptForPassword 1 +login anonymous +force_install_dir ../dontstarvetogether_dedicated_server +app_update 343050 validate +quit</span><br></pre></td></tr></table></figure><p>给脚本添加权限：    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ./startDST.sh</span><br></pre></td></tr></table></figure><h1 id="模板下载"><a href="#模板下载" class="headerlink" title="模板下载"></a>模板下载</h1><p>下载地址： <a href="https://github.com/yanxin152133/DST" target="_blank" rel="noopener">DST服务器搭建</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Linux服务器要求&quot;&gt;&lt;a href=&quot;#Linux服务器要求&quot; class=&quot;headerlink&quot; title=&quot;Linux服务器要求&quot;&gt;&lt;/a&gt;Linux服务器要求&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;上行带宽：8KBps 一个玩家；&lt;/li&gt;
&lt;li&gt;内存：差不多一个玩家 65Mbytes；&lt;/li&gt;
&lt;li&gt;CPU：没太大要求&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="游戏" scheme="http://yoursite.com/categories/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="饥荒" scheme="http://yoursite.com/categories/%E6%B8%B8%E6%88%8F/%E9%A5%A5%E8%8D%92/"/>
    
    
      <category term="游戏" scheme="http://yoursite.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
      <category term="饥荒" scheme="http://yoursite.com/tags/%E9%A5%A5%E8%8D%92/"/>
    
  </entry>
  
  <entry>
    <title>解决git clone速度慢的问题</title>
    <link href="http://yoursite.com/2019/07/16/%E8%A7%A3%E5%86%B3git%20clone%E9%80%9F%E5%BA%A6%E6%85%A2%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/07/16/解决git clone速度慢的问题/</id>
    <published>2019-07-16T12:12:59.244Z</published>
    <updated>2019-07-17T07:05:14.312Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><a id="more"></a><h2 id="1-在git内部设置代理"><a href="#1-在git内部设置代理" class="headerlink" title="1. 在git内部设置代理"></a>1. 在git内部设置代理</h2><ul><li>命令行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy socks5://127.0.0.1:1080</span><br><span class="line">git config --global https.proxy socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure><ul><li>直接编辑相关文件</li></ul><p><strong>C:\Users\用户名</strong>文件夹下的 <strong>.gitconfig</strong>,点击打开。<br>将以下内容添加进去。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[http]</span><br><span class="line">proxy = socks5://127.0.0.1:1080</span><br><span class="line">[https]</span><br><span class="line">proxy = socks5://127.0.0.1:1080</span><br></pre></td></tr></table></figure></p><h2 id="2-注意下载时是否是https"><a href="#2-注意下载时是否是https" class="headerlink" title="2. 注意下载时是否是https"></a>2. 注意<strong>下载时是否是https</strong></h2><h2 id="3-在使用代理下载时，会遇到git-push需要每次输入密码。"><a href="#3-在使用代理下载时，会遇到git-push需要每次输入密码。" class="headerlink" title="3. 在使用代理下载时，会遇到git push需要每次输入密码。"></a>3. 在使用代理下载时，会遇到git push需要每次输入密码。</h2><p>通过以下方式解决该问题。      </p><ul><li><p>设置记住密码（默认15分钟）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper cache</span><br></pre></td></tr></table></figure></li><li><p>如果想自己设置时间，可以这样做：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config credential.helper <span class="string">'cache --timeout=3600'</span></span><br></pre></td></tr></table></figure></li></ul><p>这样就设置一个小时之后失效</p><ul><li>长期存储密码：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://juejin.im/post/5a6c7806f265da3e355b4d1d" target="_blank" rel="noopener">提高 git clone 速度</a></li><li><a href="https://blog.csdn.net/hanqingsong412/article/details/50464465" target="_blank" rel="noopener">git设置代理、记住密码</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h1&gt;
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
      <category term="git clone速度慢" scheme="http://yoursite.com/categories/git/git-clone%E9%80%9F%E5%BA%A6%E6%85%A2/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="git clone速度慢" scheme="http://yoursite.com/tags/git-clone%E9%80%9F%E5%BA%A6%E6%85%A2/"/>
    
  </entry>
  
  <entry>
    <title>Java基础</title>
    <link href="http://yoursite.com/2019/07/14/java%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/07/14/java基础/</id>
    <published>2019-07-14T13:17:20.148Z</published>
    <updated>2019-07-31T15:30:19.242Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码仓库地址"><a href="#代码仓库地址" class="headerlink" title="代码仓库地址"></a>代码仓库地址</h1><p>欢迎下载：<a href="https://github.com/yanxin152133/java" target="_blank" rel="noopener">GitHub</a></p><p>运行环境：    </p><ul><li>IntelliJ IDEA 2019.1.3(Ultimate Edition)</li><li>jdk 1.8.0_211</li></ul><h1 id="Java-基础"><a href="#Java-基础" class="headerlink" title="Java 基础"></a>Java 基础</h1><h1 id="Java简介"><a href="#Java简介" class="headerlink" title="Java简介"></a>Java简介</h1><a id="more"></a><p>Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程。      </p><p>Java具有简单性、面向对象、分布式、健壮性、安全性、平台独立与可移植性、多线程、动态性等特点 。Java可以编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等。</p><p><a href="https://baike.baidu.com/item/Java/85979?fr=aladdin" target="_blank" rel="noopener">详情</a></p><h1 id="运行环境搭建"><a href="#运行环境搭建" class="headerlink" title="运行环境搭建"></a>运行环境搭建</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>JDK建议使用1.8及以上的版本。<br>官方下载路径：<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">jdk下载路地址</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>双击下载软件，一路单击下一步即可。     </p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p><strong>Windows</strong>：右击【我的电脑】→【属性】→【高级系统设置】→【环境变量】→【系统变量】→【新建】，接着如下图所示：<br><img src="https://farm8.staticflickr.com/7873/40480682053_903c92b01b_b.jpg" alt="java_home"></p><p>在【系统变量】的path中添加 <strong>%JAVA_HOME%\bin</strong>。</p><p>验证，如下图所示：<br><img src="https://farm8.staticflickr.com/7860/40480681993_9a639b1dc2_b.jpg" alt="java"></p><h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">helloworld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"helloworld"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Hello-World-运行原理"><a href="#Hello-World-运行原理" class="headerlink" title="Hello World 运行原理"></a>Hello World 运行原理</h2><div id="flowchart-0" class="flow-chart"></div><h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a>Intellij IDEA</h2><p>下载路径：<a href="https://www.jetbrains.com/idea/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">indea U</a></p><h3 id="激活（针对学生的免费使用计划）"><a href="#激活（针对学生的免费使用计划）" class="headerlink" title="激活（针对学生的免费使用计划）"></a>激活（针对学生的免费使用计划）</h3><p>参考：<a href="https://blog.csdn.net/iemdm1110/article/details/53365881" target="_blank" rel="noopener">Intellij IDEA的下载和使用（针对学生的免费使用计划）</a></p><h1 id="注释、标识符命名规则及Java中的关键字"><a href="#注释、标识符命名规则及Java中的关键字" class="headerlink" title="注释、标识符命名规则及Java中的关键字"></a>注释、标识符命名规则及Java中的关键字</h1><h2 id="1-Java注释"><a href="#1-Java注释" class="headerlink" title="1. Java注释"></a>1. Java注释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 单行注释：//</span><br><span class="line">2. 多行注释：/*。。。。。*/</span><br><span class="line">3. 文档注释：/**。。。*/</span><br></pre></td></tr></table></figure><h2 id="2-标识符命名"><a href="#2-标识符命名" class="headerlink" title="2. 标识符命名"></a>2. 标识符命名</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">标识符定义：Java语言中，对于变量、常量、函数、语句块也有名字，我们统统称为Java标识符。</span><br><span class="line"></span><br><span class="line">标识符作用：标识符是用来给类、对象、方法、常量、接口和自定义数据类型命令的。</span><br><span class="line">     </span><br><span class="line">标识符命名规则：Java标识符由数字、字母和下划线（_），美元符号（$）组成。在Java中是区分大小写的，而且还要求首位不能是数字。最重要的是，Java关键字不能当作Java标识符。</span><br></pre></td></tr></table></figure><h2 id="3-Java关键字"><a href="#3-Java关键字" class="headerlink" title="3. Java关键字"></a>3. Java关键字</h2><table><thead><tr><th><strong>访问控制</strong></th><th><strong>private</strong></th><th><strong>protected</strong></th><th><strong>public</strong></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>类，方法和变量修饰符</strong></td><td><strong>abstract</strong></td><td><strong>class</strong></td><td><strong>extends</strong></td><td><strong>final</strong></td><td><strong>implements</strong></td><td><strong>interface</strong></td><td><strong>native</strong></td></tr><tr><td></td><td><strong>new</strong></td><td><strong>static</strong></td><td><strong>strictfp</strong></td><td><strong>synchronized</strong></td><td><strong>transient</strong></td><td><strong>volatile</strong></td><td></td></tr><tr><td><strong>程序控制</strong></td><td><strong>break</strong></td><td><strong>continue</strong></td><td><strong>return</strong></td><td><strong>do</strong></td><td><strong>while</strong></td><td><strong>if</strong></td><td><strong>else</strong></td></tr><tr><td></td><td><strong>for</strong></td><td><strong>instanceof</strong></td><td><strong>switch</strong></td><td><strong>case</strong></td><td><strong>default</strong></td><td></td><td></td></tr><tr><td><strong>错误处理</strong></td><td><strong>try</strong></td><td><strong>catch</strong></td><td><strong>throw</strong></td><td><strong>throws</strong></td><td><strong>finally</strong></td><td></td><td></td></tr><tr><td><strong>包相关</strong></td><td><strong>import</strong></td><td><strong>package</strong></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><strong>基本类型</strong></td><td><strong>boolean</strong></td><td><strong>byte</strong></td><td><strong>char</strong></td><td><strong>double</strong></td><td><strong>float</strong></td><td><strong>int</strong></td><td><strong>long</strong></td></tr><tr><td></td><td><strong>short</strong></td><td><strong>null</strong></td><td><strong>true</strong></td><td><strong>false</strong></td><td></td><td></td><td></td></tr><tr><td><strong>变量引用</strong></td><td><strong>super</strong></td><td><strong>this</strong></td><td><strong>void</strong></td><td></td><td></td><td></td><td></td></tr><tr><td><strong>保留字</strong></td><td><strong>goto</strong></td><td><strong>const</strong></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>参考：<a href="http://cyw3.github.io/YalesonChan/2016/Java-key.html" target="_blank" rel="noopener">Java 关键字总结</a>                    </p><h1 id="Java基本数据类型"><a href="#Java基本数据类型" class="headerlink" title="Java基本数据类型"></a>Java基本数据类型</h1><h2 id="1-数据类型分类"><a href="#1-数据类型分类" class="headerlink" title="1. 数据类型分类"></a>1. 数据类型分类</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48287266636_32ed239f62_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="2-整数类型"><a href="#2-整数类型" class="headerlink" title="2. 整数类型"></a>2. 整数类型</h2><table><thead><tr><th>序号</th><th>数据类型</th><th>大小/位</th><th>可表示的数据范围</th></tr></thead><tbody><tr><td>1</td><td>byte(位)</td><td>8</td><td>-2<sup>7</sup>到（2<sup>6</sup>-1）</td></tr><tr><td>2</td><td>short(整型)</td><td>16</td><td>-2<sup>15</sup>到（2<sup>15</sup>-1）</td></tr><tr><td>3</td><td>int(整型)</td><td>32</td><td>-2<sup>31</sup>到（2<sup>31</sup>-1）</td></tr><tr><td>4</td><td>long(长整型)</td><td>64</td><td>-2<sup>63</sup>到（2<sup>63</sup>-1）</td></tr></tbody></table><p>Byte数据范围表示   </p><table><thead><tr><th>符号位</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th><th>1</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>符号位0表示正   范围  00000000~01111111<br>符号位1表示负   范围  10000000~11111111（减一取反）</p><p>代码实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:52</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个int类型的变量</span></span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="comment">//给变量a赋值</span></span><br><span class="line">        a=<span class="number">1</span>;</span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个int类型的变量a2</span></span><br><span class="line">        <span class="keyword">int</span> a2=<span class="number">1</span>;</span><br><span class="line">        System.out.println(<span class="string">"a2="</span>+a2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个byte类型的变量b</span></span><br><span class="line">        <span class="keyword">byte</span> b=<span class="number">3</span>;</span><br><span class="line">        System.out.println(<span class="string">"b="</span>+b);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个short类型的变量</span></span><br><span class="line">        <span class="keyword">short</span> s=<span class="number">4</span>;</span><br><span class="line">        System.out.println(<span class="string">"s="</span>+s);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个long类型的变量l</span></span><br><span class="line">        <span class="keyword">long</span> l=<span class="number">5</span>;</span><br><span class="line">        System.out.println(<span class="string">"l="</span>+l);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> a11=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> a22=<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> a3=a11+a22;</span><br><span class="line">        System.out.println(<span class="string">"a1+a2="</span>+a3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-浮点类型"><a href="#3-浮点类型" class="headerlink" title="3. 浮点类型"></a>3. 浮点类型</h2><table><thead><tr><th>序号</th><th>数据类型</th><th>大小/位</th><th>可表示的数据范围</th></tr></thead><tbody><tr><td>1</td><td>float(单精度)</td><td>32</td><td>-3.4E38(-3.4x10<sup>38</sup>) 到 3.4E38(3.4x10<sup>38</sup>))</td></tr><tr><td>2</td><td>double(双精度)</td><td>64</td><td>-1.7E308(-1.7x10<sup>308</sup>) 到 1.7E308(1.7x10<sup>308</sup>))</td></tr></tbody></table><p>代码示例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个float类型的变量f</span></span><br><span class="line">        <span class="comment">//小数默认是double类型，所以必须加一个f,来表示float类型</span></span><br><span class="line">        <span class="keyword">float</span> f=<span class="number">1.1f</span>;</span><br><span class="line">        System.out.println(<span class="string">"f="</span>+f);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个double类型变量d</span></span><br><span class="line">        <span class="keyword">double</span> d=<span class="number">1.2</span>;</span><br><span class="line">        System.out.println(<span class="string">"d="</span>+d);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取float的最大值</span></span><br><span class="line">        <span class="keyword">float</span> maxF=Float.MAX_VALUE;</span><br><span class="line">        System.out.println(<span class="string">"float最大值："</span>+maxF);</span><br><span class="line">        <span class="comment">//获取float的最小值</span></span><br><span class="line">        <span class="keyword">float</span> minF=Float.MIN_VALUE;</span><br><span class="line">        System.out.println(<span class="string">"float最小值："</span>+minF);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-字符型"><a href="#4-字符型" class="headerlink" title="4. 字符型"></a>4. 字符型</h2><p>字符型常量有3种表示形式。char     </p><pre><code>1. 直接通过单个字符来指定字符型常量，如‘A’，‘b’，‘5’；2. 通过转义字符表示特殊字符型常量，如‘\n’,‘\\’;3. 直接使用Unicode值来表示字符型常量，如‘\u66f9’，‘\yu950b’；</code></pre><table><thead><tr><th>转义字符</th><th>说明</th></tr></thead><tbody><tr><td>\b</td><td>退格</td></tr><tr><td>\n</td><td>换行</td></tr><tr><td>\t</td><td>制表符</td></tr><tr><td>\”</td><td>双引号</td></tr><tr><td>\’</td><td>单引号</td></tr><tr><td>\</td><td>反斜杠</td></tr><tr><td>\r</td><td>回车符</td></tr></tbody></table><p>代码示例:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个单个字符</span></span><br><span class="line">        <span class="keyword">char</span> c1=<span class="string">'A'</span>;</span><br><span class="line">        System.out.println(<span class="string">"c1="</span>+c1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义一个反斜杠字符</span></span><br><span class="line">        <span class="keyword">char</span> c2=<span class="string">'\\'</span>;</span><br><span class="line">        System.out.println(<span class="string">"c2="</span>+c2);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//用Unicode编码输出自己的名字</span></span><br><span class="line">        <span class="keyword">char</span> c3=<span class="string">'\u66f9'</span>;</span><br><span class="line">        <span class="keyword">char</span> c4=<span class="string">'\u950b'</span>;</span><br><span class="line">        System.out.println(<span class="string">"c3="</span>+c3);</span><br><span class="line">        System.out.println(<span class="string">"c4="</span>+c4);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="5-布尔类型"><a href="#5-布尔类型" class="headerlink" title="5. 布尔类型"></a>5. 布尔类型</h2><p>布尔类型的变量只有true(真)和false(假)两种。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个布尔类型变量b1</span></span><br><span class="line">        <span class="keyword">boolean</span> b1=<span class="keyword">true</span>;</span><br><span class="line">        System.out.println(<span class="string">"b1="</span>+b1);</span><br><span class="line">        <span class="comment">//定义一个布尔类型变量b2</span></span><br><span class="line">        <span class="keyword">boolean</span> b2=<span class="keyword">false</span>;</span><br><span class="line">        System.out.println(<span class="string">"b2="</span>+b2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-基本类型的类型转换"><a href="#6-基本类型的类型转换" class="headerlink" title="6. 基本类型的类型转换"></a>6. 基本类型的类型转换</h2><pre><code>1. 自动类型转换条件：      1. 转换前后的数据类型兼容；     2. 转换后的数据类型的表示范围要比转换前的大；2. 强制类型转换</code></pre><p>代码示例：    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//自动类型转换</span></span><br><span class="line">        <span class="keyword">short</span> s=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="comment">//自动类型转换 short类型转成int类型</span></span><br><span class="line">        i=s;</span><br><span class="line">        System.out.println(<span class="string">"i="</span>+i);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//强制类型转换</span></span><br><span class="line">        <span class="keyword">double</span> d=<span class="number">1.333</span>;</span><br><span class="line">        <span class="keyword">float</span> f;</span><br><span class="line">        <span class="comment">//把double类型的数据强制转换成float类型</span></span><br><span class="line">        f=(<span class="keyword">float</span>) d;</span><br><span class="line">        System.out.println(<span class="string">"f="</span>+f);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java运算符与表达式"><a href="#Java运算符与表达式" class="headerlink" title="Java运算符与表达式"></a>Java运算符与表达式</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48287869506_1ed621abc2_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="1-赋值运算符"><a href="#1-赋值运算符" class="headerlink" title="1. 赋值运算符"></a>1. 赋值运算符</h2><p>符号：=（赋值）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义变量a</span></span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="comment">//给变量a赋值</span></span><br><span class="line">        a=<span class="number">1</span>;</span><br><span class="line">        System.out.println(<span class="string">"a="</span>+a);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义变量a，并且给a赋值</span></span><br><span class="line">        <span class="keyword">int</span> a2=<span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">"a2="</span>+a2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2-算数运算符"><a href="#2-算数运算符" class="headerlink" title="2. 算数运算符"></a>2. 算数运算符</h2><p>符号：+（加），-（减），*（乘），/（除），%（取模）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> b=<span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//+运算符</span></span><br><span class="line">        System.out.println(a+<span class="string">"+"</span>+b+<span class="string">"="</span>+(a+b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//-运算符</span></span><br><span class="line">        System.out.println(a+<span class="string">"-"</span>+b+<span class="string">"="</span>+(a-b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//*运算符</span></span><br><span class="line">        System.out.println(a+<span class="string">"*"</span>+b+<span class="string">"="</span>+(a*b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// /运算符</span></span><br><span class="line">        System.out.println(a+<span class="string">"/"</span>+b+<span class="string">"="</span>+(a/b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//%运算符</span></span><br><span class="line">        System.out.println(a+<span class="string">"%"</span>+b+<span class="string">"="</span>+(a%b));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-自增与自减运算符"><a href="#3-自增与自减运算符" class="headerlink" title="3. 自增与自减运算符"></a>3. 自增与自减运算符</h2><p>符号：++（自增），–（自减）<br><strong>重点：a++和++a的区别</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//a++表示先做赋值操作，然后自增</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        int b=a++;</span></span><br><span class="line"><span class="comment">        System.out.println("b="+b);</span></span><br><span class="line"><span class="comment">        System.out.println("a="+a);</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//++a表示先自增，然后赋值操作</span></span><br><span class="line">        <span class="keyword">int</span> b=++a;</span><br><span class="line">        System.out.println(<span class="string">"b="</span>+b);</span><br><span class="line">        System.out.println(<span class="string">"a="</span>+a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-逻辑运算符"><a href="#4-逻辑运算符" class="headerlink" title="4. 逻辑运算符"></a>4. 逻辑运算符</h2><p>符号：&amp;&amp;（与），&amp;（不短路与），||（或），|（不短路或），!(非)，^（亦或）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 13:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// &amp;&amp; 与  前后两个操作数必须都是true才返回true，否则返回false</span></span><br><span class="line">        <span class="keyword">boolean</span> b1 = (<span class="number">5</span> &lt; <span class="number">3</span>) &amp;&amp; (<span class="number">4</span> &gt; <span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">"b1 = "</span> + b1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&amp; 不短路与</span></span><br><span class="line">        <span class="keyword">boolean</span> b2 = (<span class="number">5</span> &lt; <span class="number">3</span>) &amp; (<span class="number">4</span> &gt; <span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">"b2 = "</span> + b2);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//一般都使用 &amp;&amp;</span></span><br><span class="line">        <span class="comment">//原因：效率高</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// || 或 只要两个操作数中有一个是true，就返回true，否则返回false</span></span><br><span class="line">        <span class="keyword">boolean</span> b3 = (<span class="number">2</span> &lt; <span class="number">3</span>) || (<span class="number">4</span> &gt; <span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">"b3 = "</span> + b3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// | 不短路或</span></span><br><span class="line">        <span class="keyword">boolean</span> b4 = (<span class="number">2</span> &lt; <span class="number">3</span>) | (<span class="number">4</span> &gt; <span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">"b4 = "</span> + b4);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ! 非，如果操作数为true，返回false，否则返回true</span></span><br><span class="line">        <span class="keyword">boolean</span> b5 = !(<span class="number">3</span> &lt; <span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="string">"b5 = "</span> + b5);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ^ 异或 当两个操作数不相同时，返回true，否则返回false</span></span><br><span class="line">        <span class="keyword">boolean</span> b6 = (<span class="number">5</span> &gt; <span class="number">4</span>) ^ (<span class="number">4</span> &gt; <span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">"b6 = "</span> + b6);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="5-关系运算符"><a href="#5-关系运算符" class="headerlink" title="5. 关系运算符"></a>5. 关系运算符</h2><p>符号：&gt;(大于)，&lt;(小于)，&gt;=（大于等于），&lt;=(小于等于)，==（等于），!=(不等于)<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 14:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// &gt; 大于</span></span><br><span class="line">        System.out.println(a + <span class="string">"&gt;"</span> + b + <span class="string">":"</span> + (a &gt; b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// &lt; 小于</span></span><br><span class="line">        System.out.println(a + <span class="string">"&lt;"</span> + b + <span class="string">":"</span> + (a &lt; b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// &gt;= 大于等于</span></span><br><span class="line">        System.out.println(a + <span class="string">"&gt;="</span> + b + <span class="string">":"</span> + (a &gt;= b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// &lt;= 小于等于</span></span><br><span class="line">        System.out.println(a + <span class="string">"&lt;="</span> + b + <span class="string">":"</span> + (a &lt;= b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// == 等于</span></span><br><span class="line">        System.out.println(a + <span class="string">"=="</span> + b + <span class="string">":"</span> + (a == b));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// != 不等于</span></span><br><span class="line">        System.out.println(a + <span class="string">"!="</span> + b + <span class="string">":"</span> + (a != b));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="6-三目运算符"><a href="#6-三目运算符" class="headerlink" title="6. 三目运算符"></a>6. 三目运算符</h2><p>格式：（表达式）？表达式为true返回值A：表达式为false返回值B<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 14:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//三目运算符</span></span><br><span class="line">        String s=<span class="number">2</span>&gt;<span class="number">3</span>?<span class="string">"表达式为真"</span>:<span class="string">"表达式为假"</span>;</span><br><span class="line">        System.out.println(<span class="string">"s = "</span> + s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="Java选择与循环语句"><a href="#Java选择与循环语句" class="headerlink" title="Java选择与循环语句"></a>Java选择与循环语句</h1><h2 id="1-程序的选择结构"><a href="#1-程序的选择结构" class="headerlink" title="1. 程序的选择结构"></a>1. 程序的选择结构</h2><pre><code>1. if 语句2. if...else 语句3. if...else if...else 语句</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 15:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=-<span class="number">1</span>;</span><br><span class="line">        <span class="comment">// if语句</span></span><br><span class="line">        <span class="keyword">if</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(a+<span class="string">"是正数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//if...else语句</span></span><br><span class="line">        <span class="keyword">if</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(a+<span class="string">"是正数"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(a+<span class="string">"不是正数"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//if...else if...else</span></span><br><span class="line">        <span class="keyword">if</span> (a&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(a+<span class="string">"是正数"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (a&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(a+<span class="string">"是负数"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(a+<span class="string">"是0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>4. switch 语句</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 15:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"请输入一个数字"</span>);</span><br><span class="line">        <span class="comment">//定义一个系统输入对象</span></span><br><span class="line">        Scanner scanner=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n=scanner.nextInt();</span><br><span class="line">        <span class="comment">//System.out.println(n);</span></span><br><span class="line">        <span class="keyword">switch</span> (n)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:&#123;</span><br><span class="line">                System.out.println(<span class="string">"用户输入的是1"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:&#123;</span><br><span class="line">                System.out.println(<span class="string">"用户输入的是2"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">default</span>:&#123;</span><br><span class="line">                System.out.println(<span class="string">"用户输入的是其他数字"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-程序的循环结构"><a href="#2-程序的循环结构" class="headerlink" title="2. 程序的循环结构"></a>2. 程序的循环结构</h2><pre><code>1. while 循环2. do...while 循环3. for 循环4. for 循环的嵌套</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 15:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//在控制台输出1到10</span></span><br><span class="line">        <span class="comment">//while 循环语句</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; <span class="number">11</span>) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">"  "</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"\n-------------------"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// do...while 循环语句</span></span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.print(j + <span class="string">"    "</span>);</span><br><span class="line">            j++;</span><br><span class="line">        &#125; <span class="keyword">while</span> (j &lt; <span class="number">11</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"\n-------------------"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//while和do...while的区别</span></span><br><span class="line">        <span class="comment">//while是先判断后执行，do...while是先执行后判断</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// for 循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt; <span class="number">11</span>; k++) &#123;</span><br><span class="line">            System.out.printf(k + <span class="string">"   "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"\n-------------------"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// for循环的嵌套</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">10</span>; m++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; <span class="number">10</span>; n++) &#123;</span><br><span class="line">                System.out.print(<span class="string">"m="</span> + m + <span class="string">"n="</span> + n+<span class="string">"   "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>5. 求水仙花数</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 15:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">100</span>;i&lt;=<span class="number">999</span>;i++)&#123;</span><br><span class="line">            <span class="comment">//求出百位数</span></span><br><span class="line">            <span class="keyword">int</span> b=i/<span class="number">100</span>;</span><br><span class="line">            <span class="comment">//求出十位数</span></span><br><span class="line">            <span class="keyword">int</span> s=(i-b*<span class="number">100</span>)/<span class="number">10</span>;</span><br><span class="line">            <span class="comment">//求出个位数</span></span><br><span class="line">            <span class="keyword">int</span> g=(i-b*<span class="number">100</span>-s*<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i==g*g*g+s*s*s+b*b*b)&#123;</span><br><span class="line">                System.out.println(i+<span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-循环结构的控制"><a href="#3-循环结构的控制" class="headerlink" title="3. 循环结构的控制"></a>3. 循环结构的控制</h2><pre><code>1. break 语句结束循环</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 15:52</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(<span class="string">"i="</span>+i+<span class="string">"   j="</span>+j+<span class="string">"  "</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 15:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        outer:</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">break</span> outer;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(<span class="string">"i="</span>+i+<span class="string">"   j="</span>+j+<span class="string">"  "</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>2. continue 语句结束本次循环</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 15:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo7</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">4</span>)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(<span class="string">"i="</span>+i+<span class="string">"  "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>3. return 语句结束方法</code></pre><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/16 15:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">10</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (i==<span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                System.out.print(<span class="string">"i="</span>+i+<span class="string">"   j="</span>+j+<span class="string">"  "</span>);</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"执行到这里了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java数组"><a href="#Java数组" class="headerlink" title="Java数组"></a>Java数组</h1><h2 id="1-数组简介"><a href="#1-数组简介" class="headerlink" title="1. 数组简介"></a>1. 数组简介</h2><p>数组是Java中最常见的一种数据结构，可用于存储多个数据。</p><h2 id="2-数组的定义"><a href="#2-数组的定义" class="headerlink" title="2. 数组的定义"></a>2. 数组的定义</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type[] arrayName;或者type arrayName[];</span><br></pre></td></tr></table></figure><p>实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> []arr; <span class="keyword">int</span> arr[];</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap06;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/17 14:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组</span></span><br><span class="line">        <span class="keyword">int</span> []arr;</span><br><span class="line">        <span class="comment">//定义一个数组</span></span><br><span class="line">        <span class="keyword">int</span> arr2[];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-数组的初始化"><a href="#3-数组的初始化" class="headerlink" title="3. 数组的初始化"></a>3. 数组的初始化</h2><pre><code>1. 静态初始化</code></pre><p>格式<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayName=<span class="keyword">new</span> type[]&#123;element1,element2,element3.....&#125;</span><br></pre></td></tr></table></figure></p><p>实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr1[]=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap06;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/17 14:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，并且静态初始化</span></span><br><span class="line">        <span class="keyword">int</span> arr[]=<span class="keyword">new</span>  <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//普通的遍历数组方式</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">            System.out.println(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"------------"</span>);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//foreach方法遍历数组</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j:arr)&#123;</span><br><span class="line">            System.out.println(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>2. 动态初始化</code></pre><p>格式<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayName=<span class="keyword">new</span> type[length];</span><br></pre></td></tr></table></figure></p><p>实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr2[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap06;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/17 14:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个数组，然后动态初始化，长度是3</span></span><br><span class="line">        <span class="keyword">int</span> arr[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i:arr)&#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内存分析<br><img src="https://live.staticflickr.com/65535/48305077142_c9fb3c2e4b_z.jpg" alt></p><h2 id="4-二维数组及多维数组"><a href="#4-二维数组及多维数组" class="headerlink" title="4. 二维数组及多维数组"></a>4. 二维数组及多维数组</h2><p>二维数组静态化初始化 格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayName=<span class="keyword">new</span> type[]&#123;&#123;element1,element2&#125;,&#123;element1,element2&#125;,&#123;element1,element2&#125;&#125;;</span><br></pre></td></tr></table></figure></p><p>实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span>[][]arr=<span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;,&#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;&#125;;</span><br></pre></td></tr></table></figure></p><p>二维数组动态初始化 格式：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arrayName=<span class="keyword">new</span> type[length][length];</span><br></pre></td></tr></table></figure></p><p>实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> [][]arr2=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">3</span>];</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap06;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/17 14:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个二维数组,并静态初始化</span></span><br><span class="line">        <span class="keyword">int</span> [][]arr=<span class="keyword">new</span> <span class="keyword">int</span>[][]&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;,&#123;<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;arr[<span class="number">0</span>].length;j++)&#123;</span><br><span class="line">                System.out.print(arr[i][j]+<span class="string">"  "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="comment">//二维数组的动态初始化</span></span><br><span class="line">        <span class="keyword">int</span> [][]arr2=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr2.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;arr2[<span class="number">0</span>].length;j++)&#123;</span><br><span class="line">                System.out.print(arr2[i][j]+<span class="string">"  "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://live.staticflickr.com/65535/48305176832_bedf7286a8_z.jpg" alt></p><h2 id="5-起泡法"><a href="#5-起泡法" class="headerlink" title="5. 起泡法"></a>5. 起泡法</h2><p>对4，21，0，-12，-3排序。<br>原理：起泡法是从一端开始比较的，第一次循环就是把最大数放到最后一个位置，第二次循环就是把第二最大数放到倒数第二个位置。       </p><table><thead><tr><th></th><th>4</th><th>21</th><th>0</th><th>-12</th><th>-3</th></tr></thead><tbody><tr><td>第1次</td><td>4</td><td>0</td><td>-12</td><td>-3</td><td>21</td></tr><tr><td>第2次</td><td>0</td><td>-12</td><td>-3</td><td>4</td><td>21</td></tr><tr><td>第3次</td><td>-12</td><td>-3</td><td>0</td><td>4</td><td>21</td></tr><tr><td>第4次</td><td>-12</td><td>-3</td><td>0</td><td>4</td><td>21</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap06;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/17 14:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="keyword">int</span> []arr=&#123;<span class="number">4</span>,<span class="number">21</span>,<span class="number">0</span>,-<span class="number">12</span>,-<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//循环的次数n-1次</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.length-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            <span class="comment">//比较次数n-1-i</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;arr.length-<span class="number">1</span>-i;j++)&#123;</span><br><span class="line">                <span class="comment">//假如前面一个数大于后面一个数，则交换数据</span></span><br><span class="line">                <span class="keyword">if</span> (arr[j]&gt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    temp=arr[j];</span><br><span class="line">                    arr[j]=arr[j+<span class="number">1</span>];</span><br><span class="line">                    arr[j+<span class="number">1</span>]=temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i:arr)&#123;</span><br><span class="line">            System.out.print(i+<span class="string">"  "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java面向对象"><a href="#Java面向对象" class="headerlink" title="Java面向对象"></a>Java面向对象</h1><h2 id="1-面向对象的基本概念"><a href="#1-面向对象的基本概念" class="headerlink" title="1. 面向对象的基本概念"></a>1. 面向对象的基本概念</h2><p>定义：以基于对象的思维去分析和解决问题，万物皆对象；<br>三大特性：封装，继承，多态；</p><h2 id="2-类与对象"><a href="#2-类与对象" class="headerlink" title="2. 类与对象"></a>2. 类与对象</h2><h3 id="1-类与对象的关系"><a href="#1-类与对象的关系" class="headerlink" title="1. 类与对象的关系"></a>1. 类与对象的关系</h3><h3 id="2-类的定义"><a href="#2-类的定义" class="headerlink" title="2. 类的定义"></a>2. 类的定义</h3><h3 id="3-类的创建及使用"><a href="#3-类的创建及使用" class="headerlink" title="3. 类的创建及使用"></a>3. 类的创建及使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 13:39</span></span><br><span class="line"><span class="comment"> * Person类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    String name;    <span class="comment">//在类中，定义一个姓名name字符串属性</span></span><br><span class="line">    <span class="keyword">int</span> age;         <span class="comment">//在类中，定义一个年龄age属性</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫"</span>+name+<span class="string">"我今年"</span>+age+<span class="string">"岁了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个Person类的对象zhangsan</span></span><br><span class="line">        Person zhangsan;</span><br><span class="line">        <span class="comment">//实例化对象</span></span><br><span class="line">        zhangsan=<span class="keyword">new</span> Person();</span><br><span class="line">        <span class="comment">//给对象的name属性赋值</span></span><br><span class="line">        zhangsan.name=<span class="string">"张三"</span>;</span><br><span class="line">        zhangsan.age=<span class="number">23</span>;</span><br><span class="line">        zhangsan.speak();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>内存分析    </p><p><img src="https://live.staticflickr.com/65535/48312793817_34c3556633_z.jpg" alt></p><h2 id="3-方法"><a href="#3-方法" class="headerlink" title="3. 方法"></a>3. 方法</h2><h3 id="1-方法的定义及简单使用"><a href="#1-方法的定义及简单使用" class="headerlink" title="1. 方法的定义及简单使用"></a>1. 方法的定义及简单使用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 13:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 最简单的一个方法定义</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫张三"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People zhangsan=<span class="keyword">new</span> People();</span><br><span class="line">        zhangsan.speak();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 13:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//形参，入参</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫"</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People2 zhangsan=<span class="keyword">new</span> People2();</span><br><span class="line">        zhangsan.speak(<span class="string">"张三"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 13:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//形参，入参</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫"</span> + name+<span class="string">"我今年"</span>+age+<span class="string">"岁了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People3 zhangsan = <span class="keyword">new</span> People3();</span><br><span class="line">        zhangsan.speak(<span class="string">"张三"</span>, <span class="number">23</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 13:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People4</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//形参，入参,不固定参数</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">(String name, <span class="keyword">int</span> age,String ...hobbies)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫"</span> + name + <span class="string">"我今年"</span> + age + <span class="string">"岁了"</span>);</span><br><span class="line">        System.out.println(<span class="string">"我的爱好：  "</span>);</span><br><span class="line">        <span class="keyword">for</span> (String hobby:hobbies)&#123;</span><br><span class="line">            System.out.print(hobby+<span class="string">"  "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People4 zhangsan = <span class="keyword">new</span> People4();</span><br><span class="line">        zhangsan.speak(<span class="string">"张三"</span>, <span class="number">23</span>,<span class="string">"游泳"</span>,<span class="string">"唱歌"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 13:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People5</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回类型</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">speak</span><span class="params">(String name, <span class="keyword">int</span> age,String ...hobbies)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫"</span> + name + <span class="string">"我今年"</span> + age + <span class="string">"岁了"</span>);</span><br><span class="line">        System.out.println(<span class="string">"我的爱好：  "</span>);</span><br><span class="line">        <span class="keyword">for</span> (String hobby:hobbies)&#123;</span><br><span class="line">            System.out.print(hobby+<span class="string">"  "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取爱好的长度</span></span><br><span class="line">        <span class="keyword">int</span> totalHobbies=hobbies.length;</span><br><span class="line">        <span class="keyword">return</span> totalHobbies;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People5 zhangsan = <span class="keyword">new</span> People5();</span><br><span class="line">        <span class="keyword">int</span> n=zhangsan.speak(<span class="string">"张三"</span>, <span class="number">23</span>,<span class="string">"游泳"</span>,<span class="string">"唱歌"</span>);</span><br><span class="line">        System.out.println(<span class="string">"\n有"</span>+n+<span class="string">"个爱好"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-方法的值传递和引用传递-重点"><a href="#2-方法的值传递和引用传递-重点" class="headerlink" title="2. 方法的值传递和引用传递(重点)"></a>2. 方法的值传递和引用传递(重点)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 三围类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 14:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sanwei</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b;   <span class="comment">//胸围</span></span><br><span class="line">    <span class="keyword">int</span> w;   <span class="comment">//腰围</span></span><br><span class="line">    <span class="keyword">int</span> h;   <span class="comment">//臀围</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People6</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 报三围</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> age 年龄</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sanwei  三围</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">speak</span><span class="params">(<span class="keyword">int</span> age,Sanwei sanwei)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我今年"</span>+age+<span class="string">"岁了,我的三围是"</span>+sanwei.b+<span class="string">","</span>+sanwei.w+<span class="string">","</span>+sanwei.h);</span><br><span class="line">        age=<span class="number">24</span>;</span><br><span class="line">        sanwei.b=<span class="number">80</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People6 xiaoli=<span class="keyword">new</span> People6();</span><br><span class="line">        <span class="keyword">int</span> age=<span class="number">23</span>;</span><br><span class="line">        Sanwei sanwei=<span class="keyword">new</span> Sanwei();</span><br><span class="line">        sanwei.b=<span class="number">90</span>;</span><br><span class="line">        sanwei.w=<span class="number">60</span>;</span><br><span class="line">        sanwei.h=<span class="number">90</span>;</span><br><span class="line">        <span class="comment">//age传递的是值，sanwei传递的是引用（地址）,c里叫指针</span></span><br><span class="line">        xiaoli.speak(age,sanwei);</span><br><span class="line">        System.out.println(age);</span><br><span class="line">        System.out.println(sanwei.b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-方法的重载"><a href="#3-方法的重载" class="headerlink" title="3. 方法的重载"></a>3. 方法的重载</h3><p>方法重载定义：方法名称相同，但是参数的类型或者参数的个数不同。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 14:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"方法一:"</span>);</span><br><span class="line">        <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法的重载，参数个数不一样</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> c</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"方法二："</span>);</span><br><span class="line">        <span class="keyword">return</span> a+b+c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 方法的重载，参数的类型不一样</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> b</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,String b)</span></span>&#123;</span><br><span class="line">        System.out.print(<span class="string">"方法三："</span>);</span><br><span class="line">        <span class="keyword">return</span> a+Integer.parseInt(b);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo demo=<span class="keyword">new</span> Demo();</span><br><span class="line">        System.out.println(demo.add(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">        System.out.println(demo.add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">        System.out.println(demo.add(<span class="number">1</span>,<span class="string">"3"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-static静态方法与普通方法"><a href="#4-static静态方法与普通方法" class="headerlink" title="4. static静态方法与普通方法"></a>4. static静态方法与普通方法</h3><p>static方法：方法属于类本身；调用方式：1. 类名.方法;2. 对象.方法      </p><p>普通方法：方法属于类的对象；调用方式：1. 对象.方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 15:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"这是一个普通方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fun2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"这是一个静态方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo2 demo2=<span class="keyword">new</span> Demo2();</span><br><span class="line">        <span class="comment">//调用普通方法，对象.方法</span></span><br><span class="line">        demo2.fun1();</span><br><span class="line">        <span class="comment">//调用静态方法，类名.方法名</span></span><br><span class="line">        Demo2.fun2();</span><br><span class="line">        <span class="comment">//调用静态方法，对象.方法</span></span><br><span class="line">        demo2.fun2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-递归方法"><a href="#5-递归方法" class="headerlink" title="5. 递归方法"></a>5. 递归方法</h3><p>求阶乘 1 <em> 2 </em> 3… <em> (n-1) </em> n<br>原理：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">N=<span class="number">5</span> F(n-<span class="number">1</span>) * <span class="number">5</span>        </span><br><span class="line">N=<span class="number">4</span> F(n-<span class="number">1</span>) * <span class="number">4</span>     </span><br><span class="line">N=<span class="number">3</span> F(n-<span class="number">1</span>) * <span class="number">3</span>      </span><br><span class="line">N=<span class="number">2</span> F(n-<span class="number">1</span>) * <span class="number">2</span>      </span><br><span class="line">N=<span class="number">1</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 15:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 非递归</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">notDiGui</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> result=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            result=result*i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> n</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">DiGUi</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> DiGUi(n-<span class="number">1</span>)*n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"非递归："</span>+Demo3.notDiGui(<span class="number">5</span>));</span><br><span class="line">        System.out.println(<span class="string">"递归:"</span>+Demo3.DiGUi(<span class="number">5</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-构造方法，this关键字"><a href="#4-构造方法，this关键字" class="headerlink" title="4. 构造方法，this关键字"></a>4. 构造方法，this关键字</h2><h3 id="1-构造方法"><a href="#1-构造方法" class="headerlink" title="1. 构造方法"></a>1. 构造方法</h3><p>构造器是一个特殊的方法，这个特殊方法用于创建实例时可执行初始化；<br>假如没有构造方法，系统会自动生成一个默认的无参构造方法；假如有构造方法，系统不会自动生成构造方法；</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 15:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// String 类属性默认值是null</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//int 类属性默认值是0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认构造方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    People()&#123;</span><br><span class="line">        System.out.println(<span class="string">"默认构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有参数的构造方法   构造方法的重载</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    People(String name2,<span class="keyword">int</span> age2)&#123;</span><br><span class="line">        name=name2;</span><br><span class="line">        age=age2;</span><br><span class="line">        System.out.println(<span class="string">"有参数的构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫："</span>+name+<span class="string">"，我今年："</span>+age+<span class="string">"岁了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//People people=new People();</span></span><br><span class="line">        People people2=<span class="keyword">new</span> People(<span class="string">"张三"</span>,<span class="number">23</span>);</span><br><span class="line">        people2.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-this关键字"><a href="#2-this关键字" class="headerlink" title="2. this关键字"></a>2. this关键字</h3><p>this表示当前对象     </p><ol><li>使用this调用本类中的属性；    </li><li>使用this调用构造方法；    </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 15:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// String 类属性默认值是null</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//int 类属性默认值是0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 默认构造方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    People2()&#123;</span><br><span class="line">        System.out.println(<span class="string">"默认构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有参数的构造方法   构造方法的重载</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    People2(String name2, <span class="keyword">int</span> age2)&#123;</span><br><span class="line">        <span class="keyword">this</span>();</span><br><span class="line">        <span class="keyword">this</span>.name=name2;</span><br><span class="line">        <span class="keyword">this</span>.age=age2;</span><br><span class="line">        System.out.println(<span class="string">"有参数的构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我叫："</span>+name+<span class="string">"，我今年："</span>+age+<span class="string">"岁了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//People people=new People();</span></span><br><span class="line">        People2 people2=<span class="keyword">new</span> People2(<span class="string">"张三"</span>,<span class="number">23</span>);</span><br><span class="line">        people2.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-访问控制权限及package-import关键字"><a href="#5-访问控制权限及package-import关键字" class="headerlink" title="5. 访问控制权限及package import关键字"></a>5. 访问控制权限及package import关键字</h2><h3 id="1-访问控制权限"><a href="#1-访问控制权限" class="headerlink" title="1. 访问控制权限"></a>1. 访问控制权限</h3><p>private(私有)   get,set方法<br>package（包访问权限）<br>protected(子类访问权限)<br>public（公共访问权限）      </p><table><thead><tr><th></th><th>private</th><th>package</th><th>protected</th><th>public</th></tr></thead><tbody><tr><td>同一个类中</td><td>√</td><td>√</td><td>√</td><td>√</td></tr><tr><td>同一个包中</td><td></td><td>√</td><td>√</td><td>√</td></tr><tr><td>子类中</td><td></td><td></td><td>√</td><td>√</td></tr><tr><td>全局范围</td><td></td><td></td><td></td><td>√</td></tr></tbody></table><p><strong>Demo1.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 16:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个私有的属性a</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> a;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setA</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>TestDemo1.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 16:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDemo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo1 demo1=<span class="keyword">new</span> Demo1();</span><br><span class="line">        demo1.setA(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">int</span> a=demo1.getA();</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="2-package-import-关键字"><a href="#2-package-import-关键字" class="headerlink" title="2. package import 关键字"></a>2. package import 关键字</h3><p>package 包定义<br>import 导入相关类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec05;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.java.chap07.sec02.People;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 16:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//不同包，则需要导入相关类</span></span><br><span class="line">        People people=<span class="keyword">new</span> People();</span><br><span class="line">        <span class="comment">//在同一个包中，则不需要导入相关类</span></span><br><span class="line">        Demo1 demo1=<span class="keyword">new</span> Demo1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-内部类"><a href="#6-内部类" class="headerlink" title="6. 内部类"></a>6. 内部类</h2><p>内部类定义：在类的内部定义类；<br>内部类优点：可以方便的使用外部类的属性；<br>内部类缺点：破环类的基本结构；              </p><p><strong>Demo1.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec06;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 16:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义内部类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Inner inner=<span class="keyword">new</span> Inner();</span><br><span class="line">        inner.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Outer outer=<span class="keyword">new</span> Outer();</span><br><span class="line">        outer.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Demo2.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec06;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 16:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Outer2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义内部类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Inner</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Outer2 outer2 = <span class="keyword">new</span> Outer2();   <span class="comment">//实例化外部类对象</span></span><br><span class="line">        Outer2.Inner inner = outer2.new Inner();    <span class="comment">//实例化内部类对象</span></span><br><span class="line">        inner.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="7-代码块"><a href="#7-代码块" class="headerlink" title="7. 代码块"></a>7. 代码块</h2><ol><li>普通代码块</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec07;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 16:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 普通代码块</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        &#123;</span><br><span class="line">            a=<span class="number">2</span>;</span><br><span class="line">            System.out.println(<span class="string">"普通代码块"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"a="</span>+a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>构造块</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec07;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 16:52</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造块</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"通用构造块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法一</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Demo2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造方法一"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法二</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Demo2</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造方法二"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法三</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Demo2</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造方法三"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Demo2();    <span class="comment">//实例化一个对象  匿名类</span></span><br><span class="line">        <span class="keyword">new</span> Demo2(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">new</span> Demo2(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>静态代码块</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec07;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 16:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造块</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    &#123;</span><br><span class="line">        System.out.println(<span class="string">"通用构造块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 静态代码块</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"静态代码块"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法一</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Demo3</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造方法一"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法二</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Demo3</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造方法二"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法三</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Demo3</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"构造方法三"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Demo3();</span><br><span class="line">        <span class="keyword">new</span> Demo3(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">new</span> Demo3(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-String-类"><a href="#8-String-类" class="headerlink" title="8. String 类"></a>8. String 类</h2><h3 id="1-实例化String对象"><a href="#1-实例化String对象" class="headerlink" title="1. 实例化String对象"></a>1. 实例化String对象</h3><p>方法一：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String name1=<span class="string">"张三"</span>;</span><br></pre></td></tr></table></figure></p><p>方法二：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String name2=<span class="keyword">new</span> String(<span class="string">"李四"</span>);</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 21:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//实例化String的方式一</span></span><br><span class="line">        String name1=<span class="string">"张三"</span>;</span><br><span class="line">        System.out.println(<span class="string">"name1:"</span>+name1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//实例化String的方式二</span></span><br><span class="line">        String name2=<span class="keyword">new</span> String(<span class="string">"李四"</span>);</span><br><span class="line">        System.out.println(<span class="string">"name2:"</span>+name2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-“-”-VS-“equals方法”"><a href="#2-“-”-VS-“equals方法”" class="headerlink" title="2. “==” VS “equals方法”"></a>2. “==” VS “equals方法”</h3><ol><li>“==”，比较的是引用，“equals方法”比较的是具体内容</li></ol><p><img src="https://live.staticflickr.com/65535/48314990292_7cf024cfee_z.jpg" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 21:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String name1=<span class="string">"张三"</span>;    <span class="comment">//直接赋值方式</span></span><br><span class="line">        String name2=<span class="keyword">new</span> String(<span class="string">"张三"</span>);   <span class="comment">//new 的方式</span></span><br><span class="line">        String name3=name2;     <span class="comment">// 传递引用</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//==比较的是引用</span></span><br><span class="line">        System.out.println(<span class="string">"name1==name2:"</span>+(name1==name2));</span><br><span class="line">        System.out.println(<span class="string">"name1==name3:"</span>+(name1==name3));</span><br><span class="line">        System.out.println(<span class="string">"name2==name3:"</span>+(name2==name3));</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"-------------"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//equals比较的是内容</span></span><br><span class="line">        System.out.println(<span class="string">"name1.equals(name2):"</span>+(name1.equals(name2)));</span><br><span class="line">        System.out.println(<span class="string">"name1.equals(name3):"</span>+(name1.equals(name3)));</span><br><span class="line">        System.out.println(<span class="string">"name2.equals(name3):"</span>+(name2.equals(name3)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-String-两种实例化方式的区别"><a href="#3-String-两种实例化方式的区别" class="headerlink" title="3. String 两种实例化方式的区别"></a>3. String 两种实例化方式的区别</h3><ol><li>直接赋值方式，创建的对象存放到字符串对象池里，假如存在的，就不会创建；</li><li>new对象方式，每次都创建一个新的对象；</li></ol><p><img src="https://live.staticflickr.com/65535/48315050387_192d66d693_z.jpg" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 21:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String name1=<span class="string">"张三"</span>;</span><br><span class="line">        String name2=<span class="string">"张三"</span>;</span><br><span class="line">        String name3=<span class="keyword">new</span> String(<span class="string">"张三"</span>);</span><br><span class="line">        String name4=<span class="keyword">new</span> String(<span class="string">"张三"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"name1==name2:"</span>+(name1==name2));</span><br><span class="line">        System.out.println(<span class="string">"name1==name3:"</span>+(name1==name3));</span><br><span class="line">        System.out.println(<span class="string">"name3==name4:"</span>+(name3==name4));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-字符串的内容不可变性"><a href="#4-字符串的内容不可变性" class="headerlink" title="4. 字符串的内容不可变性"></a>4. 字符串的内容不可变性</h3><p>字符串的特性：不能改变字符串的内容；只能通过指向一个新的内存地址；     </p><p><img src="https://live.staticflickr.com/65535/48314968091_7ac4026543_z.jpg" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 21:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String name=<span class="string">"张"</span>;</span><br><span class="line">        name+=<span class="string">"三"</span>;</span><br><span class="line">        System.out.println(name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-String类常用方法及基本使用"><a href="#5-String类常用方法及基本使用" class="headerlink" title="5. String类常用方法及基本使用"></a>5. String类常用方法及基本使用</h3><ol><li><p>char charAt(int index)返回指定索引处的char值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 22:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String name=<span class="string">"张三"</span>;</span><br><span class="line">        <span class="keyword">char</span> ming=name.charAt(<span class="number">1</span>);</span><br><span class="line">        System.out.println(ming);</span><br><span class="line"></span><br><span class="line">        String srt=<span class="string">"我是中国人"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历字符串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;srt.length();i++)&#123;</span><br><span class="line">            System.out.println(srt.charAt(i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>int length()返回此字符串的长度。</p></li><li>int indexOf() 返回指定字符在此字符中第一次出现处的索引。   </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 22:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//indexOf方法使用示例</span></span><br><span class="line">        String str=<span class="string">"abcdefghdijklmnopqrstuvwxyz"</span>;</span><br><span class="line">        System.out.println(<span class="string">"d在字符串str中第一次出现的索引位置："</span>+str.indexOf(<span class="string">"d"</span>));</span><br><span class="line">        System.out.println(<span class="string">"d在字符串str中第一次出现的索引位置,从索引4开始："</span>+str.indexOf(<span class="string">"d"</span>,<span class="number">4</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>String substring(int beginIndex)返回一个新的字符串，它是此字符串的一个子字符串。该子字符串从指定索引处的字符开始，直到此字符串末尾。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 22:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo7</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//subString方法使用</span></span><br><span class="line">        String str=<span class="string">"不开心每一天,不可能"</span>;</span><br><span class="line">        String newStr=str.substring(<span class="number">1</span>);</span><br><span class="line">        String newStr2=str.substring(<span class="number">1</span>,<span class="number">6</span>);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        System.out.println(newStr);</span><br><span class="line">        System.out.println(newStr2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>String toUpperCase() 使用默认语言环境的规则将此String中的所有字符都转换为大写。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 22:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo8</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str=<span class="string">"I'm a boy!"</span>;</span><br><span class="line">        String upStr=str.toUpperCase();   <span class="comment">//转换成大写</span></span><br><span class="line">        System.out.println(<span class="string">"str:"</span>+str);</span><br><span class="line">        System.out.println(<span class="string">"upStr:"</span>+upStr);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String lowerStr=upStr.toLowerCase();  <span class="comment">//转换成小写</span></span><br><span class="line">        System.out.println(<span class="string">"lowerStr:"</span>+lowerStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>综合实例<br>编程输入一个字符串，要求去掉前后的空格，然后分别统计其中英文字母，空格，数字和其他字符的个数。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec08;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/18 22:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo9</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str=<span class="string">"  aB23 2&amp;*  &amp;*   s2  "</span>;</span><br><span class="line">        <span class="comment">//去掉前面和后面的空白</span></span><br><span class="line">        String newStr=str.trim();</span><br><span class="line">        System.out.println(<span class="string">"str:"</span>+str);</span><br><span class="line">        System.out.println(<span class="string">"newStr:"</span>+newStr);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> yingWen=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> kongGe=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> shuZi=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> qiTa=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;newStr.length();i++)&#123;</span><br><span class="line">            <span class="keyword">char</span> c=newStr.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (c&gt;=<span class="string">'a'</span>&amp;&amp;c&lt;=<span class="string">'z'</span>||(c&gt;=<span class="string">'A'</span>&amp;&amp;c&lt;=<span class="string">'Z'</span>))&#123;</span><br><span class="line">                <span class="comment">//判断英文字符</span></span><br><span class="line">                yingWen++;</span><br><span class="line">                System.out.println(<span class="string">"英文字符："</span>+c);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">                <span class="comment">//判断数字</span></span><br><span class="line">                shuZi++;</span><br><span class="line">                System.out.println(<span class="string">"数字："</span>+c);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> (c==<span class="string">' '</span>)&#123;</span><br><span class="line">                <span class="comment">//判断空格</span></span><br><span class="line">                kongGe++;</span><br><span class="line">                System.out.println(<span class="string">"空格："</span>+c);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//判断其他</span></span><br><span class="line">                qiTa++;</span><br><span class="line">                System.out.println(<span class="string">"其他："</span>+c);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">"英文总数："</span>+yingWen);</span><br><span class="line">        System.out.println(<span class="string">"数字总数："</span>+shuZi);</span><br><span class="line">        System.out.println(<span class="string">"空格总数："</span>+kongGe);</span><br><span class="line">        System.out.println(<span class="string">"其他总数："</span>+qiTa);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-Java类的继承"><a href="#9-Java类的继承" class="headerlink" title="9. Java类的继承"></a>9. Java类的继承</h2><ol><li>继承定义以及基本使用<br>定义：子类能够继承父类的属性和方法；<br><strong>注意点</strong>：Java中只支持单继承；私有方法不能继承。</li></ol><p><strong>Animal.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec09;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动物类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 15:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性姓名</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//属性年龄</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法say</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个动物，我叫："</span> + <span class="keyword">this</span>.getName() + <span class="string">"我的年龄是："</span> + <span class="keyword">this</span>.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Dog.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec09;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 定义Dog类，继承自Animal类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 17:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Dog dog=<span class="keyword">new</span> Dog();</span><br><span class="line">        dog.setName(<span class="string">"Pick"</span>);</span><br><span class="line">        dog.setAge(<span class="number">1</span>);</span><br><span class="line">        dog.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>方法重写</li></ol><p><strong>Animal.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec09;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动物类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 15:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性姓名</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//属性年龄</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法say</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个动物，我叫："</span> + <span class="keyword">this</span>.getName() + <span class="string">"我的年龄是："</span> + <span class="keyword">this</span>.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Cat.java</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">package com.java.chap07.sec09;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author Yan</span><br><span class="line"> * @date 2019/7/19 17:32</span><br><span class="line"> */</span><br><span class="line">public class Cat extends Animal &#123;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 重写父类的say方法</span><br><span class="line">     */</span><br><span class="line">    //方法say</span><br><span class="line">    public void say() &#123;</span><br><span class="line">        System.out.println(&quot;我是一只猫，我叫：&quot; + this.getName() + &quot;我的年龄是：&quot; + this.getAge());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Cat cat=new Cat();</span><br><span class="line">        cat.setName(&quot;Mini&quot;);</span><br><span class="line">        cat.setAge(2);</span><br><span class="line">        cat.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="3"><li>对象实例化过程以及super关键字</li></ol><p><strong>Animal.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec09;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 动物类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 15:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="comment">//属性姓名</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//属性年龄</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 无参构造方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Animal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"无参构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有参父类构造方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 名字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> age 年龄</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Animal</span><span class="params">(String name,<span class="keyword">int</span> age)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"有参父类构造方法"</span>);</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">        <span class="keyword">this</span>.age=age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//方法say</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个动物，我叫："</span> + <span class="keyword">this</span>.getName() + <span class="string">"我的年龄是："</span> + <span class="keyword">this</span>.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Cat.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec09;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 17:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Cat</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        System.out.println(<span class="string">"子类无参构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Cat</span><span class="params">(String name, <span class="keyword">int</span> age,String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(name, age);</span><br><span class="line">        <span class="keyword">this</span>.address=address;</span><br><span class="line">        System.out.println(<span class="string">"子类有参构造方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重写父类的say方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//方法say</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//调用父类的say方法</span></span><br><span class="line">        <span class="keyword">super</span>.say();</span><br><span class="line">        System.out.println(<span class="string">"我是一只猫，我叫："</span> + <span class="keyword">this</span>.getName() + <span class="string">"我的年龄是："</span> + <span class="keyword">this</span>.getAge()+<span class="string">"我来自："</span>+<span class="keyword">this</span>.address);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Cat cat=<span class="keyword">new</span> Cat(<span class="string">"Mini"</span>,<span class="number">1</span>,<span class="string">"火星"</span>);</span><br><span class="line">        <span class="comment">//cat.setName("Mini");</span></span><br><span class="line">        <span class="comment">//cat.setAge(2);</span></span><br><span class="line">        cat.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="10-final关键字"><a href="#10-final关键字" class="headerlink" title="10. final关键字"></a>10. final关键字</h2><blockquote><p>使用final声明的类不能被继承<br>使用final声明的方法不能被子类覆盖<br>使用final声明的变量不能被修改，即为常量</p></blockquote><ol><li>final 修饰类</li></ol><p>代码示例：<br><strong>JiangShi.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec10;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 21:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">JiangShi</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>test.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec10;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 21:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">JiangShi</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>final 修饰方法</li></ol><p><strong>People.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec10;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 21:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"做一个良好公民！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Test.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec10;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 21:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">People</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"做一个坏蛋"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="3"><li>final 修饰的变量</li></ol><p><strong>People.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec10;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 21:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line">        a=<span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">"做一个良好公民！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Common.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec10;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 22:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Common</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 静态常量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SOMETILE=<span class="string">"中国的首都是北京"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Test.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec10;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/19 21:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">People</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">action</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"做一个坏蛋"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(Common.SOMETILE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="11-抽象类"><a href="#11-抽象类" class="headerlink" title="11. 抽象类"></a>11. 抽象类</h2><p>定义：在Java中，含有抽象方法的类称为抽象类，同样不能生成对象。<br><strong>注意点</strong>：      </p><ol><li>包含一个抽象方法的类是抽象类</li><li>抽象类和抽象方法都要用abstract 关键字声明</li><li>抽象方法只需要声明而不需要实现</li><li>抽象类必须被子类（假如不是抽象类）必须重写抽象类中的全部抽象方法</li><li>抽象类不能被实例化</li></ol><p><strong>People.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec11;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个抽象类People</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 15:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我的姓名是："</span>+<span class="keyword">this</span>.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 定义一个抽象方法职业</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">profession</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Student.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec11;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 15:29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">People</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">profession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"职业是：学生"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Teacher.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec11;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 15:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> <span class="keyword">extends</span> <span class="title">People</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">profession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"职业是：老师"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec11;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 15:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//抽象类不能被实例化</span></span><br><span class="line">        <span class="comment">//People p=new People();</span></span><br><span class="line">        Student student=<span class="keyword">new</span> Student();</span><br><span class="line">        student.profession();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Teacher teacher=<span class="keyword">new</span> Teacher();</span><br><span class="line">        teacher.profession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12-接口"><a href="#12-接口" class="headerlink" title="12. 接口"></a>12. 接口</h2><p>定义：一种特殊的“抽象类”，没有普通方法，有全局常量和公共的抽象方法所组成。        </p><ol><li>接口的定义</li></ol><p><strong>A.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个接口A</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 15:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局常量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TITLE=<span class="string">"www.baidu.com"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个抽象方法 abstract可以省略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2"><li>实现接口<br>可以实现一个或者多个接口</li></ol><p>实现一个接口<br><strong>A.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个接口A</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 15:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局常量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TITLE=<span class="string">"www.baidu.com"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个抽象方法 abstract可以省略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"a方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test test=<span class="keyword">new</span> Test();</span><br><span class="line">        test.a();</span><br><span class="line">        System.out.println(Test.TITLE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现多个接口       </p><p><strong>A.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个接口A</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 15:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局常量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TITLEA=<span class="string">"www.baidu.com"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个抽象方法 abstract可以省略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>B.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个接口A</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 15:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">B</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全局常量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String TITLEB=<span class="string">"www.google.com"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个抽象方法 abstract可以省略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">A</span>, <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"a方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"b方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test test = <span class="keyword">new</span> Test();</span><br><span class="line">        test.a();</span><br><span class="line">        test.b();</span><br><span class="line">        System.out.println(Test.TITLEA);</span><br><span class="line">        System.out.println(Test.TITLEB);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>继承类和实现接口<br>先继承，后实现接口</li></ol><p><strong>C.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">c</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"c方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">extends</span> <span class="title">C</span> <span class="keyword">implements</span> <span class="title">A</span>, <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"a方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"b方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test test = <span class="keyword">new</span> Test();</span><br><span class="line">        test.a();</span><br><span class="line">        test.b();</span><br><span class="line">        test.c();</span><br><span class="line">        System.out.println(Test.TITLEA);</span><br><span class="line">        System.out.println(Test.TITLEB);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>接口的继承<br>接口可以多继承     </li></ol><p><strong>D.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义接口D,继承A，B接口</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">D</span> <span class="keyword">extends</span> <span class="title">A</span>,<span class="title">B</span></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个抽象方法 abstract可以省略</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">d</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec12;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> <span class="keyword">extends</span> <span class="title">C</span> <span class="keyword">implements</span> <span class="title">D</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"a方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">b</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"b方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">d</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"d方法"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test2 test = <span class="keyword">new</span> Test2();</span><br><span class="line">        test.a();</span><br><span class="line">        test.b();</span><br><span class="line">        test.c();</span><br><span class="line">        test.d();</span><br><span class="line">        System.out.println(Test2.TITLEA);</span><br><span class="line">        System.out.println(Test2.TITLEB);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-对象多态性"><a href="#13-对象多态性" class="headerlink" title="13. 对象多态性"></a>13. 对象多态性</h2><p>Java中多态性体现：     </p><ol><li>方法的重载和重写；</li><li>可以用父类的引用指向子类的具体实现，而且可以随时更换为其他子类的具体实现；</li></ol><p><strong>Animal.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个动物"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Cat.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个猫"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Dog.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个狗"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Dog dog=new Dog();</span></span><br><span class="line"><span class="comment">        dog.say();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Cat cat=new Cat();</span></span><br><span class="line"><span class="comment">        cat.say();</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//父类引用指向Dog类的具体实现</span></span><br><span class="line">        Animal animal = <span class="keyword">new</span> Dog();</span><br><span class="line">        animal.say();</span><br><span class="line"></span><br><span class="line">        animal=<span class="keyword">new</span> Cat();</span><br><span class="line">        animal.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对象的转型：<br>向上转型：子类对象-&gt;父类对象  <strong>安全</strong><br>向下转型：父类对象-&gt;子类对象  <strong>不安全</strong></p><p>向下转型     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        Dog dog=new Dog();</span></span><br><span class="line"><span class="comment">        dog.say();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        Cat cat=new Cat();</span></span><br><span class="line"><span class="comment">        cat.say();</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//父类引用指向Dog类的具体实现</span></span><br><span class="line">        Animal animal = <span class="keyword">new</span> Dog();</span><br><span class="line">        animal.say();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//向下转型</span></span><br><span class="line">        Dog dog= (Dog) animal;</span><br><span class="line">        dog.say();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//向下转型2 不安全</span></span><br><span class="line">        Cat cat= (Cat) animal;</span><br><span class="line">        cat.say();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/*animal=new Cat();</span></span><br><span class="line"><span class="comment">        animal.say();</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接口方式</strong></p><p><strong>Animal.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Animal2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say2</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Dog2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog2</span> <span class="keyword">implements</span> <span class="title">Animal2</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一只狗"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Cat2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat2</span> <span class="keyword">implements</span> <span class="title">Animal2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个猫"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec13;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 16:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//父类引用指向Dog类的具体实现  向上转型</span></span><br><span class="line">        Animal2 animal2 = <span class="keyword">new</span> Dog2();</span><br><span class="line">        animal2.say2();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        animal2=<span class="keyword">new</span> Cat2();</span><br><span class="line">        animal2.say2();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//向下转型</span></span><br><span class="line">        Dog2 dog2= (Dog2) animal2;</span><br><span class="line">        dog2.say2();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//向下转型2 不安全</span></span><br><span class="line">        Cat2 cat2= (Cat2) animal2;</span><br><span class="line">        cat2.say2();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-Object类"><a href="#14-Object类" class="headerlink" title="14. Object类"></a>14. Object类</h2><blockquote><p>Object类是所有类的父类；</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec14;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">extends</span> <span class="title">Object</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Object 类是所有类的父类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-Object类的常用方法"><a href="#1-Object类的常用方法" class="headerlink" title="1. Object类的常用方法"></a>1. Object类的常用方法</h3><ol><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>;    <span class="comment">//返回该对象的字符串表示</span></span><br></pre></td></tr></table></figure><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec14;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">People</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getName();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People people=<span class="keyword">new</span> People(<span class="string">"张三"</span>);</span><br><span class="line">        System.out.println(people);</span><br><span class="line">        System.out.println(people.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span></span>;  <span class="comment">//指示其他某个对象是否与此对象“相等”</span></span><br></pre></td></tr></table></figure><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec14;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">People</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getName();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object obj)</span> </span>&#123;</span><br><span class="line">        String name=((People)obj).getName();</span><br><span class="line">        System.out.println(name);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name==name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People people=<span class="keyword">new</span> People(<span class="string">"张三"</span>);</span><br><span class="line">        People people1=<span class="keyword">new</span> People(<span class="string">"张三"</span>);</span><br><span class="line">        People people3=<span class="keyword">new</span> People(<span class="string">"李四"</span>);</span><br><span class="line">        System.out.println(<span class="string">"people.equals(people1)"</span>+people.equals(people1));</span><br><span class="line">        System.out.println(<span class="string">"people1.equals(people3)"</span>+people1.equals(people3));</span><br><span class="line">        System.out.println(people);</span><br><span class="line">        System.out.println(people.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15-instanceof关键字"><a href="#15-instanceof关键字" class="headerlink" title="15. instanceof关键字"></a>15. instanceof关键字</h2><p>作用：判断一个对象是否属于一个类<br>格式： 对象  instanceof类 返回布尔类型<br>向下转型作判断；    </p><p>代码示例：     </p><p><strong>Animal.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec15;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个动物"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Cat.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec15;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cat</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一只猫"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 子类方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">f2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我喜欢吃鱼"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Dog.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec15;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一只狗"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 子类方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">f2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我的名字是jack"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec15;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doSomeThing</span><span class="params">(Animal animal)</span></span>&#123;</span><br><span class="line">        animal.say();</span><br><span class="line">        <span class="keyword">if</span> (animal <span class="keyword">instanceof</span> Dog)&#123;</span><br><span class="line">            ((Dog)animal).f2();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (animal <span class="keyword">instanceof</span> Cat)&#123;</span><br><span class="line">            ((Cat)animal).f2();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Animal dog=<span class="keyword">new</span> Dog();</span><br><span class="line">        System.out.println(<span class="string">"dog对象是否属于Animal类："</span>+(dog <span class="keyword">instanceof</span> Animal));</span><br><span class="line">        System.out.println(<span class="string">"dog对象是否属于Dog类："</span>+(dog <span class="keyword">instanceof</span> Dog));</span><br><span class="line">        System.out.println(<span class="string">"dog对象是否属于Cat类："</span>+(dog <span class="keyword">instanceof</span> Cat));</span><br><span class="line"></span><br><span class="line">        doSomeThing(<span class="keyword">new</span> Dog());</span><br><span class="line">        doSomeThing(<span class="keyword">new</span> Cat());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="16-匿名内部类"><a href="#16-匿名内部类" class="headerlink" title="16. 匿名内部类"></a>16. 匿名内部类</h2><p>作用：假如某个类只使用一次，则可以使用匿名内部类。 </p><p>代码示例：    </p><p><strong>A.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec16;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>B.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec16;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">implements</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"只使用一次"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec16;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 21:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(A a)</span></span>&#123;</span><br><span class="line">        a.a();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test test=<span class="keyword">new</span> Test();</span><br><span class="line">        test.test(<span class="keyword">new</span> B());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//匿名内部类</span></span><br><span class="line">        test.test(<span class="keyword">new</span> A() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"匿名内部类，一次性使用"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="17-包装类"><a href="#17-包装类" class="headerlink" title="17. 包装类"></a>17. 包装类</h2><p>每个基本类型都有一个对应的类；</p><table><thead><tr><th>序号</th><th>基本类型</th><th>包装类</th></tr></thead><tbody><tr><td>1</td><td>int</td><td>Integer</td></tr><tr><td>2</td><td>char</td><td>Character</td></tr><tr><td>3</td><td>short</td><td>Short</td></tr><tr><td>4</td><td>long</td><td>Long</td></tr><tr><td>5</td><td>float</td><td>Float</td></tr><tr><td>6</td><td>double</td><td>Double</td></tr><tr><td>7</td><td>boolean</td><td>Boolean</td></tr><tr><td>8</td><td>byte</td><td>Byte</td></tr></tbody></table><ol><li>装箱和拆箱</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec17;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 22:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=<span class="number">1</span>;</span><br><span class="line">        Integer i=<span class="keyword">new</span> Integer(a);    <span class="comment">//装箱  把基本变量变成对象变量</span></span><br><span class="line">        <span class="keyword">int</span> b=i.intValue();   <span class="comment">//拆箱  把对象变量变成基本变量</span></span><br><span class="line">        System.out.println(<span class="string">"a="</span>+a+<span class="string">",i="</span>+i+<span class="string">",b="</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>自动装箱和拆箱</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec17;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 22:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer i=<span class="number">1</span>;     <span class="comment">//自动装箱的过程  自动把基本数据转换成对象</span></span><br><span class="line">        <span class="keyword">int</span> i2=i;   <span class="comment">//自动拆箱   自动把对象转换成基本数据</span></span><br><span class="line">        System.out.println(<span class="string">"i="</span>+i+<span class="string">",i2="</span>+i2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>包装类的作用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec17;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/20 22:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String a=<span class="string">"1"</span>;</span><br><span class="line">        String b=<span class="string">"2"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> m=Integer.parseInt(a);</span><br><span class="line">        <span class="keyword">int</span> n=Integer.parseInt(b);</span><br><span class="line">        System.out.println(<span class="string">"a+b="</span>+(m+n));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="18-设计模式"><a href="#18-设计模式" class="headerlink" title="18. 设计模式"></a>18. 设计模式</h2><ol><li>单例模式<br>在Java应用中，单例对象能保证在一个JVM中，该对象只有一个实例存在。</li></ol><p>饿汉式     </p><p><strong>Singleton1.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec18;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 14:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法私有</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton1</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 饿汉式单例实现</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton1 single1=<span class="keyword">new</span> Singleton1();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 静态工厂方式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton1 <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> single1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>TestSingleton.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec18;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 14:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSingleton</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//Singleton1 singleton1=new Singleton1();</span></span><br><span class="line"></span><br><span class="line">        Singleton1 singleton1=Singleton1.getInstance();</span><br><span class="line">        Singleton1 singleton2=Singleton1.getInstance();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"饿汉式："</span>+(singleton1==singleton2));</span><br><span class="line"></span><br><span class="line">        TestSingleton testSingleton=<span class="keyword">new</span> TestSingleton();</span><br><span class="line">        TestSingleton testSingleton2=<span class="keyword">new</span> TestSingleton();</span><br><span class="line">        System.out.println(testSingleton==testSingleton2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>懒汉式      </p><p><strong>Singleton2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec18;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 14:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法私有</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton2</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 懒汉式单例实现    在第一次调用的时候实例化</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton2 single;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 工厂</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">static</span> Singleton2 <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (single==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//第一次调用的时候实例化</span></span><br><span class="line">            System.out.println(<span class="string">"第一次调用的时候实例化"</span>);</span><br><span class="line">            single=<span class="keyword">new</span> Singleton2();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>TestSingleton.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap07.sec18;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 14:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSingleton</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Singleton2 singleton3=Singleton2.getInstance();</span><br><span class="line">        Singleton2 singleton4=Singleton2.getInstance();</span><br><span class="line">        System.out.println(<span class="string">"懒汉式："</span>+(singleton3==singleton4));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java异常处理"><a href="#Java异常处理" class="headerlink" title="Java异常处理"></a>Java异常处理</h1><h2 id="异常的概念"><a href="#异常的概念" class="headerlink" title="异常的概念"></a>异常的概念</h2><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap08.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 14:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExceptionDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str=<span class="string">"123a"</span>;</span><br><span class="line">        <span class="keyword">int</span> a=Integer.parseInt(str);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="捕获和处理异常"><a href="#捕获和处理异常" class="headerlink" title="捕获和处理异常"></a>捕获和处理异常</h2><p>在Java中，我们用try…catch…来捕获异常；   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>...<span class="keyword">catch</span>...<span class="keyword">finally</span></span><br></pre></td></tr></table></figure><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap08.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 14:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str=<span class="string">"123a"</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> a=Integer.parseInt(str);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (NumberFormatException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"aaaa"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap08.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 15:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testFinally</span><span class="params">()</span></span>&#123;</span><br><span class="line">        String str=<span class="string">"123a"</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> a=Integer.parseInt(str);</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">"exception"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"final end"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"end"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        testFinally();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="throws和throw关键字"><a href="#throws和throw关键字" class="headerlink" title="throws和throw关键字"></a>throws和throw关键字</h2><p>throws表示当前方法不处理异常，而是交给方法的调用处去处理。<br>throw表示直接抛出一个异常</p><p>代码示例：      </p><p><strong>throws</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap08.sec03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 16:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把异常向外抛</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NumberFormatException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testThrows</span><span class="params">()</span> <span class="keyword">throws</span> NumberFormatException </span>&#123;</span><br><span class="line">        String str = <span class="string">"123a"</span>;</span><br><span class="line">        <span class="keyword">int</span> a = Integer.parseInt(str);</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            testThrows();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            System.out.println(<span class="string">"在这里处理异常"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">"I'm here"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>throw</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap08.sec03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 16:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testThrow</span><span class="params">(<span class="keyword">int</span> a)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (a==<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//直接抛出一个异常类</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"有异常"</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            testThrow(<span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            testThrow(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Exception和RuntimeException区别"><a href="#Exception和RuntimeException区别" class="headerlink" title="Exception和RuntimeException区别"></a>Exception和RuntimeException区别</h2><p>Exception 是检查型异常，例如Exception在程序中必须使用try…catch进行处理；</p><p>RuntimeException 是非检查型异常，例如NumberFormatException，可以不使用try…catch进行处理，但是如果产生异常，则异常将由JVM进行处理；       </p><p>RuntimeException 最好也用try…catch捕获。</p><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap08.sec04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 16:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 运行时异常，编译时不检查，可以不适用try...catch捕获</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> RuntimeException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testRuntimeException</span><span class="params">()</span> <span class="keyword">throws</span> RuntimeException </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"运行时异常"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Exception异常，编译时异常，必须使用try...catch捕获</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">testException</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"Exception异常"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            testRuntimeException();</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            testException();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义异常类"><a href="#自定义异常类" class="headerlink" title="自定义异常类"></a>自定义异常类</h2><p>代码示例：    </p><p><strong>CustomerException.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap08.sec05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义异常，继承自Exception</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 16:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomerException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomerException</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>TestCustomerException.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap08.sec05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 16:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCustomerException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> CustomerException</span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> CustomerException(<span class="string">"自定义异常"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            test();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (CustomerException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java常用类"><a href="#Java常用类" class="headerlink" title="Java常用类"></a>Java常用类</h1><h2 id="Java日期处理类"><a href="#Java日期处理类" class="headerlink" title="Java日期处理类"></a>Java日期处理类</h2><ol><li>Date类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap09.sec01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期类Date</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 20:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestDate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Date date=<span class="keyword">new</span> Date();</span><br><span class="line">        System.out.println(<span class="string">"当前日期："</span>+date);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Calendar类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap09.sec01;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 20:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestCalendar</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        System.out.println(calendar.get(Calendar.YEAR));</span><br><span class="line">        System.out.println(calendar.get(Calendar.MONTH) + <span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">"现在是"</span> + calendar.get(Calendar.YEAR) + <span class="string">"年"</span></span><br><span class="line">                + (calendar.get(Calendar.MONTH) + <span class="number">1</span>) + <span class="string">"月"</span></span><br><span class="line">                + calendar.get(Calendar.DAY_OF_MONTH) + <span class="string">"日"</span></span><br><span class="line">                + calendar.get(Calendar.HOUR_OF_DAY) + <span class="string">"时"</span></span><br><span class="line">                + calendar.get(Calendar.MINUTE) + <span class="string">"分"</span></span><br><span class="line">                + calendar.get(Calendar.SECOND) + <span class="string">"秒"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>SimpleDateFormat</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap09.sec01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/21 21:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSimpleDateFormat</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将日期对象格式为指定格式的日期字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date 传入的日期对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> format  格式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">formatDate</span><span class="params">(Date date,String format)</span></span>&#123;</span><br><span class="line">        String result=<span class="string">""</span>;</span><br><span class="line">        SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(format);</span><br><span class="line">        <span class="keyword">if</span> (date!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            result=sdf.format(date);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将日期字符串转换成一个日期对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dataStr 日期字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> format 格式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Date <span class="title">formatDate</span><span class="params">(String dataStr,String format)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">        SimpleDateFormat sdf=<span class="keyword">new</span> SimpleDateFormat(format);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sdf.parse(dataStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line">        Date date=<span class="keyword">new</span> Date();</span><br><span class="line">        <span class="comment">//SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");</span></span><br><span class="line">        <span class="comment">//System.out.println(sdf.format(date));</span></span><br><span class="line"></span><br><span class="line">        String dataStr=<span class="string">"2010-07-21 21:12:26"</span>;</span><br><span class="line">        Date date1=formatDate(dataStr,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(formatDate(date,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(formatDate(date1,<span class="string">"yyyy-MM-dd HH:mm:ss"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="String-VS-StringBuffer"><a href="#String-VS-StringBuffer" class="headerlink" title="String VS StringBuffer"></a>String VS StringBuffer</h2><p>String：对String类型的对象操作，等同于重新生成一个对象，然后将引用指向它；</p><p>StringBuffer：对StringBuffer类型的对象操作，操作的始终是用一个对象。     </p><ol><li>String</li></ol><p><img src="https://live.staticflickr.com/65535/48344498272_fa4a07241c_z.jpg" alt></p><p>代码示例：      </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap09.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/22 14:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestString</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str=<span class="string">"123"</span>;</span><br><span class="line">        str+=<span class="string">"abc"</span>;</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>StringBuffer</li></ol><p><img src="https://live.staticflickr.com/65535/48344384271_961416d201_z.jpg" alt></p><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap09.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/22 14:01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestStringBuffer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb=<span class="keyword">new</span> StringBuffer(<span class="string">"123"</span>);</span><br><span class="line">        sb.append(<span class="string">"abc"</span>);</span><br><span class="line">        System.out.println(sb);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Math类"><a href="#Math类" class="headerlink" title="Math类"></a>Math类</h2><blockquote><ol><li>max方法：求最大值</li><li>min方法：求最小值</li><li>round方法：四舍五入</li><li>pow方法：求次幂</li></ol></blockquote><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap09.sec03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/22 14:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMath</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"最大值："</span>+Math.max(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">        System.out.println(<span class="string">"最小值："</span>+Math.min(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line">        System.out.println(<span class="string">"四舍五入："</span>+Math.round(<span class="number">12.4</span>));</span><br><span class="line">        System.out.println(<span class="string">"次幂："</span>+Math.pow(<span class="number">3</span>,<span class="number">4</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Arrays类"><a href="#Arrays类" class="headerlink" title="Arrays类"></a>Arrays类</h2><blockquote><ol><li>toString()方法：返回指定数组内容的字符串表示形式</li><li>sort()方法：对指定的类型数组按数字升序进行排序</li><li>binarySearch()方法：使用二分搜索法来搜索指定类型数组，以获得指定的值</li><li>fill()方法：将指定类型值分配给指定类型数组的每个元素</li></ol></blockquote><p>代码示例：      </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap09.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/22 14:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestArrays</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> arr[]=&#123;<span class="number">1</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">8</span>,<span class="number">2</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">"以字符串形式输出数组："</span>+Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">        Arrays.sort(arr);   <span class="comment">//给数组排序</span></span><br><span class="line">        System.out.println(<span class="string">"排序后的数组"</span>+Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">        System.out.println(Arrays.binarySearch(arr,<span class="number">7</span>));</span><br><span class="line"></span><br><span class="line">        Arrays.fill(arr,<span class="number">0</span>);   <span class="comment">//将指定内容填充到数组中</span></span><br><span class="line">        System.out.println(<span class="string">"填充数组后的字符串："</span>+Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java泛型"><a href="#Java泛型" class="headerlink" title="Java泛型"></a>Java泛型</h1><h2 id="泛型引入"><a href="#泛型引入" class="headerlink" title="泛型引入"></a>泛型引入</h2><p>定义：使用泛型可以指代任意对象类型</p><p>代码示例：     </p><p><strong>C1.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/22 16:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C1</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Integer a;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">C1</span><span class="params">(Integer a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setA</span><span class="params">(Integer a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印a的类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"a的类型是："</span>+a.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>C2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/22 16:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C2</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String a;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">C2</span><span class="params">(String a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setA</span><span class="params">(String a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.a = a;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印a的类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"a的类型是："</span>+a.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>C12.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/22 16:09</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">C12</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object object;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">C12</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.object = object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getObject</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setObject</span><span class="params">(Object object)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.object = object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印object的类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"a的类型是："</span>+object.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>CC.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义泛型类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/24 15:56</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CC</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> T ob;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CC</span><span class="params">(T ob)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.ob = ob;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getOb</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ob;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOb</span><span class="params">(T ob)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ob = ob;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印T的类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"T的实际类型"</span>+ob.getClass().getName());;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/22 16:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//begin test c1</span></span><br><span class="line">        C1 c1=<span class="keyword">new</span> C1(<span class="number">1</span>);</span><br><span class="line">        c1.print();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i=c1.getA();</span><br><span class="line">        System.out.println(<span class="string">"i="</span>+i);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//end test c1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//begin test c2</span></span><br><span class="line">        C2 c2=<span class="keyword">new</span> C2(<span class="string">"Hi"</span>);</span><br><span class="line">        c2.print();</span><br><span class="line">        String s1=c2.getA();</span><br><span class="line">        System.out.println(<span class="string">"s1="</span>+s1);</span><br><span class="line">        <span class="comment">//end test c2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//begin test c12</span></span><br><span class="line">        C12 c12=<span class="keyword">new</span> C12(<span class="number">1</span>);   <span class="comment">//向上转型</span></span><br><span class="line">        c12.print();</span><br><span class="line">        <span class="keyword">int</span> i12= (Integer) c12.getObject();   <span class="comment">//向下转型</span></span><br><span class="line">        System.out.println(<span class="string">"i12="</span>+i12);</span><br><span class="line"></span><br><span class="line">        C12 c121=<span class="keyword">new</span> C12(<span class="string">"你好"</span>);  <span class="comment">//向上转型</span></span><br><span class="line">        c121.print();</span><br><span class="line">        String i121=(String) c121.getObject();  <span class="comment">//向下转型</span></span><br><span class="line">        System.out.println(<span class="string">"i121="</span>+i121);</span><br><span class="line">        <span class="comment">//end test c12</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//begin test CC</span></span><br><span class="line">        CC&lt;Integer&gt; cc=<span class="keyword">new</span> CC&lt;Integer&gt;(<span class="number">1</span>);</span><br><span class="line">        cc.print();</span><br><span class="line">        <span class="keyword">int</span> icc=cc.getOb();</span><br><span class="line">        System.out.println(<span class="string">"icc="</span>+icc);</span><br><span class="line">        <span class="comment">//end test CC</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//begin test CC</span></span><br><span class="line">        CC&lt;String&gt; cc1=<span class="keyword">new</span> CC&lt;String&gt;(<span class="string">"你好"</span>);</span><br><span class="line">        cc1.print();</span><br><span class="line">        String icc1=cc1.getOb();</span><br><span class="line">        System.out.println(<span class="string">"icc1="</span>+icc1);</span><br><span class="line">        <span class="comment">//end test CC</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="限制泛型"><a href="#限制泛型" class="headerlink" title="限制泛型"></a>限制泛型</h2><p>代码示例：     </p><p><strong>Animal.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/24 16:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"动物"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Cat.java</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package com.java.chap10.sec02;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author Yan</span><br><span class="line"> * @date 2019/7/24 16:07</span><br><span class="line"> */</span><br><span class="line">public class Cat extends Animal&#123;</span><br><span class="line">    public void print()&#123;</span><br><span class="line">        System.out.println(&quot;Cat&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Dog.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/24 16:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Dog"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Demo.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/24 16:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> &lt;<span class="title">T</span> <span class="keyword">extends</span> <span class="title">Animal</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> T ob;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Demo</span><span class="params">(T ob)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.ob = ob;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getOb</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ob;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOb</span><span class="params">(T ob)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.ob = ob;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"T的类型是： "</span>+ob.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/24 16:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo&lt;Dog&gt; demo=<span class="keyword">new</span> Demo&lt;Dog&gt;(<span class="keyword">new</span> Dog());</span><br><span class="line">        Dog dog=demo.getOb();</span><br><span class="line">        dog.print();</span><br><span class="line"></span><br><span class="line">        Demo&lt;Cat&gt; demo2=<span class="keyword">new</span> Demo&lt;Cat&gt;(<span class="keyword">new</span> Cat());</span><br><span class="line">        Cat cat=demo2.getOb();</span><br><span class="line">        cat.print();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Demo&lt;Integer&gt; demo3=new Demo&lt;Integer&gt;(2);</span></span><br><span class="line">        Demo&lt;Animal&gt; demo3=<span class="keyword">new</span> Demo&lt;Animal&gt;(<span class="keyword">new</span> Animal());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="通配符泛型"><a href="#通配符泛型" class="headerlink" title="通配符泛型"></a>通配符泛型</h2><p>代码示例：     </p><p><strong>Test.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.java.chap10.sec02.Animal;</span><br><span class="line"><span class="keyword">import</span> com.java.chap10.sec02.Cat;</span><br><span class="line"><span class="keyword">import</span> com.java.chap10.sec02.Demo;</span><br><span class="line"><span class="keyword">import</span> com.java.chap10.sec02.Dog;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/24 16:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通配符泛型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> animal</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">take</span><span class="params">(Demo&lt;?&gt; animal)</span></span>&#123;</span><br><span class="line">        animal.print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo&lt;Dog&gt; dog=<span class="keyword">new</span> Demo&lt;Dog&gt;(<span class="keyword">new</span> Dog());</span><br><span class="line">        take(dog);</span><br><span class="line"></span><br><span class="line">        Demo&lt;Cat&gt; cat=<span class="keyword">new</span> Demo&lt;Cat&gt;(<span class="keyword">new</span> Cat());</span><br><span class="line">        take(cat);</span><br><span class="line"></span><br><span class="line">        Demo&lt;Animal&gt; animalDemo=<span class="keyword">new</span> Demo&lt;Animal&gt;(<span class="keyword">new</span> Animal());</span><br><span class="line">        take(animalDemo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="泛型方法"><a href="#泛型方法" class="headerlink" title="泛型方法"></a>泛型方法</h2><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap10.sec04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/24 19:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 泛型方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> t</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> &lt;T&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">(T t)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"T的类型是："</span>+t.getClass().getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        f(<span class="string">""</span>);</span><br><span class="line">        f(<span class="number">1</span>);</span><br><span class="line">        f(<span class="number">1.0</span>);</span><br><span class="line">        f(<span class="keyword">new</span> Object());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java集合"><a href="#Java集合" class="headerlink" title="Java集合"></a>Java集合</h1><h2 id="Java集合的引入"><a href="#Java集合的引入" class="headerlink" title="Java集合的引入"></a>Java集合的引入</h2><p>代码示例：      </p><p><strong>Student.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap11.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/25 14:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Demo.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap11.sec01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/25 14:41</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Student student[]=<span class="keyword">new</span> Student[<span class="number">3</span>];</span><br><span class="line">        Student student1=<span class="keyword">new</span> Student(<span class="string">"张三"</span>,<span class="number">1</span>);</span><br><span class="line">        Student student2=<span class="keyword">new</span> Student(<span class="string">"李四"</span>,<span class="number">3</span>);</span><br><span class="line">        Student student3=<span class="keyword">new</span> Student(<span class="string">"王五"</span>,<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        LinkedList&lt;Student&gt; list=<span class="keyword">new</span> LinkedList&lt;Student&gt;();</span><br><span class="line">        list.add(student1);</span><br><span class="line">        list.add(student2);</span><br><span class="line">        list.add(student3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 遍历集合</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">            Student student4=list.get(i);</span><br><span class="line">            System.out.println(student4.getName()+<span class="string">":"</span>+student4.getAge());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="List集合"><a href="#List集合" class="headerlink" title="List集合"></a>List集合</h2><p>是Collection接口的子接口，也是最常用的接口。此接口对Collection接口进行了大量的扩展，List集合里的元素是允许重复的。      </p><ol><li>ArrayList实现类</li></ol><p>代码实现：    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap11.sec02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/25 15:09</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestArrayList</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArrayList</span><span class="params">(ArrayList&lt;String&gt; arrayList)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"当前的集合元素"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arrayList.size();i++)&#123;</span><br><span class="line">            System.out.print(arrayList.get(i)+<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ArrayList&lt;String&gt; arrayList=<span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="comment">//添加元素</span></span><br><span class="line">        arrayList.add(<span class="string">"张三"</span>);</span><br><span class="line">        arrayList.add(<span class="string">"李四"</span>);</span><br><span class="line"></span><br><span class="line">        printArrayList(arrayList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将指定的元素插入此列表中的指定位置</span></span><br><span class="line">        arrayList.add(<span class="number">1</span>,<span class="string">"小张三"</span>);</span><br><span class="line">        printArrayList(arrayList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//用指定的元素替代此列表指定位置上的元素</span></span><br><span class="line">        arrayList.set(<span class="number">2</span>,<span class="string">"小李四"</span>);</span><br><span class="line">        printArrayList(arrayList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//移除此列表中指定位上的元素</span></span><br><span class="line">        arrayList.remove(<span class="number">0</span>);</span><br><span class="line">        printArrayList(arrayList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>LinkedList实现类</li></ol><p>代码示例：    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap11.sec02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/25 15:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLinkedList</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printLinkedList</span><span class="params">(LinkedList&lt;String&gt; linkedList)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"当前元素集合："</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;linkedList.size();i++)&#123;</span><br><span class="line">            System.out.print(linkedList.get(i)+<span class="string">"  "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;String&gt; linkedList=<span class="keyword">new</span> LinkedList&lt;String&gt;();</span><br><span class="line">        linkedList.add(<span class="string">"张三"</span>);</span><br><span class="line">        linkedList.add(<span class="string">"李四"</span>);</span><br><span class="line">        linkedList.add(<span class="string">"王五"</span>);</span><br><span class="line">        linkedList.add(<span class="string">"李四"</span>);</span><br><span class="line">        linkedList.add(<span class="string">"赵六"</span>);</span><br><span class="line"></span><br><span class="line">        printLinkedList(linkedList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回此列表中首次出现的指定元素的索引，如果此列表中不包括该元素，则返回-1；</span></span><br><span class="line">        System.out.println(linkedList.indexOf(<span class="string">"李四"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取但不移除此列表的第一个元素；如果此列表为空，则返回null</span></span><br><span class="line">        System.out.println(linkedList.peekFirst());</span><br><span class="line">        printLinkedList(linkedList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取但不移除此列表的最后一个元素；如果此列表为空，则返回null</span></span><br><span class="line">        System.out.println(linkedList.peekLast());</span><br><span class="line">        printLinkedList(linkedList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取并移除此列表的第一个元素；如果此列表为空，则返回null</span></span><br><span class="line">        System.out.println(linkedList.pollFirst());</span><br><span class="line">        printLinkedList(linkedList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取并移除此列表的最后一个元素；如果此列表为空，则返回null</span></span><br><span class="line">        System.out.println(linkedList.pollLast());</span><br><span class="line">        printLinkedList(linkedList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="集合的遍历"><a href="#集合的遍历" class="headerlink" title="集合的遍历"></a>集合的遍历</h2><ol><li>Iterator</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap11.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.java.chap11.sec01.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/25 15:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;Student&gt; list=<span class="keyword">new</span> LinkedList&lt;Student&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> Student(<span class="string">"张三"</span>,<span class="number">10</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Student(<span class="string">"李四"</span>,<span class="number">20</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Student(<span class="string">"王五"</span>,<span class="number">30</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 用Iterator遍历集合</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Iterator&lt;Student&gt; iterator=list.iterator();   <span class="comment">//返回一个迭代器</span></span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext())&#123;</span><br><span class="line">            Student s=iterator.next();    <span class="comment">//返回迭代的下一个元素</span></span><br><span class="line">            System.out.println(<span class="string">"姓名："</span>+s.getName()+<span class="string">"   年龄："</span>+s.getAge());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>foreach</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap11.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.java.chap11.sec01.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/25 15:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestForeach</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;Student&gt; list=<span class="keyword">new</span> LinkedList&lt;Student&gt;();</span><br><span class="line">        list.add(<span class="keyword">new</span> Student(<span class="string">"张三"</span>,<span class="number">10</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Student(<span class="string">"李四"</span>,<span class="number">20</span>));</span><br><span class="line">        list.add(<span class="keyword">new</span> Student(<span class="string">"王五"</span>,<span class="number">30</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 用Foreach遍历集合</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (Student s:list)&#123;</span><br><span class="line">            System.out.println(<span class="string">"姓名："</span>+s.getName()+<span class="string">"   年龄："</span>+s.getAge());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Set集合"><a href="#Set集合" class="headerlink" title="Set集合"></a>Set集合</h2><p>是Collertion接口的子接口，没有对Collection接口进行扩展，里面不允许存重复的内容。     </p><ol><li>HashSet类</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap11.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/25 16:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHashSet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 1. HashSet是无序的</span></span><br><span class="line"><span class="comment">         * 2. 不允许有重复值</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        HashSet&lt;String&gt; hashSet=<span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">        hashSet.add(<span class="string">"1"</span>);</span><br><span class="line">        hashSet.add(<span class="string">"2"</span>);</span><br><span class="line">        hashSet.add(<span class="string">"5"</span>);</span><br><span class="line">        hashSet.add(<span class="string">"4"</span>);</span><br><span class="line">        hashSet.add(<span class="string">"2"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 用Iterator遍历集合</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Iterator&lt;String&gt; iterator=hashSet.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            String s=iterator.next();</span><br><span class="line">            System.out.println(s+<span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Map集合"><a href="#Map集合" class="headerlink" title="Map集合"></a>Map集合</h2><p>是存放一对值的最大接口，即接口中的每一个元素都是一对，以key-&gt;value键值对的形式保存。     </p><ol><li>HashMap类</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap11.sec05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.java.chap11.sec01.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/25 16:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestHashMap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, Student&gt; hashMap=<span class="keyword">new</span> HashMap&lt;String,Student&gt;();</span><br><span class="line">        hashMap.put(<span class="string">"1号"</span>,<span class="keyword">new</span> Student(<span class="string">"张三"</span>,<span class="number">10</span>));</span><br><span class="line">        hashMap.put(<span class="string">"2号"</span>,<span class="keyword">new</span> Student(<span class="string">"李四"</span>,<span class="number">20</span>));</span><br><span class="line">        hashMap.put(<span class="string">"3号"</span>,<span class="keyword">new</span> Student(<span class="string">"王五"</span>,<span class="number">30</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 通过key获取value</span></span><br><span class="line">        Student student=hashMap.get(<span class="string">"1号"</span>);</span><br><span class="line">        System.out.println(student.getName()+<span class="string">":"</span>+student.getAge());</span><br><span class="line"></span><br><span class="line">        Iterator&lt;String&gt; iterator=hashMap.keySet().iterator();  <span class="comment">//获取key的集合，再获取迭代器</span></span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">            String key=iterator.next();    <span class="comment">//获取key</span></span><br><span class="line">            Student student1=hashMap.get(key);   <span class="comment">//通过key获取value</span></span><br><span class="line">            System.out.println(<span class="string">"key="</span>+key+<span class="string">"value=["</span>+student1.getName()+<span class="string">","</span>+student1.getAge()+<span class="string">"]"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java多线程"><a href="#Java多线程" class="headerlink" title="Java多线程"></a>Java多线程</h1><h2 id="多线程的引入"><a href="#多线程的引入" class="headerlink" title="多线程的引入"></a>多线程的引入</h2><p>定义：同时对多项任务加以控制</p><p>代码示例：     </p><p><strong>Demo.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 13:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 听音乐</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">music</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"听音乐"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 吃饭</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)&#123;</span><br><span class="line">            System.out.println(<span class="string">"吃饭"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//music();</span></span><br><span class="line">        <span class="comment">//eat();</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 利用多线程实现一边吃饭一边听歌</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        Music musicThread=<span class="keyword">new</span> Music();</span><br><span class="line">        Eat eatThread=<span class="keyword">new</span> Eat();</span><br><span class="line">        musicThread.start();</span><br><span class="line">        eatThread.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Eat.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 13:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Eat</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                System.out.println(<span class="string">"吃饭"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Music.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 13:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Music</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1000</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                System.out.println(<span class="string">"听音乐"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Java多线程实现"><a href="#Java多线程实现" class="headerlink" title="Java多线程实现"></a>Java多线程实现</h2><ol><li>继承Thread类</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 13:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread1</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> baoZi=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> String threadName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Thread1</span><span class="params">(String threadName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.threadName = threadName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (baoZi&lt;=<span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(threadName+<span class="string">"吃第"</span>+baoZi+<span class="string">"包子"</span>);</span><br><span class="line">            baoZi++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"张三，李四一起吃包子，每人吃了10个"</span>);</span><br><span class="line">        Thread1 t1=<span class="keyword">new</span> Thread1(<span class="string">"张三线程"</span>);</span><br><span class="line">        Thread1 t2=<span class="keyword">new</span> Thread1(<span class="string">"李四线程"</span>);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现Runnable接口</li></ol><p>代码示例：    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 13:29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Thread2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> baoZi=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> String threadName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Thread2</span><span class="params">(String threadName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.threadName = threadName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (baoZi&lt;=<span class="number">10</span>)&#123;</span><br><span class="line">            System.out.println(threadName+<span class="string">"吃第"</span>+baoZi+<span class="string">"包子"</span>);</span><br><span class="line">            baoZi++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//System.out.println("张三，李四一起吃包子，每人吃了10个");</span></span><br><span class="line">        <span class="comment">//Thread2 t1=new Thread2("张三线程");</span></span><br><span class="line">        <span class="comment">//Thread2 t2=new Thread2("李四线程");</span></span><br><span class="line">        <span class="comment">//Thread t11=new Thread(t1);</span></span><br><span class="line">        <span class="comment">//Thread t12=new Thread(t2);</span></span><br><span class="line">        <span class="comment">//t11.start();</span></span><br><span class="line">        <span class="comment">//t12.start();</span></span><br><span class="line"></span><br><span class="line">        Thread2 t1=<span class="keyword">new</span> Thread2(<span class="string">"超级张三线程"</span>);</span><br><span class="line">        Thread t11=<span class="keyword">new</span> Thread(t1);</span><br><span class="line">        Thread t12=<span class="keyword">new</span> Thread(t1);</span><br><span class="line">        Thread t13=<span class="keyword">new</span> Thread(t1);</span><br><span class="line">        Thread t14=<span class="keyword">new</span> Thread(t1);</span><br><span class="line">        <span class="comment">//实现资源共享</span></span><br><span class="line">        t11.start();</span><br><span class="line">        t12.start();</span><br><span class="line">        t13.start();</span><br><span class="line">        t14.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程状态"><a href="#线程状态" class="headerlink" title="线程状态"></a>线程状态</h2><p><img src="https://live.staticflickr.com/65535/48385151952_855767c53c_z.jpg" alt></p><blockquote><ol><li>创建状态<br>在程序中用构造方法创建了一个线程对象后，新的线程对象便处于新建状态，此时，它已经有了相应的内存空间和其他资源，但还处于不可运行状态。新建一个线程对象可采用Thread类的构造方法来实现，例如，“Thread thread=new Thread();”。</li></ol></blockquote><blockquote><ol start="2"><li>就绪状态<br>新建线程对象后，调用该线程的start()方法就可以启动线程。当线程启动时，线程进入就绪状态。此时，线程将进入线程队列排队，等待CPU服务，这表明它已经具备了运行条件。</li></ol></blockquote><blockquote><ol start="3"><li>运行状态<br>当就绪状态的线程被调用并获得处理器资源时，线程就进入了运行状态。此时，自动调用该线程对象的run()方法。run()方法定义了该线程的操作和功能。</li></ol></blockquote><blockquote><ol start="4"><li>堵塞状态<br>一个正在运行的线程在某些特殊情况下，如被人为挂起或需要执行耗时的输入/输出操作时，将让出CPU并暂时中止自己的执行，进入堵塞状态，堵塞时，线程不能进入排队队列，只有当引起堵塞的原因被消除后，线程才可以转入就绪状态。</li></ol></blockquote><blockquote><ol start="5"><li>死亡状态<br>线程调用stop()方法时或run()方法执行结束后，即处于死亡状态。处于死亡状态的线程不具有继续运行的能力。</li></ol></blockquote><h2 id="线程常用方法"><a href="#线程常用方法" class="headerlink" title="线程常用方法"></a>线程常用方法</h2><ol><li>getName(); 返回该线程的名称。</li><li>currentThread(); 返回对当前正在执行的线程对象的引用。</li><li>isAlive(); 测试线程是否处于活动状态。</li><li>sleep(); 线程休眠。</li><li>setPriority(int newPriority); 更改线程的优先级。</li><li>yield(); 暂停当前正在执行的线程对象，并执行其他线程。</li></ol><p>代码示例：     </p><p><strong>getName()、currentThread()</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.plaf.TableHeaderUI;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 14:23</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="comment">//获取当前线程</span></span><br><span class="line">            Thread t=Thread.currentThread();</span><br><span class="line">            System.out.println(t.getName()+<span class="string">":"</span>+i);  <span class="comment">//返回线程的名称</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo1 demo1=<span class="keyword">new</span> Demo1();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1,<span class="string">"线程3"</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>isAlive()</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 14:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="comment">//获取当前线程</span></span><br><span class="line">            Thread t=Thread.currentThread();</span><br><span class="line">            System.out.println(t.getName()+<span class="string">":"</span>+i);  <span class="comment">//返回线程的名称</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo2 demo2=<span class="keyword">new</span> Demo2();</span><br><span class="line">        Thread t1=<span class="keyword">new</span> Thread(demo2);</span><br><span class="line">        System.out.println(<span class="string">"t1是否活动："</span>+t1.isAlive());</span><br><span class="line">        t1.start();</span><br><span class="line">        System.out.println(<span class="string">"t1是否活动："</span>+t1.isAlive());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>sleep()</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 14:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="comment">//获取当前线程</span></span><br><span class="line">                Thread t=Thread.currentThread();</span><br><span class="line">                System.out.println(t.getName()+<span class="string">":"</span>+i);  <span class="comment">//返回线程的名称</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo3 demo2=<span class="keyword">new</span> Demo3();</span><br><span class="line">        Thread t1=<span class="keyword">new</span> Thread(demo2);</span><br><span class="line">        t1.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>setPriority(int newPriority)</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 14:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="comment">//获取当前线程</span></span><br><span class="line">                Thread t=Thread.currentThread();</span><br><span class="line">                System.out.println(t.getName()+<span class="string">":"</span>+i);  <span class="comment">//返回线程的名称</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo4 demo4=<span class="keyword">new</span> Demo4();</span><br><span class="line">        Thread t1=<span class="keyword">new</span> Thread(demo4,<span class="string">"线程A"</span>);</span><br><span class="line">        Thread t2=<span class="keyword">new</span> Thread(demo4,<span class="string">"线程B"</span>);</span><br><span class="line">        Thread t3=<span class="keyword">new</span> Thread(demo4,<span class="string">"线程C"</span>);</span><br><span class="line">        t1.setPriority(Thread.MAX_PRIORITY);</span><br><span class="line">        t2.setPriority(Thread.MIN_PRIORITY);</span><br><span class="line">        t3.setPriority(Thread.NORM_PRIORITY);</span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line">        t3.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>yield()</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 14:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="comment">//获取当前线程</span></span><br><span class="line">                Thread t = Thread.currentThread();</span><br><span class="line">                System.out.println(t.getName() + <span class="string">":"</span> + i);  <span class="comment">//返回线程的名称</span></span><br><span class="line">                <span class="keyword">if</span> (i==<span class="number">5</span>)&#123;</span><br><span class="line">                    System.out.println(<span class="string">"线程礼让"</span>);</span><br><span class="line">                    Thread.currentThread().yield();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo5 demo5 = <span class="keyword">new</span> Demo5();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo5, <span class="string">"线程A"</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo5, <span class="string">"线程B"</span>).start();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="线程同步"><a href="#线程同步" class="headerlink" title="线程同步"></a>线程同步</h2><ol><li><p>同步方法</p></li><li><p>同步锁</p></li></ol><p>代码示例：     </p><p><strong>Demo2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 14:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> baoZi=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 同步方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (baoZi&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(Thread.currentThread().getName()+<span class="string">"吃了第"</span>+baoZi+<span class="string">"包子"</span>);</span><br><span class="line">            baoZi--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo2 demo1=<span class="keyword">new</span> Demo2();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1,<span class="string">"张三"</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1,<span class="string">"李四"</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1,<span class="string">"王五"</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Demo3.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap12.sec05;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 14:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> baoZi = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 同步块</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span> (baoZi &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                System.out.println(Thread.currentThread().getName() + <span class="string">"吃了第"</span> + baoZi + <span class="string">"包子"</span>);</span><br><span class="line">                baoZi--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Demo3 demo1 = <span class="keyword">new</span> Demo3();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1, <span class="string">"张三"</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1, <span class="string">"李四"</span>).start();</span><br><span class="line">        <span class="keyword">new</span> Thread(demo1, <span class="string">"王五"</span>).start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java图形界面Swing框架"><a href="#Java图形界面Swing框架" class="headerlink" title="Java图形界面Swing框架"></a>Java图形界面Swing框架</h1><h2 id="Swing简介"><a href="#Swing简介" class="headerlink" title="Swing简介"></a>Swing简介</h2><ol><li>Swing是Java的一个图形框架，继承自AWT；</li><li>Swing主要涉及到容器，组件，还有布局管理器；</li><li>Swing与用户交互的时候还涉及到事件概念</li></ol><h2 id="JFrame容器"><a href="#JFrame容器" class="headerlink" title="JFrame容器"></a>JFrame容器</h2><ol><li><p>public void setVisible(boolean b):根据参数b的值显示或隐藏此窗体</p></li><li><p>public void setSize(int width,int height):调整组件的大小，使其宽度为width，高度为height</p></li><li><p>public void setLocation(int x,.int y):将组件移到新位置。通过此组件父级坐标空间中的x和y参数来指定新位置的左上角</p></li><li><p>public Container getContentPane():返回此窗体的contentPane对象</p></li><li><p>public void setBackground(Color c):设置组件的背景色</p></li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 15:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JFrameTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame=<span class="keyword">new</span> JFrame(<span class="string">"JFrame窗体"</span>);</span><br><span class="line">        <span class="comment">/*Container c=jFrame.getContentPane();</span></span><br><span class="line"><span class="comment">        c.setBackground(Color.blue);*/</span></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>,<span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>,<span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JButton组件"><a href="#JButton组件" class="headerlink" title="JButton组件"></a>JButton组件</h2><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 16:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JButtonTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame=<span class="keyword">new</span> JFrame(<span class="string">"JButton测试"</span>);</span><br><span class="line">        JButton jButton=<span class="keyword">new</span> JButton(<span class="string">"这是一个按钮"</span>);</span><br><span class="line">        jFrame.add(jButton);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>,<span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>,<span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Swing布局管理器"><a href="#Swing布局管理器" class="headerlink" title="Swing布局管理器"></a>Swing布局管理器</h2><ol><li>FlowLayout流式布局<br>使用此种布局方式会使所有的组件像流水一样依次进行排列</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * FlowLayout流式布局</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/27 16:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlowLayout</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame=<span class="keyword">new</span> JFrame(<span class="string">"FlowLayout测试"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//jFrame.setLayout(new java.awt.FlowLayout());</span></span><br><span class="line">        <span class="comment">//jFrame.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));</span></span><br><span class="line">        jFrame.setLayout(<span class="keyword">new</span> java.awt.FlowLayout(java.awt.FlowLayout.LEFT,<span class="number">15</span>,<span class="number">15</span>));</span><br><span class="line">        JButton jButton=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)&#123;</span><br><span class="line">            jButton=<span class="keyword">new</span> JButton(<span class="string">"JButton"</span>+i);</span><br><span class="line">            jFrame.add(jButton);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>,<span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>,<span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>BorderLayout<br>使用此种布局方式将一个窗体的版面划分成东、西、南、北、中5个区域，可以直接将需要的组件放到这5个区域中</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 15:35</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BorderLayoutTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame=<span class="keyword">new</span> JFrame(<span class="string">"BorderLayout测试"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//jFrame.setLayout(new BorderLayout());</span></span><br><span class="line">        jFrame.setLayout(<span class="keyword">new</span> BorderLayout(<span class="number">5</span>,<span class="number">5</span>));</span><br><span class="line">        jFrame.add(<span class="keyword">new</span> JButton(<span class="string">"东"</span>),BorderLayout.EAST);</span><br><span class="line">        jFrame.add(<span class="keyword">new</span> JButton(<span class="string">"西"</span>),BorderLayout.WEST);</span><br><span class="line">        jFrame.add(<span class="keyword">new</span> JButton(<span class="string">"南"</span>),BorderLayout.SOUTH);</span><br><span class="line">        jFrame.add(<span class="keyword">new</span> JButton(<span class="string">"北"</span>),BorderLayout.NORTH);</span><br><span class="line">        jFrame.add(<span class="keyword">new</span> JButton(<span class="string">"中"</span>),BorderLayout.CENTER);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>,<span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>,<span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>GridLayout表格布局<br>使用此种布局是以表格的形式进行布局管理的，在使用此布局管理器时必须设置显示的行数和列数</li></ol><p>代码示例：      </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 15:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GridLayoutTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame=<span class="keyword">new</span> JFrame(<span class="string">"GridLayout测试"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">4</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>));</span><br><span class="line">        JButton jButton=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">19</span>;i++)&#123;</span><br><span class="line">            jButton=<span class="keyword">new</span> JButton(<span class="string">"JButton"</span>+i);</span><br><span class="line">            jFrame.add(jButton);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>,<span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>,<span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>绝对布局</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 15:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AbsoluteLayoutTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame=<span class="keyword">new</span> JFrame(<span class="string">"绝对布局测试"</span>);</span><br><span class="line"></span><br><span class="line">        jFrame.setLayout(<span class="keyword">null</span>);</span><br><span class="line">        JButton jButton1=<span class="keyword">new</span> JButton(<span class="string">"按钮1"</span>);</span><br><span class="line">        JButton jButton2=<span class="keyword">new</span> JButton(<span class="string">"按钮2"</span>);</span><br><span class="line">        jFrame.add(jButton1);</span><br><span class="line">        jFrame.add(jButton2);</span><br><span class="line">        jButton1.setBounds(<span class="number">50</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">20</span>);</span><br><span class="line">        jButton2.setBounds(<span class="number">70</span>,<span class="number">40</span>,<span class="number">200</span>,<span class="number">30</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>,<span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>,<span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JLable-组件"><a href="#JLable-组件" class="headerlink" title="JLable 组件"></a>JLable 组件</h2><p>代码示例：    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec05;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 16:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JLableTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame=<span class="keyword">new</span> JFrame(<span class="string">"JLable测试"</span>);</span><br><span class="line"></span><br><span class="line">        JLabel jLabel=<span class="keyword">new</span> JLabel(<span class="string">"JLable组件"</span>,JLabel.CENTER);</span><br><span class="line">        jFrame.add(jLabel);</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>,<span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>,<span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="文本框组件"><a href="#文本框组件" class="headerlink" title="文本框组件"></a>文本框组件</h2><ol><li>JTextField 文本框</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 16:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JTextFiledTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame=<span class="keyword">new</span> JFrame(<span class="string">"JTextFiled单行文本框测试"</span>);</span><br><span class="line"></span><br><span class="line">        jFrame.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">        JLabel jLabel=<span class="keyword">new</span> JLabel(<span class="string">"用户名："</span>);</span><br><span class="line">        JTextField jTextField=<span class="keyword">new</span> JTextField();</span><br><span class="line">        jFrame.add(jLabel);</span><br><span class="line">        jFrame.add(jTextField);</span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>,<span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>,<span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>JPasswordField 密码框</li></ol><p>代码示例：      </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 16:42</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JPasswordFiledTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame = <span class="keyword">new</span> JFrame(<span class="string">"JPasswordFiled密码框测试"</span>);</span><br><span class="line"></span><br><span class="line">        jFrame.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">10</span>));</span><br><span class="line">        JLabel jLabel = <span class="keyword">new</span> JLabel(<span class="string">"用户名："</span>);</span><br><span class="line">        JTextField jTextField = <span class="keyword">new</span> JTextField();</span><br><span class="line">        JLabel jLabe2 = <span class="keyword">new</span> JLabel(<span class="string">"密码："</span>);</span><br><span class="line">        JPasswordField jPasswordField=<span class="keyword">new</span> JPasswordField();</span><br><span class="line">        jFrame.add(jLabel);</span><br><span class="line">        jFrame.add(jTextField);</span><br><span class="line">        jFrame.add(jLabe2);</span><br><span class="line">        jFrame.add(jPasswordField);</span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>, <span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>, <span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>JTextArea 文本域</li></ol><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec06;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 16:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JTextAreaTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame = <span class="keyword">new</span> JFrame(<span class="string">"JTextArea文本域测试"</span>);</span><br><span class="line"></span><br><span class="line">        jFrame.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">1</span>, <span class="number">2</span>, <span class="number">10</span>, <span class="number">10</span>));</span><br><span class="line">        JLabel jLabel = <span class="keyword">new</span> JLabel(<span class="string">"描述："</span>);</span><br><span class="line">        JTextArea jTextArea = <span class="keyword">new</span> JTextArea();</span><br><span class="line">        jFrame.add(jLabel);</span><br><span class="line">        jFrame.add(jTextArea);</span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>, <span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>, <span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JPanel-轻量级容器"><a href="#JPanel-轻量级容器" class="headerlink" title="JPanel 轻量级容器"></a>JPanel 轻量级容器</h2><p>代码示例：     </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec07;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> javax.swing.border.EmptyBorder;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 16:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JPanelTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame = <span class="keyword">new</span> JFrame(<span class="string">"JPanel面板测试"</span>);</span><br><span class="line"></span><br><span class="line">        JPanel jPanel=<span class="keyword">new</span> JPanel();</span><br><span class="line">        jPanel.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">10</span>));</span><br><span class="line">        jFrame.add(jPanel);</span><br><span class="line">        jPanel.setBorder(<span class="keyword">new</span> EmptyBorder(<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>));   <span class="comment">//设置边距</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        JLabel jLabel = <span class="keyword">new</span> JLabel(<span class="string">"用户名："</span>);</span><br><span class="line">        JTextField jTextField = <span class="keyword">new</span> JTextField();</span><br><span class="line">        JLabel jLabe2 = <span class="keyword">new</span> JLabel(<span class="string">"密码："</span>);</span><br><span class="line">        JPasswordField jPasswordField = <span class="keyword">new</span> JPasswordField();</span><br><span class="line">        JButton jButton=<span class="keyword">new</span> JButton(<span class="string">"登录"</span>);</span><br><span class="line">        JButton jButton2=<span class="keyword">new</span> JButton(<span class="string">"重置"</span>);</span><br><span class="line"></span><br><span class="line">        jPanel.add(jLabel);</span><br><span class="line">        jPanel.add(jTextField);</span><br><span class="line">        jPanel.add(jLabe2);</span><br><span class="line">        jPanel.add(jPasswordField);</span><br><span class="line">        jPanel.add(jButton);</span><br><span class="line">        jPanel.add(jButton2);</span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>, <span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>, <span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Swing事件处理"><a href="#Swing事件处理" class="headerlink" title="Swing事件处理"></a>Swing事件处理</h2><p>代码示例：     </p><p><strong>demo1</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec08;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.ActionListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 22:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JButtonListener</span> <span class="keyword">implements</span> <span class="title">ActionListener</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">        System.out.println(e.getActionCommand());</span><br><span class="line">        JOptionPane.showMessageDialog(<span class="keyword">null</span>,<span class="string">"我被点击了"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EventTest1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame = <span class="keyword">new</span> JFrame(<span class="string">"Swing事件"</span>);</span><br><span class="line">        JButton jButton=<span class="keyword">new</span> JButton(<span class="string">"我是一个按钮"</span>);</span><br><span class="line"></span><br><span class="line">        JButtonListener jButtonListener=<span class="keyword">new</span> JButtonListener();</span><br><span class="line">        jButton.addActionListener(jButtonListener);  <span class="comment">//添加/注册事件监听</span></span><br><span class="line"></span><br><span class="line">        jFrame.add(jButton);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>, <span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>, <span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>demo2</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec08;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowListener;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 22:17</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//class MyWindowListener implements WindowListener &#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void windowOpened(WindowEvent e) &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println("窗口被打开");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void windowClosing(WindowEvent e) &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println("窗口关闭");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void windowClosed(WindowEvent e) &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println("窗口被关闭");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void windowIconified(WindowEvent e) &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println("窗口最小化");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void windowDeiconified(WindowEvent e) &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println("窗口从最小化恢复");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void windowActivated(WindowEvent e) &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println("窗口被选中");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void windowDeactivated(WindowEvent e) &#123;</span></span><br><span class="line"><span class="comment">//        System.out.println("窗口选中被取消");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EventTest2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame = <span class="keyword">new</span> JFrame(<span class="string">"Swing事件"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//MyWindowListener myWindowListener=new MyWindowListener();</span></span><br><span class="line">        <span class="comment">//jFrame.addWindowListener(myWindowListener);</span></span><br><span class="line"></span><br><span class="line">        jFrame.addWindowListener(<span class="keyword">new</span> WindowListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowOpened</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"窗口被打开"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"窗口关闭"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosed</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"窗口被关闭"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowIconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"窗口最小化"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeiconified</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"窗口从最小化恢复"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowActivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"窗口被选中"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowDeactivated</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                System.out.println(<span class="string">"窗口选中被取消"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>, <span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>, <span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>demo3</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap13.sec08;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.swing.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowAdapter;</span><br><span class="line"><span class="keyword">import</span> java.awt.event.WindowEvent;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/28 22:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//class MyWindowAdapter extends WindowAdapter&#123;</span></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void windowClosing(WindowEvent e) &#123;</span></span><br><span class="line"><span class="comment">//        super.windowClosing(e);</span></span><br><span class="line"><span class="comment">//        System.out.println("窗口关闭。。。。。。。");</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EventTest3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JFrame jFrame = <span class="keyword">new</span> JFrame(<span class="string">"Swing事件"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//MyWindowAdapter myWindowAdapter=new MyWindowAdapter();</span></span><br><span class="line">        <span class="comment">//jFrame.addWindowListener(myWindowAdapter);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        jFrame.addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.windowClosing(e);</span><br><span class="line">                System.out.println(<span class="string">"窗口关闭。。。。"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        jFrame.getContentPane().setBackground(Color.red);   <span class="comment">//设置容器的背景颜色</span></span><br><span class="line">        jFrame.setLocation(<span class="number">300</span>, <span class="number">200</span>);   <span class="comment">//设置容器的位置</span></span><br><span class="line">        jFrame.setSize(<span class="number">500</span>, <span class="number">500</span>);    <span class="comment">//设置容器大小</span></span><br><span class="line">        jFrame.setVisible(<span class="keyword">true</span>);  <span class="comment">//让容器显示</span></span><br><span class="line">        jFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java-IO流"><a href="#Java-IO流" class="headerlink" title="Java IO流"></a>Java IO流</h1><h2 id="IO流简介"><a href="#IO流简介" class="headerlink" title="IO流简介"></a>IO流简介</h2><p>流是一组有顺序的，有起点和终点的字节集合，是对数据传输的总称或抽象。即数据再两设备间的传输称为流，流的本质是数据传输，根据数据传输特性将流抽象为各种类，方便更直观的进行数据操作。</p><p><img src="https://live.staticflickr.com/65535/48411733786_ac1f14f1b1_b.jpg" alt></p><blockquote><p>IO 流的分类<br>根据处理数据类型的不同分类：字符流和字节流<br>根据数据流向不同分为：输入流和输出流</p></blockquote><h2 id="文件操作File类"><a href="#文件操作File类" class="headerlink" title="文件操作File类"></a>文件操作File类</h2><ol><li>public boolean mkdir()：创建此抽象路径名指定的目录</li><li>public boolean createNewFile():创建一个文件</li><li>public boolean delete():删除此抽象路径名表示的文件或目录。如果此路径名表示一个目录，则该目录必须为空才能删除</li><li>public boolean exists():测试此抽象路径名表示的文件或目录是否存在</li><li>public File[] listFiles():返回一个抽象路径名数组，这些路径名表示此抽象路径名表示的目录中的文件</li><li>public boolean idDirectory():测试此抽象路径名表示的文件是否是一个目录</li></ol><p>代码示例：     </p><p><strong>Demo1.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/30 15:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://java创建的目录"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> b=file.mkdir();   <span class="comment">//创建虚拟目录</span></span><br><span class="line">        <span class="keyword">if</span> (b)&#123;</span><br><span class="line">            System.out.println(<span class="string">"目录创建成功"</span>);</span><br><span class="line">            file=<span class="keyword">new</span> File(<span class="string">"D://java创建的目录//java创建的文件.txt"</span>);</span><br><span class="line">            <span class="keyword">boolean</span> b2=file.createNewFile();   <span class="comment">//创建文件</span></span><br><span class="line">            <span class="keyword">if</span> (b2)&#123;</span><br><span class="line">                System.out.println(<span class="string">"文件创建成功"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"文件创建失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"目录创建失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Demo2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/30 15:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://java创建的目录//Java创建的文件.txt"</span>);</span><br><span class="line">        <span class="keyword">if</span> (file.exists())&#123;  <span class="comment">//假如目录存在</span></span><br><span class="line">            <span class="keyword">boolean</span> b=file.delete();    <span class="comment">//删除文件</span></span><br><span class="line">            <span class="keyword">if</span> (b)&#123;</span><br><span class="line">                System.out.println(<span class="string">"删除文件成功"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"删除文件失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        file=<span class="keyword">new</span> File(<span class="string">"D://java创建的目录"</span>);</span><br><span class="line">        <span class="keyword">if</span> (file.exists())&#123;</span><br><span class="line">            <span class="keyword">boolean</span> b2=file.delete();   <span class="comment">//删除目录</span></span><br><span class="line">            <span class="keyword">if</span> (b2)&#123;</span><br><span class="line">                System.out.println(<span class="string">"删除目录成功"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">"删除目录失败"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Demo3.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/30 17:21</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://图书"</span>);</span><br><span class="line">        File files[]=file.listFiles();    <span class="comment">//遍历目录</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;files.length;i++)&#123;</span><br><span class="line">            System.out.println(files[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Demo4.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec02;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/30 17:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 打印文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">listFile</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (file != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (file.isDirectory()) &#123;  <span class="comment">//是目录</span></span><br><span class="line">                File files[]=file.listFiles();   <span class="comment">//遍历目录</span></span><br><span class="line">                <span class="keyword">if</span> (files!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;files.length;i++)&#123;</span><br><span class="line">                        listFile(files[i]);   <span class="comment">//递归调用</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;    <span class="comment">//是文件</span></span><br><span class="line">                System.out.println(file);    <span class="comment">//是文件，直接打印文件的路径</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://实验报告"</span>);</span><br><span class="line">        listFile(file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="字节输入，输出流"><a href="#字节输入，输出流" class="headerlink" title="字节输入，输出流"></a>字节输入，输出流</h2><ol><li>InputStream 读取文件</li></ol><p>代码示例：    </p><p><strong>Demo1.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 14:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        InputStream inputStream=<span class="keyword">new</span> FileInputStream(file);   <span class="comment">//实例化FileInputStream</span></span><br><span class="line">        <span class="keyword">byte</span> b[]=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="keyword">int</span> len=inputStream.read(b);</span><br><span class="line">        inputStream.read(b);</span><br><span class="line">        inputStream.close();   <span class="comment">//关闭输出流</span></span><br><span class="line">        System.out.println(<span class="string">"读取的内容："</span>+<span class="keyword">new</span> String(b,<span class="number">0</span>,len));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Demo2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 14:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        InputStream inputStream=<span class="keyword">new</span> FileInputStream(file);   <span class="comment">//实例化FileInputStream</span></span><br><span class="line">        <span class="keyword">int</span> fileLength= (<span class="keyword">int</span>) file.length();</span><br><span class="line">        <span class="keyword">byte</span> b[]=<span class="keyword">new</span> <span class="keyword">byte</span>[fileLength];</span><br><span class="line">        <span class="keyword">int</span> len=inputStream.read(b);</span><br><span class="line">        inputStream.read(b);</span><br><span class="line">        inputStream.close();   <span class="comment">//关闭输出流</span></span><br><span class="line">        System.out.println(<span class="string">"读取的内容："</span>+<span class="keyword">new</span> String(b));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Demo3.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 14:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        InputStream inputStream=<span class="keyword">new</span> FileInputStream(file);   <span class="comment">//实例化FileInputStream</span></span><br><span class="line">        <span class="keyword">int</span> fileLength= (<span class="keyword">int</span>) file.length();</span><br><span class="line">        <span class="keyword">byte</span> b[]=<span class="keyword">new</span> <span class="keyword">byte</span>[fileLength];</span><br><span class="line">        <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((temp=inputStream.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//一个字节一个字节读取，放到b字节数组里</span></span><br><span class="line">            b[len++]= (<span class="keyword">byte</span>) temp;</span><br><span class="line">        &#125;</span><br><span class="line">        inputStream.close();   <span class="comment">//关闭输出流</span></span><br><span class="line">        System.out.println(<span class="string">"读取的内容："</span>+<span class="keyword">new</span> String(b));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>OutputStream 写入文件</li></ol><p>代码示例：     </p><p><strong>Demo4.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 15:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        OutputStream outputStream=<span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">        String str=<span class="string">"你好，我好，大家好"</span>;</span><br><span class="line">        <span class="keyword">byte</span> b[]=str.getBytes();</span><br><span class="line">        outputStream.write(b);   <span class="comment">//将b字节数组写入到输出流中</span></span><br><span class="line">        outputStream.close();   <span class="comment">//关闭输出流</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Demo5.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 15:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo5</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        OutputStream outputStream=<span class="keyword">new</span> FileOutputStream(file,<span class="keyword">true</span>);  <span class="comment">//true追加</span></span><br><span class="line">        String str=<span class="string">"你好，我好，大家好"</span>;</span><br><span class="line">        <span class="keyword">byte</span> b[]=str.getBytes();</span><br><span class="line">        outputStream.write(b);   <span class="comment">//将b字节数组写入到输出流中</span></span><br><span class="line">        outputStream.close();   <span class="comment">//关闭输出流</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>BufferedInputStream和BufferedOutputStream</li></ol><p>代码示例：    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec03;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 22:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo6</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓冲</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bufferStream</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//定义一个带缓冲的字节输入流</span></span><br><span class="line">        BufferedInputStream bufferedInputStream = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="string">"D://实验报告//android//Android应用开发实验指导书.doc"</span>));</span><br><span class="line">        <span class="comment">//定义一个带缓冲的字节输出流</span></span><br><span class="line">        BufferedOutputStream bufferedOutputStream = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="string">"D://复制的文件2.doc"</span>));</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">        Long startTime = System.currentTimeMillis();  <span class="comment">//开始时间</span></span><br><span class="line">        <span class="keyword">while</span> ((b = bufferedInputStream.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            bufferedOutputStream.write(b);</span><br><span class="line">        &#125;</span><br><span class="line">        bufferedInputStream.close();</span><br><span class="line">        bufferedOutputStream.close();</span><br><span class="line">        Long endTime = System.currentTimeMillis();   <span class="comment">//结束时间</span></span><br><span class="line">        System.out.println(<span class="string">"缓冲花费的时间："</span> + (endTime - startTime));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 非缓冲</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">stream</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        InputStream inputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"D://实验报告//android//Android应用开发实验指导书.doc"</span>);  <span class="comment">//定义一个输入流</span></span><br><span class="line">        OutputStream outputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">"D://复制的文件.doc"</span>);</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">0</span>;</span><br><span class="line">        Long startTime = System.currentTimeMillis();  <span class="comment">//开始时间</span></span><br><span class="line">        <span class="keyword">while</span> ((b = inputStream.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            outputStream.write(b);</span><br><span class="line">        &#125;</span><br><span class="line">        inputStream.close();</span><br><span class="line">        outputStream.close();</span><br><span class="line">        Long endTime = System.currentTimeMillis();   <span class="comment">//结束时间</span></span><br><span class="line">        System.out.println(<span class="string">"非缓冲花费的时间："</span> + (endTime - startTime));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        stream();</span><br><span class="line"></span><br><span class="line">        bufferStream();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>缓冲和非缓冲的区别及性能对比</li></ol><h2 id="字符输入、输出流"><a href="#字符输入、输出流" class="headerlink" title="字符输入、输出流"></a>字符输入、输出流</h2><ol><li>Reader读取文件</li></ol><p>代码示例：    </p><p><strong>Demo1.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 23:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        Reader reader=<span class="keyword">new</span> FileReader(file);</span><br><span class="line">        <span class="keyword">char</span> c[]=<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];   <span class="comment">//字符数组</span></span><br><span class="line">        <span class="keyword">int</span> len=reader.read(c);</span><br><span class="line">        reader.close();   <span class="comment">//关闭输入流</span></span><br><span class="line">        System.out.println(<span class="string">"读取的内容是："</span>+<span class="keyword">new</span> String(c,<span class="number">0</span>,len));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Demo2.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec04;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.Reader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 23:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        Reader reader=<span class="keyword">new</span> FileReader(file);</span><br><span class="line">        <span class="keyword">char</span> c[]=<span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">1024</span>];   <span class="comment">//字符数组</span></span><br><span class="line">        <span class="keyword">int</span> temp=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ((temp=reader.read())!=-<span class="number">1</span>)&#123;</span><br><span class="line">            c[len++]= (<span class="keyword">char</span>) temp;</span><br><span class="line">        &#125;</span><br><span class="line">        reader.close();   <span class="comment">//关闭输入流</span></span><br><span class="line">        System.out.println(<span class="string">"读取的内容是："</span>+<span class="keyword">new</span> String(c,<span class="number">0</span>,len));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>Writer写入文件</li></ol><p>代码示例：     </p><p><strong>Demo3.java</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec04;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 23:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        Writer out = <span class="keyword">new</span> FileWriter(file);</span><br><span class="line">        String str = <span class="string">"我爱中华"</span>;</span><br><span class="line">        out.write(str);   <span class="comment">//将字符串写入输出流</span></span><br><span class="line">        out.close();   <span class="comment">//关闭输出流</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>Demo4.java</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.java.chap14.sec04;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.Writer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Yan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/31 23:06</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo4</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">"D://测试文件.txt"</span>);</span><br><span class="line">        Writer out = <span class="keyword">new</span> FileWriter(file,<span class="keyword">true</span>);</span><br><span class="line">        String str = <span class="string">"我爱中华"</span>;</span><br><span class="line">        out.write(str);   <span class="comment">//将字符串写入输出流</span></span><br><span class="line">        out.close();   <span class="comment">//关闭输出流</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h3><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="http://www.java1234.com/" target="_blank" rel="noopener">Java知识分享网</a></li><li><a href="https://www.bilibili.com/video/av45829913" target="_blank" rel="noopener">Java入门到精通-基础篇</a><br><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">op=>operation: Hello World.java(Javac 编译)op1=>operation: Hello World.class(Java 运行)op2=>operation: 执行并运行结果e=>endop->op1->op2</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;代码仓库地址&quot;&gt;&lt;a href=&quot;#代码仓库地址&quot; class=&quot;headerlink&quot; title=&quot;代码仓库地址&quot;&gt;&lt;/a&gt;代码仓库地址&lt;/h1&gt;&lt;p&gt;欢迎下载：&lt;a href=&quot;https://github.com/yanxin152133/java&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;运行环境：    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IntelliJ IDEA 2019.1.3(Ultimate Edition)&lt;/li&gt;
&lt;li&gt;jdk 1.8.0_211&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Java-基础&quot;&gt;&lt;a href=&quot;#Java-基础&quot; class=&quot;headerlink&quot; title=&quot;Java 基础&quot;&gt;&lt;/a&gt;Java 基础&lt;/h1&gt;&lt;h1 id=&quot;Java简介&quot;&gt;&lt;a href=&quot;#Java简介&quot; class=&quot;headerlink&quot; title=&quot;Java简介&quot;&gt;&lt;/a&gt;Java简介&lt;/h1&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
      <category term="基础" scheme="http://yoursite.com/categories/Java/%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="基础" scheme="http://yoursite.com/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>整合Swagger</title>
    <link href="http://yoursite.com/2019/07/13/Spring%20Boot%20%E6%95%B4%E5%90%88Swagger/"/>
    <id>http://yoursite.com/2019/07/13/Spring Boot 整合Swagger/</id>
    <published>2019-07-13T12:40:56.543Z</published>
    <updated>2019-07-13T12:48:58.192Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Swagger 是一款RESTFUL接口的文档在线自动生成+功能测试功能软件。本文简单介绍了在项目中集成swagger的方法和一些常见问题。 如果想深入分析项目源码，了解更多内容，见参考资料。Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法，参数和模型紧密集成到服务器端的代码，允许API来始终保持同步。Swagger 让部署管理和使用功能强大的API从未如此简单。</p></blockquote><a id="more"></a><h1 id="整合"><a href="#整合" class="headerlink" title="整合"></a>整合</h1><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">      &lt;!-- swagger api文档 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.6.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="SwaggerConfig-java"><a href="#SwaggerConfig-java" class="headerlink" title="SwaggerConfig.java"></a>SwaggerConfig.java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">package com.cleanhome.service.config;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line">import springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line">import springfox.documentation.builders.PathSelectors;</span><br><span class="line">import springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line">import springfox.documentation.service.ApiInfo;</span><br><span class="line">import springfox.documentation.spi.DocumentationType;</span><br><span class="line">import springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line">import springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author Yan</span><br><span class="line"> * @date 2019/6/10 13:58</span><br><span class="line"> *</span><br><span class="line"> * swaggerui配置文件</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">public class SwaggerConfig &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 创建API应用</span><br><span class="line">     * apiInfo() 增加API相关信息</span><br><span class="line">     * 通过select()函数返回一个ApiSelectorBuilder实例,用来控制哪些接口暴露给Swagger来展现，</span><br><span class="line">     * 本例采用指定扫描的包路径来定义指定要建立API的目录。</span><br><span class="line">     *</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    @Bean</span><br><span class="line">    public Docket createRestApi() &#123;</span><br><span class="line">        return new Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(&quot;com.cleanhome.service.controller&quot;))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 创建该API的基本信息（这些基本信息会展现在文档页面中）</span><br><span class="line">     * 访问地址：http://项目实际地址/swagger-ui.html</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private ApiInfo apiInfo() &#123;</span><br><span class="line">        return new ApiInfoBuilder()</span><br><span class="line">                .title(&quot;XXXX&quot;)</span><br><span class="line">                .description(&quot;XXXX&quot;)</span><br><span class="line">                .termsOfServiceUrl(&quot;https://yanxin152133.github.io/&quot;)</span><br><span class="line">                .contact(&quot;yan&quot;)</span><br><span class="line">                .version(&quot;1.0&quot;)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">package com.cleanhome.service.controller;</span><br><span class="line"></span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line">import org.slf4j.LoggerFactory;</span><br><span class="line">import com.cleanhome.service.bean.EjCustomer;</span><br><span class="line">import com.cleanhome.service.service.impl.IEjCustomerServiceImpl;</span><br><span class="line">import com.cleanhome.service.utils.Message;</span><br><span class="line">import com.cleanhome.service.utils.MessageUtil;</span><br><span class="line">import io.swagger.annotations.Api;</span><br><span class="line">import io.swagger.annotations.ApiImplicitParam;</span><br><span class="line">import io.swagger.annotations.ApiImplicitParams;</span><br><span class="line">import io.swagger.annotations.ApiOperation;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.beans.propertyeditors.CustomDateEditor;</span><br><span class="line">import org.springframework.web.bind.WebDataBinder;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line">import org.springframework.web.context.request.WebRequest;</span><br><span class="line"></span><br><span class="line">import java.text.DateFormat;</span><br><span class="line">import java.text.SimpleDateFormat;</span><br><span class="line">import java.util.Date;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author Yan、ysq</span><br><span class="line"> * @date 2019/6/11 8:40</span><br><span class="line"> * 顾客</span><br><span class="line"> * 主要功能：</span><br><span class="line"> * 1.查询顾客的所有信息</span><br><span class="line"> * 2.查询顾客数量</span><br><span class="line"> * 3.添加顾客信息</span><br><span class="line"> * 4.根据编号进行删除顾客信息</span><br><span class="line"> * 5.根据编号进行更新操作</span><br><span class="line"> */</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;/customer&quot;)</span><br><span class="line">@Api(value = &quot;/customer&quot;, description = &quot;顾客信息管理&quot;)</span><br><span class="line">public class EjCustomerController &#123;</span><br><span class="line">    Logger logger = LoggerFactory.getLogger(EjCustomerController.class);</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private IEjCustomerServiceImpl ejCustomerService;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @InitBinder</span><br><span class="line">    public void initBinder(WebDataBinder binder, WebRequest request) &#123;</span><br><span class="line"></span><br><span class="line">        //转换日期</span><br><span class="line">        DateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);</span><br><span class="line">        binder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, true));// CustomDateEditor为自定义日期编辑器</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //查询顾客的所有信息</span><br><span class="line">    @ApiOperation(value = &quot;查询顾客的所有信息&quot;)</span><br><span class="line">    @GetMapping(&quot;findAll&quot;)</span><br><span class="line">    public Message findAll() &#123;</span><br><span class="line">        List&lt;EjCustomer&gt; list = ejCustomerService.findAll();</span><br><span class="line">        logger.info(&quot;查询顾客所有信息成功&quot;);</span><br><span class="line">        return MessageUtil.success(&quot;查询顾客所有信息成功&quot;, list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //查询顾客数量</span><br><span class="line">    @ApiOperation(value = &quot;查询顾客数量&quot;)</span><br><span class="line">    @GetMapping(&quot;findCustomer_Num&quot;)</span><br><span class="line">    public Message findCustomer_Num() &#123;</span><br><span class="line">        int num = ejCustomerService.findCustomer_Num();</span><br><span class="line">        logger.info(&quot;查询顾客数量成功&quot;);</span><br><span class="line">        return MessageUtil.success(&quot;查询顾客数量成功&quot;, num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //查询当天新增顾客量</span><br><span class="line">    @ApiOperation(value = &quot;查询当天新增顾客量&quot;)</span><br><span class="line">    @GetMapping(&quot;TodayCustomerNum&quot;)</span><br><span class="line">    public Message TodayCustomerNum() &#123;</span><br><span class="line">        int num = ejCustomerService.TodayCustomerNum();</span><br><span class="line">        logger.info(&quot;查询当天新增顾客量成功&quot;);</span><br><span class="line">        return MessageUtil.success(&quot;查询当天新增顾客量成功&quot;, num);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //添加顾客信息</span><br><span class="line">    @ApiOperation(value = &quot;添加顾客信息&quot;)</span><br><span class="line">    @PostMapping(&quot;insert&quot;)</span><br><span class="line">    @ApiImplicitParams(&#123;</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;id&quot;, value = &quot;顾客编号&quot;, required = false, dataType = &quot;Integer&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;account&quot;, value = &quot;顾客账号&quot;, required = true, dataType = &quot;Long&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;password&quot;, value = &quot;顾客账号密码&quot;, required = true, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;realname&quot;, value = &quot;顾客真实姓名&quot;, required = true, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;status&quot;, value = &quot;状态&quot;, required = true, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;photo&quot;, value = &quot;顾客头像&quot;, required = true, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;telephone&quot;, value = &quot;顾客联系方式&quot;, required = true, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;register_time&quot;, value = &quot;顾客注册时间&quot;, required = true, dataType = &quot;java.util.Date&quot;)</span><br><span class="line">    &#125;)</span><br><span class="line">    public Message insert(EjCustomer ejCustomer) throws Exception &#123;</span><br><span class="line">        boolean isValid = ejCustomerService.isExits(ejCustomer.getAccount());</span><br><span class="line">        if (isValid) &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                ejCustomerService.insert(ejCustomer);</span><br><span class="line">                logger.info(&quot;添加顾客信息成功&quot;);</span><br><span class="line">                return MessageUtil.success(&quot;添加顾客信息成功&quot;);</span><br><span class="line">            &#125; catch (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                return MessageUtil.error(e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            logger.warn(&quot;添加顾客信息失败&quot;);</span><br><span class="line">            return MessageUtil.error(&quot;error&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //根据顾客id删除用户信息</span><br><span class="line">    @ApiOperation(value = &quot;根据顾客id删除顾客信息&quot;)</span><br><span class="line">    @GetMapping(&quot;deleteById&quot;)</span><br><span class="line">    @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;id&quot;, value = &quot;顾客编号&quot;, required = true, dataType = &quot;Integer&quot;)</span><br><span class="line">    public Message deleteById(Integer id) throws Exception &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            ejCustomerService.deleteById(id);</span><br><span class="line">            logger.info(&quot;顾客编号为&quot; + id + &quot;删除成功&quot;);</span><br><span class="line">            return MessageUtil.success(&quot;删除顾客信息成功&quot;);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            logger.warn(&quot;顾客信息删除失败&quot;);</span><br><span class="line">            return MessageUtil.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //根据顾客id进行更新操作</span><br><span class="line">    @ApiOperation(value = &quot;根据顾客id进行更新&quot;)</span><br><span class="line">    @PostMapping(&quot;updateById&quot;)</span><br><span class="line">    @ApiImplicitParams(&#123;</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;id&quot;, value = &quot;顾客编号&quot;, required = true, dataType = &quot;Integer&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;account&quot;, value = &quot;顾客账号&quot;, required = false, dataType = &quot;Long&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;password&quot;, value = &quot;顾客账号密码&quot;, required = false, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;realname&quot;, value = &quot;顾客真实姓名&quot;, required = false, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;status&quot;, value = &quot;状态&quot;, required = false, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;photo&quot;, value = &quot;顾客头像&quot;, required = false, dataType = &quot;String&quot;),</span><br><span class="line">            @ApiImplicitParam(paramType = &quot;query&quot;, name = &quot;telephone&quot;, value = &quot;顾客联系方式&quot;, required = false, dataType = &quot;String&quot;),</span><br><span class="line">    &#125;)</span><br><span class="line">    public Message updateById(EjCustomer ejCustomer) throws Exception&#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            ejCustomerService.updateById(ejCustomer);</span><br><span class="line">            logger.info(&quot;顾客编号&quot;+ejCustomer.getId()+&quot;更新成功&quot;);</span><br><span class="line">            return MessageUtil.success(&quot;更新顾客信息成功&quot;);</span><br><span class="line">        &#125;catch (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            logger.warn(&quot;顾客信息更新失败&quot;);</span><br><span class="line">            return MessageUtil.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Swagger 是一款RESTFUL接口的文档在线自动生成+功能测试功能软件。本文简单介绍了在项目中集成swagger的方法和一些常见问题。 如果想深入分析项目源码，了解更多内容，见参考资料。Swagger 是一个规范和完整的框架，用于生成、描述、调用和可视化 RESTful 风格的 Web 服务。总体目标是使客户端和文件系统作为服务器以同样的速度来更新。文件的方法，参数和模型紧密集成到服务器端的代码，允许API来始终保持同步。Swagger 让部署管理和使用功能强大的API从未如此简单。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://yoursite.com/categories/Spring-Boot/"/>
    
      <category term="Swagger" scheme="http://yoursite.com/categories/Spring-Boot/Swagger/"/>
    
    
      <category term="Spring Boot" scheme="http://yoursite.com/tags/Spring-Boot/"/>
    
      <category term="Swagger" scheme="http://yoursite.com/tags/Swagger/"/>
    
  </entry>
  
  <entry>
    <title>缺陷跟踪</title>
    <link href="http://yoursite.com/2019/07/10/%E7%BC%BA%E9%99%B7%E8%B7%9F%E8%B8%AA/"/>
    <id>http://yoursite.com/2019/07/10/缺陷跟踪/</id>
    <published>2019-07-10T03:41:31.838Z</published>
    <updated>2019-07-18T14:53:43.348Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><p><strong>开发各阶段缺陷放大图</strong>    </p><p><img src="https://live.staticflickr.com/65535/48230009166_9535028fe4_z.jpg" alt><br><a id="more"></a><br><strong>同行评审</strong>        </p><ul><li>同行评审的种类<ul><li>正式评审</li><li>技术审查</li><li>走查</li></ul></li></ul><p><strong>同行评审方式的选择</strong>        </p><ul><li>工作产品刚勾画，起草时—走查</li><li>完成了某一个单独的章节时—技术审查</li><li>整个产品完成时—正式评审</li></ul><p><strong>软件缺陷发现</strong>         </p><ul><li>同行评审</li><li>软件测试</li><li>管理评审</li><li>PPQA发现</li><li>项目组内部发现</li><li>客户反馈</li></ul><p><strong>软件缺陷生命周期</strong><br>软件缺陷生命周期主要由四个阶段组成：    </p><ul><li>识别</li><li>调查</li><li>改正</li><li>总结</li></ul><p><strong>缺陷度量</strong>     </p><ul><li>缺陷度量：CMMI第四级（量化管理级）的软件组织会根据已收集的缺陷数据，采用统计过程控制（Statistical Process Control,SPC)的方法建立软件过程能力基线（Process Capability Baseline，PCB），定量地刻划出软件或过程的特点，进行量化管理。     </li><li><p>SPC:利用统计方法对过程中的各个阶段进行控制，从而达到改进与保证质量的目的；强调以全过程的预防为主；方法是建立控制图</p></li><li><p>PCB：用基线形式量化地表示过程能力；PCB是个不断随着数据累积校正的过程，本身数据收集必须遵循客观、准确、事实，确保组织基线可以持续为各项目研发作为参考标准；运用PCB有助于对过程的分析和改进；</p></li><li><p>PCB是一组能力指标，是过程实际能力的具体体现。通常包括期望值（Mean）、控制上限（Upper Control Limit，UCL）、控制下限（Low Control Limit，LCL）。以缺陷密度为例， Mean描述了未来项目的缺陷密度的预期值，UCL和LCL描述了未来项目的缺陷密度的合理变化范围。</p></li><li>这样的过程能力基线可用来：<br>(1)帮助未来的项目设立量化的项目质量目标；<br>(2)理解和控制未来项目的实际结果。      </li></ul><p><strong>软件缺陷跟踪管理流程</strong>     </p><ul><li>总体流程    </li></ul><p><img src="https://live.staticflickr.com/65535/48230226367_ea82bd2d77_z.jpg" alt="总体流程"></p><ul><li>提交流程</li></ul><p><img src="https://live.staticflickr.com/65535/48230150476_9c63e6e2f0_z.jpg" alt="提交流程"></p><ul><li>修复流程</li></ul><p><img src="https://live.staticflickr.com/65535/48230149591_5d240288b8_z.jpg" alt="修复流程"></p><ul><li>验证流程</li></ul><p><img src="https://live.staticflickr.com/65535/48230219452_8c70aa0c9a_z.jpg" alt="验证流程"></p><ul><li>拒绝流程</li></ul><p><img src="https://live.staticflickr.com/65535/48230147771_5b10ccc80d_z.jpg" alt="拒绝流程"></p><ul><li>争议处理流程</li></ul><p><img src="https://live.staticflickr.com/65535/48230218987_a525c632fb_z.jpg" alt="争议处理流程"></p><ul><li>缺陷挂起流程</li></ul><p><img src="https://live.staticflickr.com/65535/48230148446_2240e906ec_z.jpg" alt="挂起流程"></p><p><strong>缺陷状态</strong><br><strong>常用软件缺陷状态</strong>     </p><table><thead><tr><th>编号</th><th>缺陷状态</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>提交（Submitted或New）</td><td>已提交的缺陷</td></tr><tr><td>2</td><td>打开（Open或Active）</td><td>经审查后确认的缺陷，等待处理</td></tr><tr><td>3</td><td>拒绝（Rejected、Refuse或Not a bug）</td><td>经审查确认不是缺陷、不需要修复或不需要提交</td></tr><tr><td>4</td><td>修复（Resolved或Fixed）</td><td>或为Fixed。缺陷已被修复</td></tr><tr><td>5</td><td>关闭（Closed或Inactive）</td><td>经审查确认已被修复的缺陷，可将其关闭</td></tr><tr><td>6</td><td>推迟（Later、Pending或Deferred）</td><td>当前无法修复，以后条件具备时再解决，但要确定修复的日期</td></tr><tr><td>7</td><td>重新打开（Reopen)</td><td>经过修复的缺陷未通过验证测试，或已关闭的缺陷重新出现</td></tr></tbody></table><p><strong>软件缺陷报告</strong><br>“5C”原则：     </p><ul><li>内容正确(Correct)：每个组成部分的描述正确，不会引起误解。</li><li>内容清晰(Clear)：每个组成部分的描述清晰，易于理解。</li><li>步骤简洁(Concise)：只包含必不可少的信息，不包括任何多余的内容。</li><li>结构完整(Complete)：包含复现该缺陷的完整步骤和其他本质信息。</li><li>风格一致（Consistent）：按照一致的格式书写全部缺陷报告。</li></ul><p><strong>优秀的缺陷报告</strong>     </p><table><thead><tr><th style="text-align:left">重现步骤</th></tr></thead><tbody><tr><td style="text-align:left">(1) 打开编辑文字的软件     （2）创建一个新文档（这个文档可以录入文字）    （3）在这个文档里随意录入一两行文字（任意）    （4）选中录入的一两行文字，选择Font菜单，然后选择Arial字体格式     （5）一两行文字变成了无意义的乱字符</td></tr><tr><td style="text-align:left"><strong>期望结果</strong></td></tr><tr><td style="text-align:left">当用户选择已录入的文字并改变文字格式时，文本应该正确显示选中的文字格式，不会显示成乱字符</td></tr><tr><td style="text-align:left"><strong>实际结果</strong></td></tr><tr><td style="text-align:left">这是字体格式的问题，如果把文字格式改变成Arial前保存文件，缺陷不会出现。缺陷仅发生在Win98，且改变文字格式成其他字体格式时正常。</td></tr></tbody></table><p><strong>缺陷工具</strong>：</p><ul><li>Bugzilla是一款免费、跨平台的开源缺陷跟踪系统，最初是专门为Unix定制开发的，目前也可在windows、Mac OS平台安装使用，在wins操作系统下的安装和配置略为复杂。bugzilla历史悠久、功能强大、受到很多企业用户的欢迎。</li><li>Mantis是一款开源的基于PHP的轻量级跟踪系统，简洁灵活，安装容易，扩展性强，其实用性足以满足中小型项目的缺陷管理和跟踪需要。</li><li>禅道：集产品管理、项目管理、质量管理、文档管理、组织管理和事务管理于一体，避免了一个团队使用多个工具，较bugfree功能更全面。</li><li>TestCenter是一款集测试需求、测试用例、测试过程、测试结果、以及测试报告管理的测试管理工具。</li><li>BugFree基于浏览器，简单、方便、易用的免费、开源的缺陷管理工具。</li></ul><h1 id="大题"><a href="#大题" class="headerlink" title="大题"></a>大题</h1><p><strong>注入-发现矩阵实例</strong>     </p><table><thead><tr><th>缺陷注入阶段/缺陷发现阶段</th><th>需求阶段</th><th>概要设计阶段</th><th>详细设计阶段</th><th>编码阶段</th><th>单元测试阶段</th><th>集成测试阶段</th><th>系统测试阶段</th><th>现场阶段</th><th>注入合计</th></tr></thead><tbody><tr><td>需求评审</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>概要设计审查</td><td>49</td><td>681</td><td></td><td></td><td></td><td></td><td></td><td></td><td>730</td></tr><tr><td>详细设计审查</td><td>6</td><td>42</td><td>681</td><td></td><td></td><td></td><td></td><td></td><td>729</td></tr><tr><td>代码审查</td><td>12</td><td>28</td><td>114</td><td>941</td><td></td><td></td><td></td><td></td><td>1095</td></tr><tr><td>单元测试</td><td>21</td><td>43</td><td>43</td><td>223</td><td>2</td><td></td><td></td><td></td><td>332</td></tr><tr><td>集成测试</td><td>20</td><td>41</td><td>61</td><td>261</td><td>——</td><td>4</td><td></td><td></td><td>387</td></tr><tr><td>系统测试</td><td>6</td><td>8</td><td>24</td><td>72</td><td>——</td><td>——</td><td>1</td><td></td><td>111</td></tr><tr><td>现场</td><td>8</td><td>16</td><td>16</td><td>40</td><td>——</td><td>——</td><td>——</td><td>1</td><td>81</td></tr><tr><td>发现合计</td><td>122</td><td>859</td><td>939</td><td>1537</td><td>2</td><td>4</td><td>1</td><td>1</td><td>3465</td></tr><tr><td>本阶段缺陷移除率</td><td>——</td><td>74%</td><td>61%</td><td>55%</td><td>36%</td><td>67%</td><td>58%</td><td></td><td></td></tr></tbody></table><p>思路：<br>单元测试：<br>332/（122+859+939+1537+2-730-729-1095）x100%=36%</p><p><strong>故障树</strong><br>参考：<a href="https://wenku.baidu.com/view/abfa08eb19e8b8f67c1cb978.html" target="_blank" rel="noopener">故障树PPT</a></p><p><strong>故障树分析</strong><br><strong>逻辑门</strong><br><img src="https://wiki.mbalib.com/w/images/e/e0/%E6%95%85%E9%9A%9C%E6%A0%91%E5%88%86%E6%9E%902.jpg" alt></p><p>例题<br><img src="https://live.staticflickr.com/65535/48231308961_eeca32738a_z.jpg" alt>    </p><p>使用MOCUS算法确定最小割集。首先画出一个足够大的矩阵表格，然后按下面的步骤填充矩阵：     </p><ol><li>将故障事件门的字符放在左上角（0，0）单元格</li><li>将每个门的字符用其下方较低级别的门或基本事件的字符或数字替换，重复此过程。</li><li>对于或门：将字符写成<strong>一竖排</strong>（<strong>也就是竖着写</strong>）；对于与门：将字符写成<strong>一横排</strong>。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title=&quot;简答题&quot;&gt;&lt;/a&gt;简答题&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;开发各阶段缺陷放大图&lt;/strong&gt;    &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://live.staticflickr.com/65535/48230009166_9535028fe4_z.jpg&quot; alt&gt;&lt;br&gt;
    
    </summary>
    
      <category term="期末复习" scheme="http://yoursite.com/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="缺陷跟踪" scheme="http://yoursite.com/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/%E7%BC%BA%E9%99%B7%E8%B7%9F%E8%B8%AA/"/>
    
    
      <category term="期末复习" scheme="http://yoursite.com/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="缺陷跟踪" scheme="http://yoursite.com/tags/%E7%BC%BA%E9%99%B7%E8%B7%9F%E8%B8%AA/"/>
    
  </entry>
  
  <entry>
    <title>软件测试</title>
    <link href="http://yoursite.com/2019/07/06/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/07/06/软件测试/</id>
    <published>2019-07-06T05:24:49.898Z</published>
    <updated>2019-07-18T14:52:36.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h1><p><strong>1. 你怎样组建一支新的测试团队，包含一些什么岗位，如果要去招聘，开出什么条件？</strong><br><a id="more"></a><br>参考：<br>首先，测试团队包含的成员（即工作岗位）</p><ul><li><p>测试经理<br>测试部门的负责人。<br>主要职责：</p><ul><li>对外：<ol><li>公司内团队之间的沟通</li><li>向上沟通、汇报、日常作业</li><li>人才招募</li><li>外部影响力（公司内外）</li></ol></li><li>对内<ol><li>团队管理与建设</li><li>项目管理</li><li>人才培养</li><li>目标拆解、执行、调整、跟进</li></ol></li></ul></li><li><p>测试架构师<br>测试技术的负责人，主要承担教练职责，是测试部门的技术核心，涵盖产品测试技术、自动化测试技术、专项测试技术、交付测试技术等方向。<br>主要负责：测试技术管理、测试技术调研、测试技术应用、测试人员的技术培养等。</p></li><li><p>核心测试人员<br>测试任务的主要执行者，主要负责核心测试任务的落地执行、重要测试技术的落地实践、测试管理要求的有效实施。<br>中等职级、业务专家或擅长某一方向技术。</p></li><li><p>一般测试人员<br>测试任务的主要辅助执行者，主要负责一般测试任务的落地执行、一般测试技术的落地实践、测试管理要求的有效实施。<br>中低等职级。      </p></li><li><p>测试项目负责人<br>类似于项目经理。工作重点在于沟通和协调。</p></li><li><p>外包测试人员<br>视为人力，作为一些特殊项目的补充。</p></li><li><p>测试实习生<br>除了做一些特殊时期的补充外，是选择和提前培养优秀应届生的途径之一。</p></li></ul><p>其次，招聘条件（<strong>仅供参考</strong>）<br>任职要求：      </p><ol><li>计算机相关专业，本科及以上学历，3年及以上测试经验，有互联网、SaaS平台产品测试经验者优先；</li><li>具备一定的编程能力，熟练掌握Java/C/C++或各类脚本语言中一种，熟悉MySQL等数据库；</li><li>熟悉Linux操作系统，有自动化测试经验，能独立设计用例并编写代码实现自动化测试；</li><li>熟练测试理论与方法，对互联网质量保证领域有强烈的兴趣；</li><li>具有较强的业务分析能力，较好的沟通表达和综合协调能力，对质量保证有深刻理解；</li><li>具备撰写自动化测试工具以及搭建自动化测试平台的实战经验者优先。</li></ol><p><strong>参考链接</strong>：    </p><ul><li><a href="https://blog.csdn.net/kaka1121/article/details/89213243" target="_blank" rel="noopener">如何搭建测试团队（研发同理)</a></li></ul><p><strong>2. 如果你作为测试项目负责人，你为什么要对软件测试过程进行管理？测试过程管理的原则，测试过程管理的目标</strong><br>参考：<br>对软件测试过程进行管理的原因：</p><ul><li>能够使规定时间内完成所需完成的测试任务。</li></ul><p>测试过程管理原则：<br>①有关测试需求；②测试计划先行；③建立任务优先级；④建立客观的评估标准；⑤尽早测试；⑥全面测试；⑦全过程测试；⑧独立的、迭代的测试。</p><p>测试过程管理目标：尽可能早地找出软件缺陷，并保证其得以修复。</p><p><strong>参考链接</strong>：</p><ul><li><a href="http://202.38.64.11/~shizhu/zlbz/10.pdf" target="_blank" rel="noopener">测试过程管理</a></li><li><a href="https://wenku.baidu.com/view/d9971e29b4daa58da0114abf.html" target="_blank" rel="noopener">测试过程管理</a>  </li></ul><p><strong>3. 白盒测试策略</strong><br>定义：<br>白盒测试也称结构测试或逻辑驱动测试，是一种测试用例设计方法，它从程序的控制结构导出测试用例。（测试用例由测试输入数据以及与之对应的输出结果组成。）</p><p>白盒测试使用被测单元内部如何工作的信息，允许测试人员对程序内部逻辑结构及有关信息来设计和选择测试用例，对程序的逻辑路径进行测试。基于一个应用代码的内部逻辑知识，测试是基于覆盖全部代码、分支、路径、条件。</p><p>策略：</p><ul><li>桌前检查</li><li>模块测试</li><li>代码评审</li><li>同行评审</li><li>代码走查</li><li>静态分析    </li></ul><p>其他参考：</p><ul><li><a href="https://www.cnblogs.com/Ming8006/p/5798186.html" target="_blank" rel="noopener">白盒测试：理论基础</a></li></ul><p><strong>4. 掌握功能测试需求分析确定测试优先级</strong><br>参考：</p><ul><li><a href="https://www.cnblogs.com/mrtester/p/10271346.html" target="_blank" rel="noopener">快速划分测试用例优先级</a></li></ul><p><strong>5. 掌握性能测试需求分析会用80-20原理计算负载量</strong><br>书本例题：     </p><ul><li>测试强度估算<br>80-20原理：每个工作日中80%的业务在20%的时间内完成。<br>举例：<br>每年业务量集中在8个月，每个月20个工作日，每个工作日8个小时即每天80%的业务在1.6小时完成<br>去年全年处理业务约100万笔，其中15%的业务处理中每笔业务需对应用服务器提交7次请求；其中70%的业务处理中每笔业务需对应用服务器提交5次请求；其余15%的业务处理中每笔业务需对应用服务器提交3次请求。根据以往统计结果，每年的业务增量为15%，考虑到今后3年业务发展的需要，测试需按现有业务量的两倍进行。      </li></ul><p>每年总的请求数：<br>（100x15%x7+100x70%x5+100x15%x3）x2=1000万次/年</p><p>每天请求数：<br>1000/160=6.25万次/天</p><p>每秒请求数：<br>（62500x80%）/(8x20%x3600)=8.68次/秒<br>即服务器处理请求的能力应达到9次/秒。</p><p><strong>6. 设计功能测试用例</strong><br>测试用例模板（<strong>仅供参考</strong>）</p><table><thead><tr><th>项目/软件</th><th>XXX</th><th>程序版本</th><th>XXX</th></tr></thead><tbody><tr><td>功能模块名</td><td>Login</td><td>编制人</td><td>XXXX</td></tr><tr><td>用例编号</td><td>XXXX</td><td>编制时间</td><td>XXXX</td></tr><tr><td>相关的用例</td><td>无</td><td></td><td></td></tr><tr><td>功能特性</td><td>用户身份验证</td><td></td><td></td></tr><tr><td>测试目的</td><td>验证是否输入合法的信息，允许合法登录，阻止非法登录</td><td></td><td></td></tr><tr><td>预置条件</td><td>无</td><td>特殊规格说明</td><td>如数据库访问权限</td></tr><tr><td>参考信息</td><td>需求说明中关于“登录”的说明</td><td></td><td></td></tr><tr><td>测试数据</td><td>用户名=yiii密码=1</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>操作步骤</th><th>操作描述</th><th>数据</th><th>期望结果</th><th>预期结果</th><th>实际结果</th><th>测试状态</th></tr></thead><tbody><tr><td>1</td><td>输入用户名称按“登录”按钮</td><td>用户名=yiyh密码为空</td><td>显示警告信息，请输入用户名和密码</td><td></td><td></td><td></td></tr><tr><td>2</td><td>输入密码，按“登录”按钮</td><td>用户名为空密码=1</td><td>显示警告信息请输入用户名和密码</td><td></td><td></td><td></td></tr><tr><td>测试人员</td><td></td><td>开发人员</td><td></td><td></td><td>项目负责人</td><td></td></tr></tbody></table><p><strong>操作步骤需要写出所有情况</strong></p><p><strong>7. I/O接口测试，局部数据结构测试</strong><br><strong>检查模块接口是否正确</strong><br>CheckList:     </p><ul><li>输入的实际参数与形式参数是否一致<ul><li>个数、属性、量纲</li></ul></li><li>调用其他模块的实际参数与被调模块的形参是否一致<ul><li>个数、属性、量纲</li></ul></li><li>全程变量的定义在各模块是否一致</li><li>外部输入、输出<ul><li>文件、缓冲区、错误处理</li></ul></li><li>其他</li></ul><p><strong>当一个模块执行外部I/O操作时，必须进行附加的接口测试</strong>    </p><ul><li>文件属性是否正确</li><li>OPEN/CLOSE语句是否正确？</li><li>格式规约是否和I/O语句匹配？</li><li>缓冲区大小是否和记录大小匹配？</li><li>文件是否在打开之前被使用？</li><li>是否处理了文件结束条件？</li><li>是否处理了I/O错误？</li><li>在输出信息里时候有文本错误？</li></ul><p><strong>模块的局部数据结构是经常出现的错误源。应当设计测试用例以发现下列类型的错误</strong>     </p><ul><li>不正确或不一致的类型描述</li><li>错误的初始化或缺省值</li><li>不正确的（拼写错误的或被截断的）变量名字</li><li>不一致的数据类型</li><li>下溢、上溢和地址错误<br>除了局部数据结构，全局数据对模块的影响在单元测试过程中应当进行审查。</li></ul><p><strong>检查局部数据结构完整性</strong><br>Checklist:     </p><ul><li>不适合或不相容的类型说明</li><li>变量无初值</li><li>变量初始化或默认值有错</li><li>不正确的变量名或从来未被使用过</li><li>出现上溢或下溢和地址异常</li><li>其他</li></ul><p><strong>8. 怎样对一段Java代码进行测试，找出代码错误</strong><br>参考：<br>单元测试的步骤：    </p><ul><li>理解需求和设计</li><li>概览源代码</li><li>精读源代码</li><li>设计测试用例</li><li>搭建单元测试环境</li><li>执行测试</li><li>补充和完善测试用例</li><li>分析结果，给出评价</li></ul><p>参考链接：   </p><ul><li><a href="https://wenku.baidu.com/view/6e4cc466bd64783e08122b38.html" target="_blank" rel="noopener">单元测试的步骤</a>     </li></ul><p><strong>9. 进行项目测试计划时间安排的时候，怎样才算是合理的时间安排？</strong><br>参考：<br>测试计划时间安排上遵守：趋势收敛的原则，越到后面，周期越短，问题应该越少。那么测试执行的原则就是：尽可能的把问题都暴露在前面，这样才能保证测试时间上呈收敛趋势。       </p><p>做测试计划时，测试轮次的安排，一般根据不同的项目来定，小项目2+1或者1+1，大项目3+1或者2+1。<br>举例说明：假如现有一项目，测试总时间为10天，需要分3轮进行测试。<br>那么测试时间的安排我们采取4、3、2的原则。<br>第一轮（4天）：全面覆盖所有用例；<br>第二轮（3天）：基本上是基本功能全覆盖（故要刷筛选好一级用例），回归问题单，缺陷比较多的模块功能全覆盖；<br>第三轮（2天）：基本上是回归问题单+基本功能全覆盖（执行一级用例）。<br>还有1天留着备用，若第3轮测试有未关闭的bug，需要再加一轮，用于回归问题。</p><p>以上就是常见测试计划安排模式：3+1模式。</p><p>参考链接：</p><ul><li><a href="https://blog.csdn.net/rachel_luo/article/details/7444480" target="_blank" rel="noopener">如何合理安排测试时间</a></li><li><a href="https://zhidao.baidu.com/question/163643937.html" target="_blank" rel="noopener">软件测试的测试计划是如何计算测试时间</a></li></ul><p><strong>10. 如果时间紧迫了，测试范围怎样裁剪？</strong><br>参考：   </p><ul><li><p>网上资料  </p><ul><li>部分不重要的需求可以裁剪，不进行测试</li><li>对测试范围按照重要性和风险进行优先级评定，优先测试重要的和风险大的</li></ul></li><li><p>课本</p><ul><li>优先级最高的需求功能（优先级如何确定）</li><li>新功能和编码改动较大（提高性能表现）的旧功能</li><li>经常容易出现问题部分的功能</li><li>一些经常被用户使用的功能和配置</li></ul></li></ul><p><strong>11. QTP自动化测试的时候，怎样提高测试脚本执行效率？</strong><br>参考：     </p><ul><li>使用VBS文件来启动QTP</li><li>把变量和函数定义放到外部VBS文件，而不要放在Action中</li><li>通过AOM控制QTP重启来解决QTP内存泄露问题</li><li>尽量不要使用wait，而使用.sync或exist语句</li><li>使用with语句可以让代码更清晰，而且效率更好</li><li>使用OR要比DP快点</li><li>不要保存image和movie到测试结果中</li><li>把运行模式设置为fast</li><li>通过AOM控制QTP</li><li>在调用Action时使用相对路径</li></ul><p><strong>参考链接</strong>：     </p><ul><li><a href="https://zhidao.baidu.com/question/569838608.html" target="_blank" rel="noopener">QTP：如何优化测试脚本 提高测试效率 以及脚本结构化</a></li><li><a href="http://www.voidcn.com/article/p-wopghvwx-hm.html" target="_blank" rel="noopener">如何让你的QTP脚本执行效率更高？</a></li></ul><p><strong>12. 理解性能测试的指标和性能测试给出的结果曲线</strong><br>参考：<br><strong>性能测试的指标</strong>     </p><ul><li>bs结构程序一般会关注的通用指标如下：     <ul><li>Web服务器指标指标：<ul><li>Avg Rps: 平均每秒钟响应次数=总请求时间 / 秒数；</li><li>Avg time to last byte per terstion （mstes）：平均每秒业务脚本的迭代次数，有人会把这两者混淆；</li><li>Successful Rounds：成功的请求；</li><li>Failed Rounds ：失败的请求；</li><li>Successful Hits ：成功的点击次数；</li><li>Failed Hits ：失败的点击次数；</li><li>Hits Per Second ：每秒点击次数；</li><li>Successful Hits Per Second ：每秒成功的点击次数；</li><li>Failed Hits Per Second ：每秒失败的点击次数；</li><li>Attempted Connections ：尝试链接数；   </li></ul></li></ul></li><li>cs结构程序，由于一般软件后台通常为数据库，所以我们更注重数据库的测试指标：      <ul><li>User 0 Connections ：用户连接数，也就是数据库的连接数量；</li><li>Number of deadlocks：数据库死锁；</li><li>Buffer Cache hit ：数据库Cache的命中情况</li></ul></li></ul><p><strong>性能测试给出的结果曲线</strong><br><strong>参考</strong><a href="https://blog.csdn.net/zzh920625/article/details/51000172" target="_blank" rel="noopener">LoadRunner性能测试工具—（三）测试结果样例分析</a></p><p><strong>13. 如果让你负责性能测试，你会按照什么思路开展工作？</strong><br>参考：<br>性能测试的方法是通过模拟生产运行的业务压力量和使用场最组合,测试系统的性能是否满足生产的性能要求。即在特定的运行条件下验证系统的能力状况。主要强调在特定的软硬件环境、特定的测试业务场景下,获得系统的各个性能指标。<br>而身为一个软件测试工程师应根据以下步骤开展工作：     </p><ol><li>制定目标和分析系统</li><li>选择测试度量的方法</li><li>学习的相关技术和工具</li><li>制定评估标准</li><li>设计测试用例</li><li>运行测试用例</li><li>分析测试结果</li></ol><h1 id="课本补充"><a href="#课本补充" class="headerlink" title="课本补充"></a>课本补充</h1><p><strong>有关软件测试的作用</strong>      </p><ul><li>产品质量的保证</li><li>控制成本的关键</li><li>软件可靠性确认</li><li>让企业具备国际竞争的实力</li></ul><p><strong>QA、QC、QM</strong>     </p><ul><li>QA 质量保证</li><li>QC 质量控制</li><li>QM 质量管理</li></ul><p><strong>软件测试人才需求快速增长的体现</strong>     </p><ul><li>中国软件产业正在快速增长，需要大量软件相关人才。</li><li>软件企业的发展要求测试人才达到一个合适的比例</li><li>软件企业开始认识到软件测试对于提高软件质量的重要性，开始重视软件测试。</li></ul><p><strong>软件测试技术的内容</strong><br>软件测试包括：     </p><ul><li>测试计划、测试流程、测试策略、设计测试用例、执行测试、撰写测试报告</li><li>单元测试、集成测试、系统测试、确认测试</li><li>手工测试、自动化测试</li><li>测试工具、缺陷管理和维护工具</li><li>编写操作手册、功能手册、系统管理手册、培训手册</li><li>维护文档、维护测试环境、分析问题、归纳推理能力</li></ul><p><strong>测试用例的组成</strong></p><ul><li><strong>用例标识</strong></li><li><strong>用例名称</strong></li><li><strong>被测功能</strong></li><li><strong>用例目的</strong></li><li><strong>数据准备</strong></li><li><strong>测试步骤</strong></li><li><strong>预期结果</strong></li><li><strong>实际结果</strong></li><li><strong>测试人员</strong></li><li><strong>测试日期</strong></li></ul><p><strong>编写测试用例的注意事项</strong><br>要解决4W问题     </p><ul><li>why</li><li>when</li><li>who</li><li>what</li></ul><p><strong>测试用例说明包含的要素</strong>      </p><ul><li>标识符</li><li>测试项</li><li>输入说明</li><li>输出说明</li><li>环境要求</li><li>特殊要求</li><li>用例依赖性</li></ul><p><strong>测试的三大原则</strong><br><strong>1. 尽早测试</strong><br><strong>2. 连续测试</strong><br><strong>3. 自动化测试</strong></p><p><strong>软件测试职业素质</strong>     </p><ul><li>软件测试员的目标：<br>——发现潜在的软件缺陷</li><li>软件测试员应具备的素质：</li></ul><ol><li>具有探索精神</li><li>具有创造性</li><li>坚持不懈的精神</li><li>故障排除专家</li><li>判断准确</li><li>追求完美</li><li>沟通能力</li></ol><p><strong>软件危机内在的原因</strong>     </p><ul><li>在软件开发过程中，软件缺陷的积累和放大效应是导致软件危机的主要原因</li><li>人员和其他资源的投入导致开发成本急剧增加，带有缺陷的开发成果导致开发质量大幅下降，反复无常的修改导致开发效率严重底下</li><li>因此，迫切地需要规范化地过程来制约软件开发的无序性，便产生了软件工程。</li></ul><p><strong>怎样写测试计划</strong>     </p><ul><li>确定内容<ul><li>总的测试计划</li><li>分阶段的测试计划</li><li>参考测试模板</li></ul></li><li>考虑以下问题<ul><li>测试问题</li><li>测试策略</li><li>测试技术</li><li>测试组织</li><li>测试准备</li></ul></li></ul><p><strong>测试计划的用途</strong></p><ul><li>为测试中的管理工作和技术工作提供指导</li><li>确定达到测试目标和测试目的的必要的测试类型和范围</li><li>概述有效使用资源的时间和活动的时间顺序安排</li><li>通过建立需求跟踪矩阵，为可能的、最高水平的测试覆盖提供保证</li><li>概述测试程序脚本的详细内容，描述如何执行测试程序脚本</li><li>概述测试所需的人员、财力、设备和工具资源</li></ul><p><strong>测试计划的作用</strong>     </p><ul><li>避免测试的“事件驱动”</li><li>使测试工作和整个开发工作融合起来</li><li>资源和变更事先作为一个可控制的风险</li></ul><p><strong>测试需求分析</strong>      </p><ul><li>什么时候进行测试需求分析<br>在开始测试设计之前确定测试需求</li><li>测试需求分析做什么？<br>清晰地定义测试需求并形成文档，使所有工作人员理解测试工作的基础</li><li>测试需求分析的目的是什么？<br>识别验证系统所需的不同类型的测试，在哪个测试阶段完成。</li></ul><p><strong>白盒测试能做什么？</strong></p><ul><li>保证模块内的所有独立路径至少执行一次</li><li>执行所有逻辑判定为真和为假的情况</li><li>在循环可操作范围内，执行所有边界循环</li><li>运用内部数据结构以保证其有效性</li></ul><p><strong>单元测试方法</strong><br>在对每个模块进行单元测试时，需要考虑它和周围模块之间的相互联系。为模拟这一联系，在进行单元测试时，必须设置若干个辅助测试模块，这些辅助模块分为两种：     </p><ul><li><p>驱动模块。相当于被测模块的主程序，用以模拟被测模块的上级模块，用于接收测试数据，并把这些数据传送给被测模块，启动被测模块，最后输出实测结果。</p></li><li><p>桩模块。相当于被测模块调用的子模块，用以模拟被测模块的下级模块。</p></li></ul><p><strong>测试评估</strong>     </p><ul><li>软件测试的主要评测方法包括覆盖评测和质量评测。     <ul><li>覆盖评测是对测试完全程度的评测，它建立在测试覆盖基础上<br>测试覆盖是由<ul><li>测试需求和</li><li>测试用例的覆盖或</li><li>已执行代码的覆盖表示的</li></ul></li></ul></li></ul><ul><li>质量评测是对测试对象（系统或测试的应用程序）的可靠性、稳定性以及性能的评测。质量建立在对测试结果的评估和对测试过程中确定的缺陷及缺陷修复的分析的基础上。    </li></ul><p><strong>功能测试一般什么时候执行</strong>     </p><ul><li>白盒测试可以在编码的早期进行</li><li>功能测试主要在后期执行</li></ul><p><strong>功能测试的两种策略</strong>      </p><ul><li>顺序测试每个程序特性的功能</li><li>一个模块一个模块的测试，即每个功能在其最先调用的地方测试</li></ul><p><strong>功能测试的特点</strong>     </p><ul><li><p>优点</p><ul><li>对于较大的代码单元来说（子系统甚至系统级），黑盒测试效率高</li><li>测试人员不需要了解实现的细节，包括特定的编程语言</li><li>测试人员和编码人员是彼此独立的</li><li>从用户的视角进行测试，很容易被理解和接受</li><li>有助于暴露任何规格不一致或有歧义的问题</li><li>测试用例设计可以在规格完成之后马上进行</li></ul></li><li><p>缺点</p><ul><li>覆盖率较低，大概只能达到总代码量的30%</li><li>自动化测试的复用性较低</li><li>没有清晰的和简明的规格，测试用例是很难设计的</li></ul></li></ul><p><strong>测试需求和用户需求的区别</strong>     </p><ul><li>测试范围变化</li><li>实现方式变化</li><li>用测试策略去过滤用户需求</li></ul><p><strong>标准手工功能测试和实用手工功能测试的比较</strong>      </p><ul><li>标准软件开发生命周期</li><li>实际软件开发生命周期</li><li>标准手工功能测试的过程</li><li>实用手工功能测试的过程</li><li>实用手工功能测试的关注重点</li></ul><p><strong>良好的测试用例的特征</strong>     </p><ul><li>可以最大程度地找出软件隐藏的缺陷</li><li>可以最高效率地找出软件缺陷</li><li>可以最大程度地满足测试覆盖要求</li><li>既不过分复杂，也不能过分简单</li><li>使软件缺陷的表现可以清楚的判定</li><li>不包含重复的测试用例</li><li>测试用例的内容清晰、格式一致、分类组织管理</li></ul><p><strong>为什么设计良好的（最佳）的测试用例</strong>    </p><ul><li>输入量太大</li><li>输出结果太多</li><li>软件实现途径太多</li><li>软件缺陷的标准不同</li><li>完全测试是不可能的</li></ul><p><strong>性能测试的类型</strong>      </p><ul><li>并发（竞争）测试</li><li>负载测试</li><li>压力测试</li><li>大数据量测试</li><li>疲劳测试</li><li>可靠性测试</li><li>基准测试</li><li>配置测试</li></ul><p><strong>性能测试的目标（问题：为了实现目标怎么选择性能测试类型）</strong>    </p><ul><li>评价系统当前性能</li><li>寻找瓶颈，优化性能</li><li>预测系统未来性能，可扩展性</li><li>系统的参数配置</li><li>发现一些软件算法方面的缺陷</li><li>产品评估/选型</li></ul><p><strong>性能测试关注的内容</strong>      </p><ul><li>是否满足需求</li><li>并发用户数/吞吐量</li><li>平均响应时间</li><li>服务器资源占用情况</li><li>故障恢复时间</li></ul><p><strong>负载量分析的步骤</strong>    </p><ul><li>识别性能测试的目标<ul><li>与最终客户一起定义</li><li>文档化以确保一致</li></ul></li><li>定义负载量<ul><li>识别关键业务功能</li><li>定义场景如何被执行</li><li>近似的数据访问模式</li><li>识别用户类型和特性</li></ul></li><li>选择测量点</li><li>编写负载量分析文档<ul><li>用来创建有效的测试场景</li></ul></li><li>与最终客户一起复审（获得负载量模型的认可）</li></ul><p><strong>软件安全性测试的方法</strong>    </p><ul><li>功能测试（专门设计的安全功能）</li><li>漏洞扫描</li><li>模拟攻击实验</li><li>侦听技术</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;思考题&quot;&gt;&lt;a href=&quot;#思考题&quot; class=&quot;headerlink&quot; title=&quot;思考题&quot;&gt;&lt;/a&gt;思考题&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1. 你怎样组建一支新的测试团队，包含一些什么岗位，如果要去招聘，开出什么条件？&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="期末复习" scheme="http://yoursite.com/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="软件测试" scheme="http://yoursite.com/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="软件测试" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="期末复习" scheme="http://yoursite.com/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>软件工程</title>
    <link href="http://yoursite.com/2019/07/04/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/07/04/软件工程/</id>
    <published>2019-07-04T07:09:11.097Z</published>
    <updated>2019-07-18T14:52:20.246Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h1><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><p><strong>1. 社会、健康、安全、法律、文化、环境对软件工程有什么影响？（举例子说明）</strong></p><a id="more"></a><p>答：    </p><ul><li><p><a href="https://baike.baidu.com/item/%E5%8D%93%E8%B6%8A%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%95%99%E8%82%B2%E5%9F%B9%E5%85%BB%E8%AE%A1%E5%88%92/4942299?fr=aladdin" target="_blank" rel="noopener">卓越工程师教育培养计划</a></p></li><li><p>金融危机会导致软件业风险的不确定增加。等等。。。</p></li><li><p><a href="http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&amp;dbname=CMFD0506&amp;filename=2005142505.nh&amp;uid=WEEvREcwSlJHSldRa1FhdXNXaEd2aHVOOXRmSVlYYzhMZUQ4UFpmdzMxdz0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MjYzODBGckNVUkxPZlllUm1GeS9uVTdyUFYxMjdHN0s4SE5UTXFwRWJQSVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTE=" target="_blank" rel="noopener">软件工程监理体系建设及其对软件产业影响研究</a></p></li><li><p>知识产权</p></li><li><p><a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">软件工程环境</a></p></li><li><p>996ICU</p></li><li><p>隐私保护等等。</p></li></ul><p><strong>2. 以下是否是软件需求项？什么类别的需求项？</strong>        </p><ul><li>目标软件必须用Java语言实现。<br><strong>约束性需求</strong></li><li>目标软件必须有一个主控模块和分别移动、照相和岩石采集控制的三个子模块组成。<br><strong>否</strong></li><li>目标软件必须在0.5秒内响应外部事件。<br><strong>非功能需求-性能需求</strong></li><li>当目标软件与用户交互时，必须使用特定的菜单和对话框。<br><strong>否</strong></li></ul><p><strong>3. 比较黑盒测试和白盒测试的优缺点。</strong><br>答：    </p><ul><li>黑盒测试的优点</li></ul><ol><li>比较简单，不需要了解程序内部的代码及实现。</li><li>与软件的内部实现无关。</li><li>从用户角度出发，能很容易的知道用户会用到哪些功能，会遇到哪些问题。</li><li>基于软件开发文档，所以也能知道软件实现了文档中的哪些功能。</li><li>在做软件自动化测试时较为方便。</li></ol><ul><li>黑盒测试的缺点</li></ul><ol><li>不可能覆盖所有的代码，覆盖率较低，大概只能达到总代码量的30%。</li><li>自动化测试的复用性较低。</li></ol><ul><li>白盒测试的优点</li></ul><ol><li>帮助软件测试人员增大代码的覆盖，提高代码的质量，发现代码中隐藏的问题。</li></ol><ul><li>白盒测试的缺点</li></ul><ol><li>程序运行会有很多不同的路径，不可能测试所有的运行路径。</li><li>测试基于代码，只能测试开发人员做的对不对，而不能知道设计的正确与否，可能会漏掉一些功能需求。</li><li>系统庞大时，测试开销会非常大。</li></ol><p><strong>4. 软件生存期模型各个模型的适用范围</strong><br>答：     </p><ul><li><p>瀑布模型<br>适用范围：需求明确，小规模软件开发。</p></li><li><p>快速原型模型<br>适用范围：用户需求不明确，需要通过构建原型来清楚地了解用户的真实需求。</p></li><li><p>增量模型<br>适用范围：软件开发周期较长的软件，有持续的合作。</p></li><li><p>螺旋模型<br>适用范围：内部软件开发的大规模软件项目。</p></li><li><p>喷泉模型<br>适用模型：面向对象的软件开发过程。</p></li></ul><p><strong>5. 为什么要进行软件项目管理</strong><br>参考：<br>任何项目都需要管理，只有认真地管理才能使项目成功地达到预期的目标。<br>预期的目标应该包括以下方面：     </p><ol><li>达到项目预期的软件产品功能和性能要求，使用户认为这样的软件产品正是自己所期待的，也就是说软件产品达到了用户已认可的需求规格说明的要求。</li><li>时限要求。</li><li>项目开销限制在预算之内。</li></ol><p>同时软件项目管理涉及的几个主要方面是人员、产品、过程和项目，即所谓的4P(People、Produce、Process、Project).    </p><ol><li><p>开发人员<br>项目管理是对软件工作的管理，但归根结底是对人员行为的管理，就是对人员的管理。人的因素是软件工程的核心因素，对于这一核心因素的把握决定着项目的成败。<br>在项目的人员管理上需要考虑的几个问题是：<br>1). 利益相关方<br>2). 团队负责人<br>3). 团队集体</p></li><li><p>产品<br>软件工程是软件项目的成果和预期的目标，然而，软件这种无形的产品在开发出来以前，要想准确地描述它的规模、工作量，甚至他的功能和性能是困难的。除此以外，软件需求的稳定性问题更增加了项目工作的难度。    </p></li></ol><ul><li>产品的工作环境</li><li>产品的功能和性能</li><li>产品工作处理的是什么数据，经他处理后得到什么数据。 </li></ul><ol start="3"><li><p>过程<br>过程在软件工程项目中是重要的因素，它决定着项目中开展哪些活动以及对活动的要求和开展活动的顺序。</p></li><li><p>项目<br>项目管理的任务是如何利用已有的资源，组织实施既定的项目，提交给用户适用的产品。在此我们将项目管理要开展的主要工作分为3类：<br>1). 计划与计划管理，其中包括：项目策划及计划制定；项目估算；风险分析及风险管理；进度管理；计划跟踪与监督。<br>2). 资源管理，包括：人员管理；成本管理。<br>3). 成果要求管理，包括：需求管理；配置管理；质量管理。</p></li></ol><p><strong>从开发人员、产品、过程、项目四个方面进行论述</strong> </p><p><strong>6. 为什么软件维护的费用一直那么高</strong><br>参考：<br>软件维护不仅针对程序代码，而且还针对软件定义、开发的各个阶段生成的文档。而软件在设计阶段很难预料到这个软件交给谁，在什么时候进行什么样的维护工作。软件维护的依据只能靠软件文档和有关的设计信息。这样，软件维护人员不得不花费大量的劳动，用于软件系统的再分析和对软件信息的理解。因此软件的维护费用也就一直高居不下。</p><p><strong>7. 软件生命周期，各个过程主要工作</strong><br>答：     </p><ul><li>可行性分析（研究）与计划阶段<br>要确定该软件的开发目标和总的要求，要进行可行性分析、投资收益分析、制定开发计划，并完成可行性分析报告、开发文档等文档（输出）。</li><li>需求分析阶段<br>由系统分析人员对被设计的系统进行系统分析，确定对该软件的各项功能、性能需求和设计约束，确定对文档编制的要求，作为本阶段工作的结果，输出有：软件需求规格说明(也称为：软件需求说明、软件规格说明)、数据要求说明和初步的用户手册应该编写出来。</li><li>设计阶段<br>系统设计人员和程序设计人员应该在反复理解软件需求的基础上，提出多个设计，分析每个设计能履行的功能并进行相互比较，最后确定一个设计，包括该软件的结构、模块(或CSCI)的划分、功能的分配，以及处理流程。<br>系统比较复杂的情况下，设计阶段应分解成概要设计阶段和详细设计阶段两个步骤。在一般情况下，完成的文档包括：结构设计说明、详细设计说明和测试计划初稿。 </li><li>实现阶段<br>要完成源程序的编码、编译(或汇编)和排错调试得到无语法错的程序清单，要开始编写进度日报、周报和月报(是否要有日报或周报，取决于项目的重要性和规模)，并且要完成用户手册、操作手册等面向用户的文档的编写工作，还要完成测试计划的编制。</li><li>测试阶段<br>该程序将被全面地测试，已编制的文档将被检查审阅。一般要完成测试分析报告。作为开发工作的结束，所生产的程序、文档以及开发工作本身将逐项被评价，最后写出项目开发总结报告。</li><li>运行与维护阶段<br>软件将在运行使用中不断地被维护，根据新提出的需求进行必要而且可能的扩充和删改、更新和升级。软件维护分为改正性维护、适应性维护和预防性维护，分别对应于前面的三个问题。<br>改正性维护就是修改原有的缺陷、适应性维护就是使软件适应新的软硬件环境，预防性维护就是把今天的技术用在昨天的软件上，以期软件在明天还能使用。</li></ul><p><strong>8. 为什么程序员在进行单元测试时多以白盒测试为主，而软件测试工程师在进行系统集成测试多以黑盒测试为主？</strong><br>参考：<br>白盒测试方法按照程序内部的结构测试程序，检验程序中的每条通路是否都能按预定要求正确工作，而不顾它的功能。 </p><p>黑盒测试并不涉及程序的内部结构和内容特性，主要根据规格说明，只依靠被测试程序的输入和输出之间关系或程序的功能来设计测试用例。</p><h1 id="论述题"><a href="#论述题" class="headerlink" title="论述题"></a>论述题</h1><p><strong>1.  用户最终要执行的使用的最终产品写出来的代码，只要在开发阶段做的好，产品就是一定成功的？</strong></p><p><strong>2. 软件在交付的时候，如果软件在运行的时候没有问题就是高质量的软件</strong></p><p><strong>3. 从用户得到的原始需求不用分析就可以作为软件设计阶段的依据。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;软件工程&quot;&gt;&lt;a href=&quot;#软件工程&quot; class=&quot;headerlink&quot; title=&quot;软件工程&quot;&gt;&lt;/a&gt;软件工程&lt;/h1&gt;&lt;h1 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title=&quot;简答题&quot;&gt;&lt;/a&gt;简答题&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1. 社会、健康、安全、法律、文化、环境对软件工程有什么影响？（举例子说明）&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="期末复习" scheme="http://yoursite.com/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="软件工程" scheme="http://yoursite.com/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="期末复习" scheme="http://yoursite.com/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="软件工程" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>操作系统</title>
    <link href="http://yoursite.com/2019/07/01/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2019/07/01/操作系统/</id>
    <published>2019-07-01T05:28:14.873Z</published>
    <updated>2019-07-18T14:53:58.674Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h1 id="信号量解决进程同步问题"><a href="#信号量解决进程同步问题" class="headerlink" title="信号量解决进程同步问题"></a>信号量解决进程同步问题</h1><p>例题：<br>桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向盘子中放苹果，妈妈专向盘子中放橘子，两个儿子专等吃盘子中的橘子，两个女儿专等吃盘子中的苹果。请用信号量操作来实现爸爸、妈妈、儿子、女儿之间的同步与互斥关系。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">semaphore s=2,so=0,sa=0;//s表示盘空，so表示橘子，sa表示苹果。</span><br><span class="line">Cobegin</span><br><span class="line">Void father(void)</span><br><span class="line">&#123;</span><br><span class="line">while(1)&#123;</span><br><span class="line">p(s);</span><br><span class="line">put apple();</span><br><span class="line">v(sa);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Void mother(void)</span><br><span class="line">&#123;</span><br><span class="line">while(1)&#123;</span><br><span class="line">p(s);</span><br><span class="line">put orange();</span><br><span class="line">v (so);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Void son(void)</span><br><span class="line">&#123;</span><br><span class="line">while(1)&#123;</span><br><span class="line">p(so);</span><br><span class="line">eat orange();</span><br><span class="line">v(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Void daughter(void)</span><br><span class="line">&#123;</span><br><span class="line">while(1)&#123;</span><br><span class="line">p(sa);</span><br><span class="line">eat apple();</span><br><span class="line">v(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Coend</span><br></pre></td></tr></table></figure></p><p>PV操作参考<a href="https://blog.csdn.net/speedme/article/details/17597373" target="_blank" rel="noopener">进程同步之信号量机制（pv操作）及三个经典同步问题</a></p><h1 id="作业调度算法（先来先服务算法、短作业优先算法），计算周转时间、带权周转时间、平均周转时间、平均带权周转时间"><a href="#作业调度算法（先来先服务算法、短作业优先算法），计算周转时间、带权周转时间、平均周转时间、平均带权周转时间" class="headerlink" title="作业调度算法（先来先服务算法、短作业优先算法），计算周转时间、带权周转时间、平均周转时间、平均带权周转时间"></a>作业调度算法（先来先服务算法、短作业优先算法），计算周转时间、带权周转时间、平均周转时间、平均带权周转时间</h1><blockquote><p><strong>周转时间=完成时间-提交时间</strong><br><strong>带权周转时间=周转时间/执行时间</strong><br><strong>平均周转时间=每个周转时间之和/作业总数</strong><br><strong>平均带权周转时间=每个带权周转时间之和/作业总数</strong></p></blockquote><p>例题：求解下表中4个作业在FCFS（先来先服务算法）和SJF（短作业优先算法）调度算法下的调度次序、周转时间、带权周转时间、平均周转时间、平均带权周转时间。     </p><table><thead><tr><th>作业</th><th>提交时间</th><th>执行时间</th><th>开始时间</th><th>完成时间</th><th>周转时间</th><th>带权周转时间</th></tr></thead><tbody><tr><td>1</td><td>8.00</td><td>2.00</td><td></td><td></td><td></td><td></td></tr><tr><td>2</td><td>8.50</td><td>0.50</td><td></td><td></td><td></td><td></td></tr><tr><td>3</td><td>9.00</td><td>0.10</td><td></td><td></td><td></td><td></td></tr><tr><td>4</td><td>9.50</td><td>0.20</td><td></td><td></td><td></td></tr></tbody></table><p>先来先服务调度算法   </p><table><thead><tr><th>作业</th><th>提交时间</th><th>运行时间</th><th>开始时间</th><th>完成时间</th><th>周转时间</th><th>带权周转时间</th><th>执行顺序</th></tr></thead><tbody><tr><td>1</td><td>8.00</td><td>2.00</td><td>8.00</td><td>10.00</td><td>2.00</td><td>1</td><td>1</td></tr><tr><td>2</td><td>8.50</td><td>0.50</td><td>10.00</td><td>10.50</td><td>2.00</td><td>4</td><td>2</td></tr><tr><td>3</td><td>9.00</td><td>0.10</td><td>10.50</td><td>10.60</td><td>1.60</td><td>16</td><td>3</td></tr><tr><td>4</td><td>9.50</td><td>0.20</td><td>10.60</td><td>10.80</td><td>1.30</td><td>6.5</td><td>4</td></tr></tbody></table><p>平均周转时间=1.725<br>平均带权周转时间=6.875    </p><p>短作业优先调度算法    </p><table><thead><tr><th>作业</th><th>提交时间</th><th>运行时间</th><th>开始时间</th><th>完成时间</th><th>周转时间</th><th>带权周转时间</th><th>执行顺序</th></tr></thead><tbody><tr><td>1</td><td>8.00</td><td>2.00</td><td>8.00</td><td>10.00</td><td>2.00</td><td>1</td><td>1</td></tr><tr><td>2</td><td>8.50</td><td>0.50</td><td>10.30</td><td>10.80</td><td>2.30</td><td>4.6</td><td>4</td></tr><tr><td>3</td><td>9.00</td><td>0.10</td><td>10.00</td><td>10.10</td><td>1.10</td><td>11</td><td>2</td></tr><tr><td>4</td><td>9.50</td><td>0.20</td><td>10.10</td><td>10.30</td><td>0.80</td><td>4</td><td>3</td></tr></tbody></table><p>平均周转时间=1.55<br>平均带权周转时间=5.15  </p><h2 id="先来先服务算法"><a href="#先来先服务算法" class="headerlink" title="先来先服务算法"></a>先来先服务算法</h2><p>先来先服务根据作业的提交时间来执行作业，提交的时间早则首先被执行。  </p><h2 id="短作业优先算法"><a href="#短作业优先算法" class="headerlink" title="短作业优先算法"></a>短作业优先算法</h2><p>根据执行时间来作为执行顺序，同时第一个到达的作业要首先被执行，之后再根据运行时间的长短来执行，短的则优先执行。</p><h1 id="资源分配图的简化"><a href="#资源分配图的简化" class="headerlink" title="资源分配图的简化"></a>资源分配图的简化</h1><h2 id="资源分配图"><a href="#资源分配图" class="headerlink" title="资源分配图"></a>资源分配图</h2><blockquote><p>在资源分配图中，通常使用圆圈来表示每个进程，用方框表示每种资源类型。由于同一资源类型可能有多个实例，所以在矩形中用圆点数表示实例数。</p></blockquote><table><thead><tr><th>实例</th><th>说明</th></tr></thead><tbody><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137904561_1566c16720_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>进程P1申请一个R1类资源</td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137934688_b1c78b1d52_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>系统分配一个R1类资源给进程P1，此时系统还剩下2个R1类资源</td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137934578_5fb04c383b_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>进程P1申请2个R类资源</td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137904261_696b992a7d_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>系统分配2个R1类资源给进程P1，此时系统还剩下1个R1类资源</td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137904261_696b992a7d_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>系统分配一个R1类资源给进程P2，然后分配一个R1类资源给进程P1，最后进程P1收到一个R1类资源又继续申请一个R1类资源，此时系统还剩下一个R1类资源可以分配给进程P1，<strong>但是还没有分配给P1</strong></td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137996962_d2ae9b9b64_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>系统分配一个R1类资源给进程P2，然后又分配一个R1类资源给进程P1，最后进程P1收到一个R1类资源又继续申请一个R1类资源，此时系统已经没有R1类资源可以分配给进程P1，于是<strong>进程P1收到阻塞</strong></td></tr></tbody></table><p>例题：<br><img src="https://live.staticflickr.com/65535/48138130057_feaf5dfa2d_b.jpg" alt></p><ul><li>第一步：先看R1资源，它有三个箭头是向外的，因此它一共给进程分配了3个资源，此时，R1没有空闲的资源剩余。      </li><li>第二步：再看R2资源，它有一个箭头是向外的，因此它一共给进程分配了1个资源，此时，R2还剩余一个空闲的资源没分配。         </li><li>第三步：看完资源，再来看进程，先看进程P2，它只申请一个R1资源，但此时R1资源已经用光了，所以，进程P2进入阻塞状态，因此，进程P2暂时不能化成孤立的点。        </li><li>第四步：再看进程P1，它只申请一个R2资源，此时，系统还剩余一个R2资源没分配，因此，可以满足P1的申请。这样，进程P1便得到了它的全部所需资源，所以它不会进入阻塞状态，可以一直运行，等它运行完后，我们再把它的所有的资源释放。相当于：可以把P1的所有的边去掉，变成一个孤立的点，如下图所示：       </li></ul><p><img src="https://live.staticflickr.com/65535/48138067208_2331e8f977_b.jpg" alt></p><ul><li>第五步：进程P1运行完后，释放其所占有的资源（2个R1资源和1个R2资源），系统回收这些资源后，空闲的资源便变成2个R1资源和1个R2资源，由于进程P2一直在申请一个R1资源，所以此时，系统能满足它的申请。这样，进程P2便得到了它的全部所需资源，所以它不会进入阻塞状态，可以一直运行，等它运行完后，我们再把它的所有的资源释放。相当于：可以把P2的所有的边都去掉，化成一个孤立的点，变成下图：       </li></ul><p><img src="https://live.staticflickr.com/65535/48138036656_e274780171_b.jpg" alt></p><p>由于这个资源分配图可完全简化，因此，不会产生死锁。<br>而如果资源分配图中的点，最终不能够化成孤立的点，则进程资源图不能够完全简化，从而会发生死锁。      </p><h1 id="分页地址变换"><a href="#分页地址变换" class="headerlink" title="分页地址变换"></a>分页地址变换</h1><blockquote><p>地址变换处理</p><ul><li>得到页号：自动将逻辑地址分为页号和页内地址</li><li>用页号查页表，得到块号</li><li>将块号与页内地址拼接，即得物理地址</li></ul></blockquote><h2 id="分页存储逻辑地址转物理地址"><a href="#分页存储逻辑地址转物理地址" class="headerlink" title="分页存储逻辑地址转物理地址"></a>分页存储逻辑地址转物理地址</h2><p>例题：<br>已知某个分页系统，页面大小为1K(即1024字节)，某一个作业有4个页面，分别装入到主存的第3、4、6、8块中，求逻辑地址2100对应的物理地址。  </p><ul><li>第一步：求逻辑地址的页号 = 2100/1024=2 （整除）</li><li>第二步：求页内偏移量 = 2100 % 1024 =52 （取余）</li><li>第三步：产生页表：</li></ul><table><thead><tr><th>页号</th><th>块号</th></tr></thead><tbody><tr><td>0</td><td>3</td></tr><tr><td>1</td><td>4</td></tr><tr><td>2</td><td>6</td></tr><tr><td>3</td><td>8</td></tr></tbody></table><ul><li>第四步：根据逻辑地址的页号查出物理地址的页框号/帧号：<br>如上图，逻辑地址的第2页对应物理地址的第6页。</li><li>第五步：求出物理地址 = 6*1024 + 52 = 6196</li></ul><p>设有8页的逻辑地址空间，每页有1024个字节，它们被映射到32块的物理存储区，那么逻辑地址的有效位是多少，物理地址至少多少位？</p><p>逻辑地址：8x1024=2^3x2^10=2^13<br>物理地址：32x1024=2^5x2^10=2^15<br>逻辑地址的有效位是13，物理地址的有效位是15.      </p><h2 id="十六进制逻辑地址转物理地址"><a href="#十六进制逻辑地址转物理地址" class="headerlink" title="十六进制逻辑地址转物理地址"></a>十六进制逻辑地址转物理地址</h2><p>一分页存储管理系统中逻辑地址长度为16位，页面大小为4KB字节，现有一逻辑地址为2F6AH，且第0、1、2页依次存放在物理块5、10、11中。求逻辑地址2F6AH对应的物理地址      </p><p>解：    </p><ul><li>第一步：将逻辑地址2F6AH转换为二进制为：0010 1111 0110 1010     </li><li>第二步：由于页面大小为4KB字节，（4KB=2的12次方）。所以逻辑地址的后12位为“页内地址”(也叫做页内偏移量)      </li><li>第三步：由于逻辑地址的后12位为页内地址，所以剩下的前4位为页号：即0010为页号      </li><li>第四步：根据页表可知，0010(十进制为2)对于的页框号为11(二进制为1011)<br>所以最终的物理地址为：1011 1111 0110 1010<br>即BF6AH</li></ul><h1 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h1><blockquote><p>定义：选择换出页面的算法<br>评价依据：页面更换频率（缺页率）。 <strong>缺页率=缺页次数/页面总访问次数</strong></p></blockquote><h2 id="最佳置换算法（OPT）"><a href="#最佳置换算法（OPT）" class="headerlink" title="最佳置换算法（OPT）"></a>最佳置换算法（OPT）</h2><p>最佳置换算法所选择淘汰的页面是<strong>最长（未来）时间内不再被访问的页面</strong>。</p><p>例如：<br>系统为某进程分配3个物理块，进程访问页面的顺序是0，7，6，5，7，4，7，3，5，4，7，4，5，6，5，7，6，0，7，6。</p><table><thead><tr><th>访问页面</th><th>0</th><th>7</th><th>6</th></tr></thead><tbody><tr><td>物理块</td><td>0</td><td>0</td><td>0</td></tr><tr><td></td><td></td><td>7</td><td>7</td></tr><tr><td></td><td></td><td></td><td>6</td></tr></tbody></table><p>接下来下一个进入的数字是5，然后需要淘汰最久不被访问的页面。</p><p><strong>首先，需要看0，7，6的哪个是最久不被访问的页面。<br>0在第18次再次访问。<br>7在第5次再次被访问。<br>6在第14次再次被访问。</strong><br>因此需要淘汰<strong>0</strong>。</p><p>按照如上的规律，可以得到以下的结果。     </p><table><thead><tr><th>访问页面</th><th>0</th><th>7</th><th>6</th><th>5</th><th>7</th><th>4</th><th>7</th><th>3</th><th>5</th><th>4</th><th>7</th><th>4</th><th>5</th><th>6</th><th>5</th><th>7</th><th>6</th><th>0</th><th>7</th><th>6</th></tr></thead><tbody><tr><td>物理块</td><td>0</td><td>0</td><td>0</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>0</td><td>0</td><td>0</td></tr><tr><td></td><td></td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>3</td><td>3</td><td>3</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td></tr><tr><td></td><td></td><td></td><td>6</td><td>6</td><td>6</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>6</td><td>6</td><td>6</td><td>6</td><td>6</td><td>6</td><td>6</td></tr><tr><td>缺页中断</td><td>x</td><td>x</td><td>x</td><td>x</td><td></td><td>x</td><td></td><td>x</td><td></td><td></td><td>x</td><td></td><td></td><td>x</td><td></td><td></td><td></td><td>x</td><td></td><td></td></tr></tbody></table><p>缺页率：9/20*100%=36%     </p><p><strong>缺页中断：在请求分页系统中，可以通过查询页表中的状态位来确定所要访问的页面是否存在于内存中。每当所要访问的页面不在内存时，会产生一次缺页中断，此时操作系统会根据页表中的外存地址在外存中找到所缺的一页，将其调入内存。</strong></p><p><strong>通俗的讲也就是每次往物理块中添加数据就会产生一次缺页中断。</strong></p><h2 id="先进先出页面置换算法（FIFO）"><a href="#先进先出页面置换算法（FIFO）" class="headerlink" title="先进先出页面置换算法（FIFO）"></a>先进先出页面置换算法（FIFO）</h2><p>先进先出页面置换算法淘汰的页面是<strong>淘汰最先进入内存的页面</strong>。</p><table><thead><tr><th>访问页面</th><th>6</th><th>0</th><th>1</th><th>2</th><th>0</th><th>3</th><th>0</th><th>4</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>物理块</td><td>6</td><td>6</td><td>6</td><td>2</td><td>2</td><td>2</td><td>2</td><td>4</td><td>4</td><td>4</td></tr><tr><td></td><td></td><td>0</td><td>0</td><td>0</td><td>0</td><td>3</td><td>3</td><td>3</td><td>2</td><td>2</td></tr><tr><td></td><td></td><td></td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>3</td></tr><tr><td>缺页中断</td><td>x</td><td>x</td><td>x</td><td>x</td><td></td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td></tr></tbody></table><p>缺页率：9/10*100%=90%  </p><h2 id="最近最久未使用置换算法（LRU）"><a href="#最近最久未使用置换算法（LRU）" class="headerlink" title="最近最久未使用置换算法（LRU）"></a>最近最久未使用置换算法（LRU）</h2><p>最近最久未使用置换算法淘汰的页面是<strong>淘汰最近最久未使用的页面</strong>。    </p><table><thead><tr><th>访问页面</th><th>2</th><th>3</th><th>2</th><th>1</th><th>5</th><th>2</th><th>4</th><th>5</th><th>3</th><th>2</th><th>5</th><th>2</th></tr></thead><tbody><tr><td>物理块</td><td>2</td><td>3</td><td>2</td><td>1</td><td>5</td><td>2</td><td>4</td><td>5</td><td>3</td><td>2</td><td>5</td><td>2</td></tr><tr><td></td><td></td><td>2</td><td>3</td><td>2</td><td>1</td><td>5</td><td>2</td><td>4</td><td>5</td><td>3</td><td>2</td><td>5</td></tr><tr><td></td><td></td><td></td><td></td><td>3</td><td>2</td><td>1</td><td>5</td><td>2</td><td>4</td><td>5</td><td>3</td><td>3</td></tr><tr><td>缺页中断</td><td>x</td><td>x</td><td></td><td>x</td><td>x</td><td></td><td>x</td><td></td><td>x</td><td>x</td><td></td><td></td></tr></tbody></table><p>缺页率：7/12*100%=58.3%</p><p>堆栈实现LRU：<br><strong>系统使用特殊的堆栈来存放内存中每一个页面的页号。每当访问一页时就调整一次，即把被访问页面的页号从栈中移出再压入栈顶。因此，栈顶始终是最新被访问页面的页号。当发生缺页中断时，总是淘汰栈底页号所对应的页面</strong>。</p><h1 id="磁盘的调度算法"><a href="#磁盘的调度算法" class="headerlink" title="磁盘的调度算法"></a>磁盘的调度算法</h1><h2 id="先来先服务（FCFS）"><a href="#先来先服务（FCFS）" class="headerlink" title="先来先服务（FCFS）"></a>先来先服务（FCFS）</h2><p>先来先服务算法是<strong>根据进程请求访问磁盘的先后顺序进行调度</strong>。<br>例题：<br>某一磁盘请求序列（磁盘号）：98，183，37，122，14，124，65，61.按照先来先服务磁盘调度对磁盘进行请求服务，假设当前磁头在53道上，则磁臂总移动倒数为多少？     </p><table><thead><tr><th>下一个磁道</th><th>移动磁道数</th></tr></thead><tbody><tr><td>98</td><td>45</td></tr><tr><td>183</td><td>85</td></tr><tr><td>37</td><td>146</td></tr><tr><td>122</td><td>85</td></tr><tr><td>14</td><td>108</td></tr><tr><td>124</td><td>110</td></tr><tr><td>65</td><td>59</td></tr><tr><td>61</td><td>4</td></tr></tbody></table><p>总移动磁道数=45+85+146+85+108+110+59+4=642.    </p><h2 id="最短寻道时间优先磁盘调度算法（SSTF）"><a href="#最短寻道时间优先磁盘调度算法（SSTF）" class="headerlink" title="最短寻道时间优先磁盘调度算法（SSTF）"></a>最短寻道时间优先磁盘调度算法（SSTF）</h2><p>最短寻道时间优先磁盘调度算法是<strong>每次都优先满足当前磁头位置最近的磁道访问请求</strong>。</p><p>例题：<br>若干个等待访问磁盘者依次要访问的磁道为19，43，40，4，79，11，76，当前磁头位于42号柱面，若用最短寻道时间优先磁盘调度算法，则访问序列是什么？<br>思路：将要访问的磁道与当前磁头所在柱面相减并取绝对值，绝对值越小的优先访问。     </p><p>访问序列为40，43，19，11，4，76，79.     </p><h2 id="扫描算法（SCAN）"><a href="#扫描算法（SCAN）" class="headerlink" title="扫描算法（SCAN）"></a>扫描算法（SCAN）</h2><ul><li>考虑当前移动方向，一直移动到最外/内层磁道时，折返，进行反方向移动。就好比电梯。</li><li>寻道方向：…，里-&gt;外，外-&gt;里，….;</li></ul><p>若干个等待访问磁盘者依次要访问的磁道为86,147,91,177,94,150,102,175,130，当前磁头位于143号柱面，<strong>刚刚处理完125号柱面</strong>，使用SCAN算法则访问序列是什么？    </p><p>答：     </p><ul><li>当前方向：从143向<strong>磁道号增加的方向</strong></li><li>依次访问：147，150，175，177</li><li>反方向：130，102，94，91，86（<strong>电梯原理</strong>）</li></ul><h2 id="循环扫描（CSCAN）"><a href="#循环扫描（CSCAN）" class="headerlink" title="循环扫描（CSCAN）"></a>循环扫描（CSCAN）</h2><ul><li>循环扫描</li><li>寻道方向：…..,里-&gt;外，里-&gt;外，….。或者相反。</li></ul><p>若干个等待访问磁盘者依次要访问的磁道为86,147,91,177,94,150,102,175,130，当前磁头位于143号柱面，<strong>刚刚处理完125号柱面</strong>，使用CSCAN算法则访问序列是什么？     </p><p>答：     </p><ul><li>当前方向：从143向<strong>磁道号增加的方向</strong></li><li>依次访问：147，150，175，177</li><li>再从0开始增加方向：<strong>86，91，94，102，130</strong></li></ul><h1 id="磁盘空间分配"><a href="#磁盘空间分配" class="headerlink" title="磁盘空间分配"></a>磁盘空间分配</h1><h2 id="多级索引分配"><a href="#多级索引分配" class="headerlink" title="多级索引分配"></a>多级索引分配</h2><p>例题：<br>设一个盘块大小为1k,每个盘块号占4Byte,若系统采用2级索引，求文件的最大长度。</p><p>答:<br>每个索引块最多可存放1k/4=256个盘块号；<br>采用2级索引是，一个文件最多可拥有的数据块数为256x256=2^6x2^10=64k<br>文件的最长长度为64kx1k=64m.</p><h2 id="混合索引分配"><a href="#混合索引分配" class="headerlink" title="混合索引分配"></a>混合索引分配</h2><p>存放在某磁盘上的文件系统采用混合索引分配方式，其中FCB由6个地址项构成，前四个地址项是直接寻址方式，第五个地址项是一次间接寻址方式，第六个地址项是二次间接寻址。若每个盘块的大小为1KB，盘块号用4个字节描述。那么：      </p><p>（1）源文件系统允许文件的最大长度是多少？<br>（2）将文件的字节偏移量800、8193和819300 转换为物理块号和块内偏移。<br>答：<br>（1）每个盘块能存放的盘块号的个数：1024/4=256<br>文件系统允许的文件最大长度：<br>（4+256+256x256）x1K=65796KB</p><p>（2）    </p><ul><li>800/1024商0余800，因为0&lt;4，所以，第一个地址项中存放的块号即为其所在物理块号，块内偏移800。</li><li>8193/1024商8余1，4&lt;=8&lt;4+256，所以一次间接寻址，8-4=4，读第五个地址项中存放的块号物理块的内容，其内容中的第五个块号即为其所在物理块号，块内偏移1。</li><li>819300/1024商800余100，4+256&lt;=800&lt;4+256+256x256，所以二次间接寻址，800-(4+256)=540，540/256商2余28，读第六个地址项中存放的块号的物理块的内容，再读其内容中的第三个块号所在物理块的内容，其内容的第29个块号即为其所在物理块号，块内偏移为100。</li></ul><h1 id="磁盘空间的管理位置分配"><a href="#磁盘空间的管理位置分配" class="headerlink" title="磁盘空间的管理位置分配"></a>磁盘空间的管理位置分配</h1><h2 id="位示图"><a href="#位示图" class="headerlink" title="位示图"></a>位示图</h2><p>位示图：用二进制的一位表示磁盘中一个盘块的使用情况。     </p><ul><li>“0”，对应块是空闲块；</li><li>“1”，对应块已被分配出去。</li></ul><h3 id="盘块分配"><a href="#盘块分配" class="headerlink" title="盘块分配"></a>盘块分配</h3><p>(1) 顺序扫描位示图，从中找出一个或一组其值为“0”的二进制位(“0”表示空闲)。<br>(2) 将所找到的一个或一组二进制位， 转换成与之相应的盘块号。假定找到的其值为“0”的二进制位，位于位示的第i行、第j列，则其相应的盘块号应按下式计算：<br>b=n(i-1)+j<br>式中， n代表每行的位数。<br>(3) 修改位示图， 令map［i,j］=1。       </p><h3 id="盘块的回收"><a href="#盘块的回收" class="headerlink" title="盘块的回收"></a>盘块的回收</h3><p>(1) 将回收盘块的盘块号转换成位示图中的行号和列号。 转换公式为：<br>  i=(b-1)DIV n+1<br>  j=(b-1)MOD n+1<br>(2) 修改位示图。 令map ［i,j］=0。      </p><p>例题：<br>有一计算机系统采用如下图所示的位示图（行号、列号都从0开始编号）来管理空闲盘块。如果盘块从1开始编号，每个盘块的大小为1KB。 （1）现要为文件分配两个盘块，试具体说明分配过程。 （2）若要释放磁盘的第300块，应如何处理？<br><img src="https://live.staticflickr.com/65535/48149676471_a93daca589_b.jpg" alt><br><img src="https://live.staticflickr.com/65535/48149764307_54ccba2583_b.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;操作系统&quot;&gt;&lt;a href=&quot;#操作系统&quot; class=&quot;headerlink&quot; title=&quot;操作系统&quot;&gt;&lt;/a&gt;操作系统&lt;/h1&gt;&lt;h1 id=&quot;信号量解决进程同步问题&quot;&gt;&lt;a href=&quot;#信号量解决进程同步问题&quot; class=&quot;headerlink&quot; title=&quot;信号量解决进程同步问题&quot;&gt;&lt;/a&gt;信号量解决进程同步问题&lt;/h1&gt;&lt;p&gt;例题：&lt;br&gt;桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向盘子中放苹果，妈妈专向盘子中放橘子，两个儿子专等吃盘子中的橘子，两个女儿专等吃盘子中的苹果。请用信号量操作来实现爸爸、妈妈、儿子、女儿之间的同步与互斥关系。&lt;br&gt;
    
    </summary>
    
      <category term="期末复习" scheme="http://yoursite.com/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="期末复习" scheme="http://yoursite.com/tags/%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    
      <category term="操作系统" scheme="http://yoursite.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot整合Druid</title>
    <link href="http://yoursite.com/2019/06/08/Spring%20Boot%20%E6%95%B4%E5%90%88Druid/"/>
    <id>http://yoursite.com/2019/06/08/Spring Boot 整合Druid/</id>
    <published>2019-06-08T06:18:16.866Z</published>
    <updated>2019-06-30T05:43:06.735Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Boot整合Druid"><a href="#Spring-Boot整合Druid" class="headerlink" title="Spring Boot整合Druid"></a>Spring Boot整合Druid</h1><a id="more"></a><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line"> xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">&lt;parent&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.1.5.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">&lt;/parent&gt;</span><br><span class="line">&lt;groupId&gt;com.example&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-06-data-jdbc&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;name&gt;spring-boot-06-data-jdbc&lt;/name&gt;</span><br><span class="line">&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line">&lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--引入druid数据源--&gt;</span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.1.17&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;build&gt;</span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://localhost:3306/jdbc</span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">    type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">    #   数据源其他配置</span><br><span class="line">    initialSize: 5</span><br><span class="line">    minIdle: 5</span><br><span class="line">    maxActive: 20</span><br><span class="line">    maxWait: 60000</span><br><span class="line">    timeBetweenEvictionRunsMillis: 60000</span><br><span class="line">    minEvictableIdleTimeMillis: 300000</span><br><span class="line">    validationQuery: SELECT 1 FROM DUAL</span><br><span class="line">    testWhileIdle: true</span><br><span class="line">    testOnBorrow: false</span><br><span class="line">    testOnReturn: false</span><br><span class="line">    poolPreparedStatements: true</span><br><span class="line">    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，&apos;wall&apos;用于防火墙</span><br><span class="line">    filters: stat,wall</span><br><span class="line">    maxPoolPreparedStatementPerConnectionSize: 20</span><br><span class="line">    useGlobalDataSourceStat: true</span><br><span class="line">    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span><br></pre></td></tr></table></figure><h2 id="DruidConfig-java"><a href="#DruidConfig-java" class="headerlink" title="DruidConfig.java"></a>DruidConfig.java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">package com.example.springboot.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line">import com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line">import com.alibaba.druid.support.http.WebStatFilter;</span><br><span class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">import org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line">import org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">import javax.sql.DataSource;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author Yan</span><br><span class="line"> * @date 2019/6/8 13:46</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class DruidConfig &#123;</span><br><span class="line"></span><br><span class="line">    @ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span><br><span class="line">    @Bean</span><br><span class="line">    public DataSource druid()&#123;</span><br><span class="line">        return  new DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //配置Druid的监控</span><br><span class="line">    //1、配置一个管理后台的Servlet</span><br><span class="line">    @Bean</span><br><span class="line">    public ServletRegistrationBean statViewServlet()&#123;</span><br><span class="line">        ServletRegistrationBean bean = new ServletRegistrationBean(new StatViewServlet(), &quot;/druid/*&quot;);</span><br><span class="line">        Map&lt;String,String&gt; initParams = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        initParams.put(&quot;loginUsername&quot;,&quot;admin&quot;);</span><br><span class="line">        initParams.put(&quot;loginPassword&quot;,&quot;123456&quot;);</span><br><span class="line">        initParams.put(&quot;allow&quot;,&quot;&quot;);//默认就是允许所有访问</span><br><span class="line">        initParams.put(&quot;deny&quot;,&quot;192.168.15.21&quot;);  //拒绝哪些ip访问</span><br><span class="line"></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line">        return bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //2、配置一个web监控的filter</span><br><span class="line">    @Bean</span><br><span class="line">    public FilterRegistrationBean webStatFilter()&#123;</span><br><span class="line">        FilterRegistrationBean bean = new FilterRegistrationBean();</span><br><span class="line">        bean.setFilter(new WebStatFilter());</span><br><span class="line"></span><br><span class="line">        Map&lt;String,String&gt; initParams = new HashMap&lt;&gt;();</span><br><span class="line">        initParams.put(&quot;exclusions&quot;,&quot;*.js,*.css,/druid/*&quot;);</span><br><span class="line"></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line"></span><br><span class="line">        bean.setUrlPatterns(Arrays.asList(&quot;/*&quot;));</span><br><span class="line"></span><br><span class="line">        return  bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring-Boot整合Druid&quot;&gt;&lt;a href=&quot;#Spring-Boot整合Druid&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot整合Druid&quot;&gt;&lt;/a&gt;Spring Boot整合Druid&lt;/h1&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://yoursite.com/categories/Spring-Boot/"/>
    
      <category term="整合Druid" scheme="http://yoursite.com/categories/Spring-Boot/%E6%95%B4%E5%90%88Druid/"/>
    
    
      <category term="Spring Boot" scheme="http://yoursite.com/tags/Spring-Boot/"/>
    
      <category term="整合Druid" scheme="http://yoursite.com/tags/%E6%95%B4%E5%90%88Druid/"/>
    
  </entry>
  
  <entry>
    <title>个人觉得比较好的一些插件</title>
    <link href="http://yoursite.com/2019/05/26/%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/05/26/插件/</id>
    <published>2019-05-26T03:54:10.288Z</published>
    <updated>2019-05-08T13:36:55.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h1><h2 id="Chinese-Simplified-Language-Pack-for-Visual-Studio-Code"><a href="#Chinese-Simplified-Language-Pack-for-Visual-Studio-Code" class="headerlink" title="Chinese (Simplified) Language Pack for Visual Studio Code"></a>Chinese (Simplified) Language Pack for Visual Studio Code</h2><p>适用于 VS Code 的中文（简体）语言包。     </p><p><img src="https://live.staticflickr.com/7810/47599193841_ce5cc251fe.jpg" alt="Chinese (Simplified) Language Pack for Visual Studio Code"></p><a id="more"></a><h2 id="Markdown-Preview-Enhanced"><a href="#Markdown-Preview-Enhanced" class="headerlink" title="Markdown Preview Enhanced"></a>Markdown Preview Enhanced</h2><p>Markdown Preview Enhanced 是一款为 Atom 以及 Visual Studio Code 编辑器编写的超级强大的 Markdown 插件。 这款插件意在让你拥有飘逸的 Markdown 写作体验。    </p><p><img src="https://user-images.githubusercontent.com/1908863/28227953-eb6eefa4-68a1-11e7-8769-96ea83facf3b.png" alt="Markdown Preview Enhanced"></p><h2 id="City-Lights-Icon-package"><a href="#City-Lights-Icon-package" class="headerlink" title="City Lights Icon package"></a>City Lights Icon package</h2><p>一个美化 Visual Studio Code 图标的插件。</p><p><img src="https://raw.githubusercontent.com/yummygum/city-lights-icons-vsc/master/city-lights-icon-preview.gif" alt="City Lights Icon package"></p><h1 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h1><h2 id="广告净化器"><a href="#广告净化器" class="headerlink" title="广告净化器"></a>广告净化器</h2><p>免费高效的广告过滤工具：可以过滤烦人的视频广告、弹窗广告、大横幅广告等网页广告，让你清爽浏览网页。    </p><p>下载地址：<a href="https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E5%87%80%E5%8C%96%E5%99%A8/cbiaicifbmeokbhollcjfeaoakmppfeh?hl=zh-CN" target="_blank" rel="noopener">谷歌浏览器</a>   <a href="https://www.yiclear.com/download/" target="_blank" rel="noopener">火狐浏览器</a></p><h2 id="Convertio"><a href="#Convertio" class="headerlink" title="Convertio"></a>Convertio</h2><p>一个文件转换器。<br>网址：<a href="https://convertio.co/zh/" target="_blank" rel="noopener">https://convertio.co/zh/</a></p><h1 id="适用于Chrome的Web服务器"><a href="#适用于Chrome的Web服务器" class="headerlink" title="适用于Chrome的Web服务器"></a>适用于Chrome的Web服务器</h1><h2 id="Web-Server-for-Chrome"><a href="#Web-Server-for-Chrome" class="headerlink" title="Web Server for Chrome"></a>Web Server for Chrome</h2><p>适用于Chrome的Web服务器使用HTTP通过网络从本地文件夹提供网页。可离线运行。</p><p><img src="https://live.staticflickr.com/65535/33926865808_92c256c9fb_z.jpg" alt="Web Server for Chrome"></p><p><img src="https://live.staticflickr.com/65535/32860400467_9b3c5a39ba_z.jpg" alt="Web Server for Chrome"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Visual-Studio-Code&quot;&gt;&lt;a href=&quot;#Visual-Studio-Code&quot; class=&quot;headerlink&quot; title=&quot;Visual Studio Code&quot;&gt;&lt;/a&gt;Visual Studio Code&lt;/h1&gt;&lt;h2 id=&quot;Chinese-Simplified-Language-Pack-for-Visual-Studio-Code&quot;&gt;&lt;a href=&quot;#Chinese-Simplified-Language-Pack-for-Visual-Studio-Code&quot; class=&quot;headerlink&quot; title=&quot;Chinese (Simplified) Language Pack for Visual Studio Code&quot;&gt;&lt;/a&gt;Chinese (Simplified) Language Pack for Visual Studio Code&lt;/h2&gt;&lt;p&gt;适用于 VS Code 的中文（简体）语言包。     &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://live.staticflickr.com/7810/47599193841_ce5cc251fe.jpg&quot; alt=&quot;Chinese (Simplified) Language Pack for Visual Studio Code&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="插件" scheme="http://yoursite.com/categories/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="插件" scheme="http://yoursite.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu18.04 安装 Docker</title>
    <link href="http://yoursite.com/2019/05/26/Ubuntu18.04%20%E5%AE%89%E8%A3%85%20Docker/"/>
    <id>http://yoursite.com/2019/05/26/Ubuntu18.04 安装 Docker/</id>
    <published>2019-05-26T03:54:10.201Z</published>
    <updated>2018-12-17T14:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h1 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h1><p>Docker CE 支持一下版本的 Ubuntu 操作系统：</p><ul><li>Artful 17.10(Docker CE 17.11 Edge)</li><li>Zesty 17.04</li><li>Xenial 16.04(LTS)</li><li>Trusty 14.04(LTS)</li></ul><p>推荐使用 LTS 版本的，在Ubuntu发行版中，LTS是长期支持版本，会更稳定。<br><a id="more"></a></p><h1 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h1><p>旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker \</span><br><span class="line">               docker-engine \</span><br><span class="line">               docker.io</span><br></pre></td></tr></table></figure><h1 id="安装与验证"><a href="#安装与验证" class="headerlink" title="安装与验证"></a>安装与验证</h1><p>从 Ubuntu 14.04 开始，一部分内核模块移到了可选内核模块包 (linux-image-extra-*) ，以减少内核软件包的体积。正常安装的系统应该会包含可选内核模块包，而一些裁剪后的系统可能会将其精简掉。AUFS 内核驱动属于可选内核模块的一部分，作为推荐的 Docker 存储层驱动，一般建议安装可选内核模块包以使用 AUFS。    </p><p>如果系统没有安装可选内核模块的话，可以执行下面的命令来安装可选内核模块包：(操作均为普通用户下)     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    linux-image-extra-$(uname -r) \</span><br><span class="line">    linux-image-extra-virtual</span><br></pre></td></tr></table></figure><p>Ubuntu 16.04 + 上的 Docker CE 默认使用 overlay2 存储层驱动,无需手动配置。    </p><h2 id="使用APT安装"><a href="#使用APT安装" class="headerlink" title="使用APT安装"></a>使用APT安装</h2><p>由于 apt 源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书。      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure><p>鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。<br>为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(任选其一即可)</span><br><span class="line">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">官方源</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>然后，我们需要向 source.list 中添加 Docker 软件源     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">    &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \</span><br><span class="line">    $(lsb_release -cs) \</span><br><span class="line">    stable&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 官方源</span><br><span class="line"># $ sudo add-apt-repository \</span><br><span class="line">#    &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span><br><span class="line">#    $(lsb_release -cs) \</span><br><span class="line">#    stable&quot;</span><br></pre></td></tr></table></figure><h2 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker-ce</span><br></pre></td></tr></table></figure><h2 id="建立-docker-用户组"><a href="#建立-docker-用户组" class="headerlink" title="建立 docker 用户组"></a>建立 docker 用户组</h2><p>建立docker组:   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure><p>将当前用户加入docker组：    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure><h2 id="更换国内Docker仓库"><a href="#更换国内Docker仓库" class="headerlink" title="更换国内Docker仓库"></a>更换国内Docker仓库</h2><p>创建文件：       </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>加入以下内容：     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启系统。    </p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>输入以下命令：       </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p>若输出以下内容则为成功。          </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Unable to find image &apos;hello-world:latest&apos; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">ca4f61b1923c: Pull complete</span><br><span class="line">Digest: sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://cloud.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/engine/userguide/</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.codingfanlt.xyz/2018/10/17/Ubuntu-%E4%B8%8B%E5%AE%89%E8%A3%85-Docker/#more" target="_blank" rel="noopener">Ubuntu 下安装 Docker</a><br><a href="https://yeasy.gitbooks.io/docker_practice/install/ubuntu.html" target="_blank" rel="noopener">Docker —— 从入门到实践</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;h1 id=&quot;系统要求&quot;&gt;&lt;a href=&quot;#系统要求&quot; class=&quot;headerlink&quot; title=&quot;系统要求&quot;&gt;&lt;/a&gt;系统要求&lt;/h1&gt;&lt;p&gt;Docker CE 支持一下版本的 Ubuntu 操作系统：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Artful 17.10(Docker CE 17.11 Edge)&lt;/li&gt;
&lt;li&gt;Zesty 17.04&lt;/li&gt;
&lt;li&gt;Xenial 16.04(LTS)&lt;/li&gt;
&lt;li&gt;Trusty 14.04(LTS)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐使用 LTS 版本的，在Ubuntu发行版中，LTS是长期支持版本，会更稳定。&lt;br&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
      <category term="安装" scheme="http://yoursite.com/categories/Docker/%E5%AE%89%E8%A3%85/"/>
    
    
      <category term="Docker安装" scheme="http://yoursite.com/tags/Docker%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC和MyBatis开发环境准备</title>
    <link href="http://yoursite.com/2019/05/26/Spring%20MVC%E5%92%8CMyBatis%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>http://yoursite.com/2019/05/26/Spring MVC和MyBatis开发环境准备/</id>
    <published>2019-05-26T03:54:10.189Z</published>
    <updated>2019-05-26T10:51:54.221Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-MVC和MyBatis开发环境准备"><a href="#Spring-MVC和MyBatis开发环境准备" class="headerlink" title="Spring MVC和MyBatis开发环境准备"></a>Spring MVC和MyBatis开发环境准备</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>jdk</li><li>Intellij IDEA</li><li>Tomcat</li><li>Maven</li><li>MySql<a id="more"></a></li></ol><h2 id="JDK-安装"><a href="#JDK-安装" class="headerlink" title="JDK 安装"></a>JDK 安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>JDK建议使用1.8及以上的版本。<br>官方下载路径：<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">jdk下载路地址</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>双击下载软件，一路单击下一步即可。     </p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p><strong>Windows</strong>：右击【我的电脑】→【属性】→【高级系统设置】→【环境变量】→【系统变量】→【新建】，接着如下图所示：<br><img src="https://farm8.staticflickr.com/7873/40480682053_903c92b01b_b.jpg" alt="java_home"></p><p>在【系统变量】的path中添加 <strong>%JAVA_HOME%\bin</strong>。</p><p>验证，如下图所示：<br><img src="https://farm8.staticflickr.com/7860/40480681993_9a639b1dc2_b.jpg" alt="java"></p><h2 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a>Intellij IDEA</h2><p>下载路径：<a href="https://www.jetbrains.com/idea/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">indea U</a></p><h3 id="激活（针对学生的免费使用计划）"><a href="#激活（针对学生的免费使用计划）" class="headerlink" title="激活（针对学生的免费使用计划）"></a>激活（针对学生的免费使用计划）</h3><p>参考：<a href="https://blog.csdn.net/iemdm1110/article/details/53365881" target="_blank" rel="noopener">Intellij IDEA的下载和使用（针对学生的免费使用计划）</a></p><h2 id="Tomcat的安装与配置"><a href="#Tomcat的安装与配置" class="headerlink" title="Tomcat的安装与配置"></a>Tomcat的安装与配置</h2><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><p>下载链接：<a href="https://www-us.apache.org/dist/tomcat/tomcat-8/v8.5.39/bin/apache-tomcat-8.5.39-windows-x64.zip" target="_blank" rel="noopener">Tomcat 8.0</a><br>其他版本可以查看该页面：<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">下载页面</a>     </p><p>下载完成后对文件进行解压，<strong>解压路径自行设置</strong>。</p><h3 id="Intellij-IDEA-配置-Tomcat"><a href="#Intellij-IDEA-配置-Tomcat" class="headerlink" title="Intellij IDEA 配置 Tomcat"></a>Intellij IDEA 配置 Tomcat</h3><p>步骤如下图：      </p><p><img src="https://farm8.staticflickr.com/7860/33570544738_4981576891_b.jpg" alt><br><img src="https://farm8.staticflickr.com/7818/33570544808_63d536cc3e_b.jpg" alt><br><img src="https://farm8.staticflickr.com/7896/40480762723_6bce0e2c84_b.jpg" alt><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://farm8.staticflickr.com/7917/33570544928_cabdb4f7d0_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure>      </p><h2 id="Maven-的安装和配置"><a href="#Maven-的安装和配置" class="headerlink" title="Maven 的安装和配置"></a>Maven 的安装和配置</h2><p>下载地址：<a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">Maven</a>       </p><p><img src="https://farm8.staticflickr.com/7921/46730276854_36b53e43c4_b.jpg" alt="Maven">      </p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li>在Maven的安装目录新建文件夹repository,用来作为本地仓库。</li><li>如下图：<br><img src="https://farm8.staticflickr.com/7899/47400537232_e6978ba63f_b.jpg" alt>       </li></ol><h2 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h2><p>参考：<a href="http://www.runoob.com/mysql/mysql-install.html" target="_blank" rel="noopener">MySQL 安装| 菜鸟教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring-MVC和MyBatis开发环境准备&quot;&gt;&lt;a href=&quot;#Spring-MVC和MyBatis开发环境准备&quot; class=&quot;headerlink&quot; title=&quot;Spring MVC和MyBatis开发环境准备&quot;&gt;&lt;/a&gt;Spring MVC和MyBatis开发环境准备&lt;/h1&gt;&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;jdk&lt;/li&gt;
&lt;li&gt;Intellij IDEA&lt;/li&gt;
&lt;li&gt;Tomcat&lt;/li&gt;
&lt;li&gt;Maven&lt;/li&gt;
&lt;li&gt;MySql
    
    </summary>
    
      <category term="SSM" scheme="http://yoursite.com/categories/SSM/"/>
    
      <category term="开发环境准备" scheme="http://yoursite.com/categories/SSM/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    
    
      <category term="Spring MVC和MyBatis开发环境准备" scheme="http://yoursite.com/tags/Spring-MVC%E5%92%8CMyBatis%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>qtp破解</title>
    <link href="http://yoursite.com/2019/05/26/qtp/"/>
    <id>http://yoursite.com/2019/05/26/qtp/</id>
    <published>2019-05-26T03:54:10.169Z</published>
    <updated>2019-04-20T14:22:35.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="qtp安装与破解"><a href="#qtp安装与破解" class="headerlink" title="qtp安装与破解"></a>qtp安装与破解</h1><p>准备：</p><ul><li>QTP 10.0</li><li>破解文件<a id="more"></a><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2></li></ul><p>链接: <a href="https://pan.baidu.com/s/19TGLWjd_znKFM8RZkj1ITg" target="_blank" rel="noopener">https://pan.baidu.com/s/19TGLWjd_znKFM8RZkj1ITg</a> 提取码: 9wjv</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/46735361215_83283715cc.jpg" alt="qtp" title>                </div>                <div class="image-caption">qtp</div>            </figure><p>选择 <strong>QTP10.iso</strong>,解压后点击文件目录中的 <strong>setup.exe</strong>,双击运行。<br>按照图片顺序进行操作。   </p><p><img src="https://live.staticflickr.com/65535/40684441953_317366f332.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441833_c75926247c.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441463_f2dd1a0d8a.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441383_e54b1aae08.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360805_7d747db5fc.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441273_cd0bda4b8a.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441043_0636ac9c5f.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360575_702bbd5e7d.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684440933_6a15dbbafe.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360435_1b00578c95.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684440783_c657959660.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360325_ca3acbf638.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360275_571ab8de4e.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684440503_e69cee4487.jpg" alt></p><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p>1.在<strong>c:\program files\common files\mercury interactive</strong>目录下新建一个文件夹：<strong>License Manager</strong><br>注：<strong>64位操作系统</strong>在<strong>c:\program files(x86)\common files\mercury interactive</strong>以下步骤以此类推。</p><p>2.将下载的文件中的<strong>qtp破解</strong>解压，将<strong>mgn-mqt8.2.exe</strong>复制到qtp的安装路径的<strong>bin文件夹中</strong>，然后以管理员身份运行。</p><p>3.打开<strong>c:\program files\common files\mercury interactive\License Manager</strong>中的<strong>lservrc</strong>文件。</p><p>4.将<strong>lservrc</strong>文件中的内容（<strong>将”QuickTestPro”之前的所有字符复制进去，不包括”QuickTestPro”字符</strong>）粘贴到如下图中。</p><p><img src="https://live.staticflickr.com/65535/40684440503_e69cee4487.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;qtp安装与破解&quot;&gt;&lt;a href=&quot;#qtp安装与破解&quot; class=&quot;headerlink&quot; title=&quot;qtp安装与破解&quot;&gt;&lt;/a&gt;qtp安装与破解&lt;/h1&gt;&lt;p&gt;准备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QTP 10.0&lt;/li&gt;
&lt;li&gt;破解文件
    
    </summary>
    
      <category term="软件测试" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="qtp" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/qtp/"/>
    
    
      <category term="软件测试" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="qtp" scheme="http://yoursite.com/tags/qtp/"/>
    
  </entry>
  
  <entry>
    <title>LoadRunner</title>
    <link href="http://yoursite.com/2019/05/26/LoadRunner/"/>
    <id>http://yoursite.com/2019/05/26/LoadRunner/</id>
    <published>2019-05-26T03:54:10.137Z</published>
    <updated>2019-05-11T06:14:47.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LoadRunner-11-0"><a href="#LoadRunner-11-0" class="headerlink" title="LoadRunner 11.0"></a>LoadRunner 11.0</h1><h2 id="准备："><a href="#准备：" class="headerlink" title="准备："></a>准备：</h2><ul><li>LoadRunner 11.0 安装包</li><li>LoadRunner 11.0 破解相关文件</li></ul><a id="more"></a><h2 id="下载："><a href="#下载：" class="headerlink" title="下载："></a>下载：</h2><ul><li>LoadRunner 11.0 安装包（迅雷下载）：<a href="http://www.genilogix.com/downloads/loadrunner/loadrunner-11.iso" target="_blank" rel="noopener">http://www.genilogix.com/downloads/loadrunner/loadrunner-11.iso</a></li><li><a href="https://link.jianshu.com/?t=https://pan.baidu.com/s/1nu9r7tf" target="_blank" rel="noopener">LoadRunner 11.0 破解相关文件</a></li></ul><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><ol><li><p>打开<strong>LoadRunner 11.0 安装包</strong>文件夹，点击<strong>setup.exe</strong>。  </p></li><li><p>点击<strong>LoadRunner完整安装程序</strong>，接着按提示进行下去，当它提示缺省文件的时候可以直接打开“附加组件”进入“Monitor Probe for Microsoft COM+ Server Components”这个文件夹，运行“Com_Plus_Probe.exe”文件即可。       </p></li><li><p>安装成功即进入主界面，进入的时候会有一个提示框出现，意思就是你拥有10天的试用权限。     </p></li></ol><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><ol><li><p>打开<strong>LoadRunner 11.0 破解相关文件</strong>，将<strong>mlr5lprg.dll</strong>和<strong>lm70.dll</strong>这两个文件<strong>复制替换</strong>到<strong>LoadRunner安装目录的/bin文件下</strong>。</p></li><li><p>以管理员身份运行<strong>deletelicense.exe</strong></p></li><li><p>管理员身份运行LoadRunner。</p></li><li><p>点击“configuration-&gt;loadRunner License”进入界面，现在你就可以new你自己的license了。下面是不同数量并发的代码：<br>10000个并发：AEABEXFR-YTIEKEKJJMFKEKEKWBRAUNQJU-KBYGB<br>提供一个超级license 最高支持6.5w个并发：AEACFSJI-YJKJKJJKEJIJD-BCLBR。</p></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.51cto.com/kinghinds/908502" target="_blank" rel="noopener">loadRunner 安装及破解</a></p><p><a href="https://www.jianshu.com/p/b3b5f24d7877" target="_blank" rel="noopener">LoadRunner 11.0安装+汉化+破解</a></p><p><a href="https://blog.csdn.net/u010298501/article/details/36199745" target="_blank" rel="noopener">loadRunner破解不成功的几个原因</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;LoadRunner-11-0&quot;&gt;&lt;a href=&quot;#LoadRunner-11-0&quot; class=&quot;headerlink&quot; title=&quot;LoadRunner 11.0&quot;&gt;&lt;/a&gt;LoadRunner 11.0&lt;/h1&gt;&lt;h2 id=&quot;准备：&quot;&gt;&lt;a href=&quot;#准备：&quot; class=&quot;headerlink&quot; title=&quot;准备：&quot;&gt;&lt;/a&gt;准备：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;LoadRunner 11.0 安装包&lt;/li&gt;
&lt;li&gt;LoadRunner 11.0 破解相关文件&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="软件测试" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="LoadRunner" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/LoadRunner/"/>
    
    
      <category term="软件测试" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="LoadRunner" scheme="http://yoursite.com/tags/LoadRunner/"/>
    
  </entry>
  
  <entry>
    <title>Hexo主题casper使用教程</title>
    <link href="http://yoursite.com/2019/05/26/Hexo%E4%B8%BB%E9%A2%98casper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/05/26/Hexo主题casper使用教程/</id>
    <published>2019-05-26T03:54:07.007Z</published>
    <updated>2019-04-17T14:08:16.453Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo主题casper使用教程"><a href="#Hexo主题casper使用教程" class="headerlink" title="Hexo主题casper使用教程"></a>Hexo主题casper使用教程</h1><p>demo     </p><p><img src="https://live.staticflickr.com/65535/46905122234_0ab308a723.jpg" alt="casper"></p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/xzhih/hexo-theme-casper.git themes/hexo-casper</span><br></pre></td></tr></table></figure><h2 id="更改主题为casper"><a href="#更改主题为casper" class="headerlink" title="更改主题为casper"></a>更改主题为casper</h2><p>把<strong>Hexo根目录</strong>的配置文件<strong>_config.yml</strong>中的<strong>theme</strong>改为<strong>hexo-casper</strong>。</p><h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>建议先备份以下再执行下面的操作。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd themes/casper </span><br><span class="line">git pull</span><br></pre></td></tr></table></figure></p><h2 id="添加统一的文章模板参数"><a href="#添加统一的文章模板参数" class="headerlink" title="添加统一的文章模板参数"></a>添加统一的文章模板参数</h2><p>把下面的内容添加到<strong>Hexo根目录</strong>下的<strong>scaffolds/post.md</strong>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cover_img:     # 在文章摘要上显示</span><br><span class="line">feature_img:   # 在文章详细页面上置顶</span><br><span class="line">description:   # 文章描述</span><br><span class="line">keywords:      # 关键字</span><br></pre></td></tr></table></figure><h2 id="自定义配置"><a href="#自定义配置" class="headerlink" title="自定义配置"></a>自定义配置</h2><p>编辑<strong>themes/hexo-casper/_config.yml</strong>进行配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"># Config</span><br><span class="line">rss:            # link</span><br><span class="line">favicon: https://i.loli.net/2017/11/26/5a19c0b50432e.png</span><br><span class="line">blog_logo: </span><br><span class="line">header_image: https://i.loli.net/2017/11/26/5a19c56faa29f.jpg</span><br><span class="line">bio: This is a demo</span><br><span class="line">post_toc: true</span><br><span class="line"></span><br><span class="line"># 菜单</span><br><span class="line">menu:</span><br><span class="line">  About: /about</span><br><span class="line">  Archives: /archives</span><br><span class="line">  # 其他的可以按照上面的模板添加</span><br><span class="line"></span><br><span class="line"># 作者</span><br><span class="line">author_image:   # 链接</span><br><span class="line">author_bio:     # 描述</span><br><span class="line">author_location: # 地址</span><br><span class="line"></span><br><span class="line"># 社交链接</span><br><span class="line">social:</span><br><span class="line">  facebook: https://www.facebook.com</span><br><span class="line">  twitter: https://www.twitter.com</span><br><span class="line">  twitter: https://twitter.com</span><br><span class="line">  facebook: https://facebook</span><br><span class="line">  telegram:</span><br><span class="line">  bilibili:</span><br><span class="line">  youtube:</span><br><span class="line">  </span><br><span class="line"># 插件（显示在网站底部）</span><br><span class="line">widgets:</span><br><span class="line">  recent_posts: true</span><br><span class="line">  category: true</span><br><span class="line">  tagcloud: true</span><br><span class="line">  # 这是个简洁的主题，我认为3个就够了</span><br><span class="line"></span><br><span class="line"># 文章图片相册（点击图片可以放大）</span><br><span class="line"># https://github.com/sachinchoolur/lightgallery.js</span><br><span class="line">lightgallery: true</span><br><span class="line"></span><br><span class="line"># 懒加载</span><br><span class="line"># 首页已经默认开启，其他页面在此开启</span><br><span class="line"># https://github.com/dinbror/blazy</span><br><span class="line">lazyload: true</span><br><span class="line"></span><br><span class="line"># 搜索功能</span><br><span class="line">local_search: true</span><br><span class="line"></span><br><span class="line"># Valine 评论系统</span><br><span class="line"># https://valine.js.org</span><br><span class="line">comment: false</span><br><span class="line">valine:</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki </span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  appId: # your leancloud application appid</span><br><span class="line">  appKey: # your leancloud application appkey</span><br><span class="line">  placeholder: Just go go # comment box placeholder</span><br><span class="line">  avatar: mm # gravatar style</span><br><span class="line">  pageSize: 10 # pagination size</span><br><span class="line"></span><br><span class="line"># PWA </span><br><span class="line"># 你需要在 hexo 目录的 source 文件夹里创建一个 manifest.json 文件</span><br><span class="line">manifest: false</span><br><span class="line">service_workers: false</span><br><span class="line"></span><br><span class="line">navColor: &apos;3c484e&apos;</span><br><span class="line"></span><br><span class="line"># Baidu 链接提交</span><br><span class="line">baidu: false</span><br><span class="line"></span><br><span class="line"># Google Analytics</span><br><span class="line">googleAnalytics: false</span><br><span class="line">GA_TRACKING_ID: UA-XXXXXXXXXX-1</span><br></pre></td></tr></table></figure></p><h2 id="本地搜索功能"><a href="#本地搜索功能" class="headerlink" title="本地搜索功能"></a>本地搜索功能</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在<strong>Hexo根目录</strong>下中的<strong>_config.yml</strong>进行配置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search：</span><br><span class="line">   path：search.xml </span><br><span class="line">   field：post </span><br><span class="line">   content：true</span><br></pre></td></tr></table></figure></p><p>path-文件路径。默认为search.xml。如果文件扩展名为.json，则输出格式为JSON。否则将导出XML格式文件。<br>filed-要搜索的文件范围。   </p><ul><li>post（默认）-所有帖子  </li><li>page -所有页面    </li><li>all -所有帖子和页面    </li></ul><p>content-是否包含每篇文章的全部内容。默认为true。如果false，生成的结果仅覆盖没有主体的标题和其他元信息。</p><h3 id="排除索引"><a href="#排除索引" class="headerlink" title="排除索引"></a>排除索引</h3><p>要将某个帖子或页面排除在索引之外，您只需indexing: false在其前端的顶部插入设置，例如：     </p><pre><code>title: &quot;Code Highlight&quot;date: &quot;2014-03-15 20:17:16&quot;tags: highlightcategories: Demodescription: &quot;A collection of Hello World applications from helloworld.org.&quot;toc: trueindexing: false---</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Hexo主题casper使用教程&quot;&gt;&lt;a href=&quot;#Hexo主题casper使用教程&quot; class=&quot;headerlink&quot; title=&quot;Hexo主题casper使用教程&quot;&gt;&lt;/a&gt;Hexo主题casper使用教程&lt;/h1&gt;&lt;p&gt;demo     &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://live.staticflickr.com/65535/46905122234_0ab308a723.jpg&quot; alt=&quot;casper&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="Hexo主题casper使用教程" scheme="http://yoursite.com/categories/Hexo/Hexo%E4%B8%BB%E9%A2%98casper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Hexo主题casper使用教程" scheme="http://yoursite.com/tags/Hexo%E4%B8%BB%E9%A2%98casper%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>hexo-theme-indigo</title>
    <link href="http://yoursite.com/2019/05/26/hexo-theme-indigo/"/>
    <id>http://yoursite.com/2019/05/26/hexo-theme-indigo/</id>
    <published>2019-05-26T03:54:06.999Z</published>
    <updated>2019-04-16T14:29:05.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-theme-indigo-主题"><a href="#hexo-theme-indigo-主题" class="headerlink" title="hexo-theme-indigo 主题"></a>hexo-theme-indigo 主题</h1><p>demo<br><img src="https://live.staticflickr.com/65535/47569038422_0c51df8041.jpg" alt="hexo-theme-indigo"></p><a id="more"></a><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p>安装需确认Hexo版本在 3.0 以上，以及Node版本在6.x以上，在Hexo根目录，执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo</span><br></pre></td></tr></table></figure></p><h2 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h2><p>在Hexo根目录下的_config.yml文件中修改，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: indigo</span><br></pre></td></tr></table></figure></p><p>注：记得保存。</p><h2 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h2><h3 id="Less"><a href="#Less" class="headerlink" title="Less"></a>Less</h3><p>主题默认使用 less 作为 css 预处理工具。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-less --save</span><br></pre></td></tr></table></figure></p><h3 id="Feed"><a href="#Feed" class="headerlink" title="Feed"></a>Feed</h3><p>用于生成 rss。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure></p><h3 id="Json-content"><a href="#Json-content" class="headerlink" title="Json-content"></a>Json-content</h3><p>用于生成静态站点数据，用作站内搜索的数据源。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure></p><h3 id="QRCode-可选"><a href="#QRCode-可选" class="headerlink" title="QRCode(可选)"></a>QRCode(可选)</h3><p>用于生成微信分享二维码。<br>可选，不安装时会请求 jiathis Api 生成二维码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-helper-qrcode --save</span><br></pre></td></tr></table></figure></p><h2 id="开启分类页"><a href="#开启分类页" class="headerlink" title="开启分类页"></a>开启分类页</h2><p>仅 card theme 支持。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure></p><p>修改 hexo/source/categories/index.md 的元数据<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: categories</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><h2 id="开启标签页"><a href="#开启标签页" class="headerlink" title="开启标签页"></a>开启标签页</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure><p>修改 hexo/source/tags/index.md 的元数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: tags</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="文章截断"><a href="#文章截断" class="headerlink" title="文章截断"></a>文章截断</h3><p>在Markdown中加<!-- more -->      </p><h3 id="添加多个标签"><a href="#添加多个标签" class="headerlink" title="添加多个标签"></a>添加多个标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [a, b, c]</span><br></pre></td></tr></table></figure><p>或     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line">  - a</span><br><span class="line">  - b</span><br><span class="line">  - c</span><br></pre></td></tr></table></figure><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">categories: [a, b, c]</span><br></pre></td></tr></table></figure><h3 id="更改站点配色"><a href="#更改站点配色" class="headerlink" title="更改站点配色"></a>更改站点配色</h3><p>编辑 themes\indigo\source\css_partial\variable.less，更改对应的颜色变量。<br>配色参考：<a href="http://www.materialpalette.com/" target="_blank" rel="noopener">Material Design Color Palette Generator</a><br>注意：使用自定义配色时需把主题配置中的 cdn 关闭，cdn: false。     </p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>参考：<a href="https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98" target="_blank" rel="noopener">https://github.com/yscoder/hexo-theme-indigo/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98</a></p><h2 id="站点配置"><a href="#站点配置" class="headerlink" title="站点配置"></a>站点配置</h2><p>编辑站点配置文件 <strong>\themes\landscape</strong>的<strong>_config.yml</strong>文件。    </p><h3 id="启动主题"><a href="#启动主题" class="headerlink" title="启动主题"></a>启动主题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: indigo</span><br></pre></td></tr></table></figure><h3 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h3><h4 id="左侧菜单"><a href="#左侧菜单" class="headerlink" title="左侧菜单"></a>左侧菜单</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home:</span><br><span class="line">    text: 主页</span><br><span class="line">    url: /</span><br><span class="line">  archives:</span><br><span class="line">    url: /archives</span><br><span class="line">  tags:</span><br><span class="line">    url: /tags</span><br><span class="line">  github:</span><br><span class="line">    url: https://github.com/yscoder</span><br><span class="line">    target: _blank</span><br><span class="line">  weibo:</span><br><span class="line">    url: http://www.weibo.com/ysweb</span><br><span class="line">    target: _blank</span><br><span class="line">  link:</span><br><span class="line">    text: 测试</span><br><span class="line">    url: /</span><br></pre></td></tr></table></figure><p>添加新菜单项时，在 menu 下增加子属性即可。属性说明如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line"> link:               # fontawesome图标，省略前缀，本主题前缀为 icon-，必须</span><br><span class="line">   text: About       # 菜单显示的文字，如果省略即默认与图标一致，首字母会转大写</span><br><span class="line">   url: /about       # 链接，绝对或相对路径，必须</span><br><span class="line">   target: _blank    # 是否跳出，省略则在当前页面打开</span><br></pre></td></tr></table></figure></p><h4 id="favicon"><a href="#favicon" class="headerlink" title="favicon"></a>favicon</h4><p>站点 logo，显示在浏览器当前标签页左上角。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">favicon: /favicon.ico</span><br></pre></td></tr></table></figure></p><h4 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h4><p>位于左侧菜单上方<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avatar: /img/logo.jpg</span><br></pre></td></tr></table></figure></p><h4 id="email"><a href="#email" class="headerlink" title="email"></a>email</h4><p>头像下方<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">email: 634206017@qq.com</span><br></pre></td></tr></table></figure></p><h4 id="color"><a href="#color" class="headerlink" title="color"></a>color</h4><p>设置 Android L Chrome 浏览器状态栏颜色，不需要可去除此项或设为 false。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color: &apos;#3F51B5&apos;</span><br></pre></td></tr></table></figure></p><h4 id="其他-1"><a href="#其他-1" class="headerlink" title="其他"></a>其他</h4><p>参考：<a href="https://github.com/yscoder/hexo-theme-indigo/wiki/%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener">https://github.com/yscoder/hexo-theme-indigo/wiki/%E9%85%8D%E7%BD%AE</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;hexo-theme-indigo-主题&quot;&gt;&lt;a href=&quot;#hexo-theme-indigo-主题&quot; class=&quot;headerlink&quot; title=&quot;hexo-theme-indigo 主题&quot;&gt;&lt;/a&gt;hexo-theme-indigo 主题&lt;/h1&gt;&lt;p&gt;demo&lt;br&gt;&lt;img src=&quot;https://live.staticflickr.com/65535/47569038422_0c51df8041.jpg&quot; alt=&quot;hexo-theme-indigo&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="hexo-theme-indigo" scheme="http://yoursite.com/categories/Hexo/hexo-theme-indigo/"/>
    
    
      <category term="hexo-theme-indigo" scheme="http://yoursite.com/tags/hexo-theme-indigo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo yilia 添加目录页面</title>
    <link href="http://yoursite.com/2019/05/26/Hexo%20yilia%20%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95%E9%A1%B5%E9%9D%A2/"/>
    <id>http://yoursite.com/2019/05/26/Hexo yilia 添加目录页面/</id>
    <published>2019-05-26T03:54:06.987Z</published>
    <updated>2018-12-17T14:02:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p> 1.添加 categories 页面<br> 2.添加 categories 链接<br> 3.修改 yilia 主题<br> 4.多层分类<br> 5.效果<br> 6.参考文档</p><a id="more"></a><h2 id="1-添加-categories-页面"><a href="#1-添加-categories-页面" class="headerlink" title="1 添加 categories 页面"></a>1 添加 categories 页面</h2><h3 id="1-1-新建-categories-页面"><a href="#1-1-新建-categories-页面" class="headerlink" title="1.1 新建 categories 页面"></a>1.1 新建 categories 页面</h3><blockquote><p>输入命令： </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><blockquote><p>该命令在 <strong>source</strong>  目录下生成一个 categories 目录，categories 目录下有一个 index.md 文件。  </p></blockquote><h3 id="1-2-修改-index-md-文件"><a href="#1-2-修改-index-md-文件" class="headerlink" title="1.2 修改 index.md 文件"></a>1.2 修改 index.md 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2018-10-19 11:22:21</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br><span class="line">comments: false #关闭评论</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="2-添加-categories-链接"><a href="#2-添加-categories-链接" class="headerlink" title="2 添加 categories 链接"></a>2 添加 categories 链接</h2><blockquote><p>若主题为 yilia ，则打开 yilia/_config.yml ，修改为：  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  主页: /</span><br><span class="line">  相册: /</span><br><span class="line">  分类: /categories</span><br></pre></td></tr></table></figure><h2 id="3-修改-yilia-主题"><a href="#3-修改-yilia-主题" class="headerlink" title="3 修改 yilia 主题"></a>3 修改 yilia 主题</h2><h3 id="3-1-新建yilia-layout-categories-ejs"><a href="#3-1-新建yilia-layout-categories-ejs" class="headerlink" title="3.1 新建yilia/layout/categories.ejs"></a>3.1 新建yilia/layout/categories.ejs</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;article class=&quot;article article-type-post show&quot;&gt;</span><br><span class="line">  &lt;header class=&quot;article-header&quot;&gt;</span><br><span class="line">  &lt;h1 class=&quot;article-title&quot; itemprop=&quot;name&quot;&gt;</span><br><span class="line">    &lt;%= page.title %&gt;</span><br><span class="line">  &lt;/h1&gt;</span><br><span class="line">  &lt;/header&gt;</span><br><span class="line"></span><br><span class="line">  &lt;% if (site.categories.length)&#123; %&gt;</span><br><span class="line">  &lt;div class=&quot;category-all-page article-type-post show&quot;&gt;</span><br><span class="line">    &lt;h3&gt;共计&amp;nbsp;&lt;%= site.categories.length %&gt;&amp;nbsp;个分类&lt;/h3&gt;</span><br><span class="line">    &lt;ul class=&quot;category-list&quot;&gt;</span><br><span class="line">    &lt;% site.categories.sort(&apos;name&apos;).each(function(item)&#123; %&gt;</span><br><span class="line">      &lt;% if(item.posts.length)&#123; %&gt;</span><br><span class="line">        &lt;li class=&quot;category-list-item&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;&lt;%- config.root %&gt;&lt;%- item.path %&gt;&quot; title=&quot;&lt;%= item.name %&gt;&quot;&gt;&lt;%= item.name %&gt;&lt;sup&gt;[&lt;%= item.posts.length %&gt;]&lt;/sup&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">    &lt;% &#125;); %&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;/article&gt;</span><br></pre></td></tr></table></figure><h3 id="3-2-修改-yilia-source-main-0cf68a-css，将下面的内容添加进去"><a href="#3-2-修改-yilia-source-main-0cf68a-css，将下面的内容添加进去" class="headerlink" title="3.2 修改 yilia\source\main.0cf68a.css，将下面的内容添加进去"></a>3.2 修改 yilia\source\main.0cf68a.css，将下面的内容添加进去</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">category-all-page &#123;</span><br><span class="line">    margin: 30px 40px 30px 40px;</span><br><span class="line">    position: relative;</span><br><span class="line">    min-height: 70vh;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page h2 &#123;</span><br><span class="line">    margin: 20px 0;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-all-title &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-all &#123;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list &#123;</span><br><span class="line">    margin: 0;</span><br><span class="line">    padding: 0;</span><br><span class="line">    list-style: none;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-item-list-item &#123;</span><br><span class="line">    margin: 10px 15px;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-item-list-count &#123;</span><br><span class="line">    color: $grey;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-item-list-count:before &#123;</span><br><span class="line">    display: inline;</span><br><span class="line">    content: &quot; (&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-item-list-count:after &#123;</span><br><span class="line">    display: inline;</span><br><span class="line">    content: &quot;) &quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-item &#123;</span><br><span class="line">    margin: 10px 10px;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-count &#123;</span><br><span class="line">    color: $grey;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-count:before &#123;</span><br><span class="line">    display: inline;</span><br><span class="line">    content: &quot; (&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-count:after &#123;</span><br><span class="line">    display: inline;</span><br><span class="line">    content: &quot;) &quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  .category-all-page .category-list-child &#123;</span><br><span class="line">    padding-left: 10px;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="4-多层分类"><a href="#4-多层分类" class="headerlink" title="4 多层分类"></a>4 多层分类</h2><h3 id="4-1-修改yilia-layout-categories-ejs为："><a href="#4-1-修改yilia-layout-categories-ejs为：" class="headerlink" title="4.1 修改yilia/layout/categories.ejs为："></a>4.1 修改yilia/layout/categories.ejs为：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;article class=&quot;article article-type-post show&quot;&gt;</span><br><span class="line">  &lt;header class=&quot;article-header&quot; style=&quot;border-bottom: 1px solid #ccc&quot;&gt;</span><br><span class="line">  &lt;h1 class=&quot;article-title&quot; itemprop=&quot;name&quot;&gt;</span><br><span class="line">    &lt;%= page.title %&gt;</span><br><span class="line">  &lt;/h1&gt;</span><br><span class="line">  &lt;/header&gt;</span><br><span class="line"></span><br><span class="line">  &lt;% if (site.categories.length)&#123; %&gt;</span><br><span class="line">  &lt;div class=&quot;category-all-page&quot;&gt;</span><br><span class="line">    &lt;h2&gt;共计&amp;nbsp;&lt;%= site.categories.length %&gt;&amp;nbsp;个分类&lt;/h2&gt;</span><br><span class="line">    &lt;%- list_categories(site.categories, &#123;</span><br><span class="line">      show_count: true,</span><br><span class="line">      class: &apos;category-list-item&apos;,</span><br><span class="line">      style: &apos;list&apos;,</span><br><span class="line">      depth: 2,</span><br><span class="line">      separator: &apos;&apos;</span><br><span class="line">    &#125;) %&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;/article&gt;</span><br></pre></td></tr></table></figure><h3 id="4-2-修改自己的文章"><a href="#4-2-修改自己的文章" class="headerlink" title="4.2 修改自己的文章"></a>4.2 修改自己的文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo yilia 添加目录页面</span><br><span class="line">tags: Hexo yilia 添加目录</span><br><span class="line">toc: true</span><br><span class="line">categories: [Hexo,创建目录]</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="5-效果"><a href="#5-效果" class="headerlink" title="5 效果"></a>5 效果</h2><blockquote><p>如下图： </p></blockquote><p><img src="https://farm2.staticflickr.com/1914/30502562127_06a9af4659_b.jpg" alt="效果">  </p><h2 id="6-参考文档"><a href="#6-参考文档" class="headerlink" title="6 参考文档"></a>6 参考文档</h2><blockquote><p><a href="https://www.voidking.com/2018/06/11/deve-hexo-categories/#%E4%B9%A6%E7%AD%BE" target="_blank" rel="noopener">Hexo添加categories页面</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h1&gt;&lt;p&gt; 1.添加 categories 页面&lt;br&gt; 2.添加 categories 链接&lt;br&gt; 3.修改 yilia 主题&lt;br&gt; 4.多层分类&lt;br&gt; 5.效果&lt;br&gt; 6.参考文档&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="创建目录" scheme="http://yoursite.com/categories/Hexo/%E5%88%9B%E5%BB%BA%E7%9B%AE%E5%BD%95/"/>
    
    
      <category term="Hexo yilia 添加目录" scheme="http://yoursite.com/tags/Hexo-yilia-%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo yilia 添加Valine</title>
    <link href="http://yoursite.com/2019/05/26/Hexo%20yilia%20%E6%B7%BB%E5%8A%A0Valine/"/>
    <id>http://yoursite.com/2019/05/26/Hexo yilia 添加Valine/</id>
    <published>2019-05-26T03:54:06.971Z</published>
    <updated>2018-10-21T04:49:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><p> 1.Valine 介绍<br> 2.注册LeanCloud<br> 3.配置<br> 4.参考文档</p><a id="more"></a><h2 id="Valine-介绍"><a href="#Valine-介绍" class="headerlink" title="Valine 介绍"></a>Valine 介绍</h2><blockquote><p>Valine- 一款快速、简洁且高效的无后端评论系统。  </p></blockquote><blockquote><p>Valine 诞生于2017年8月7日，是一款基于Leancloud的快速、简洁且高效的无后端评论系统。理论上支持但不限于静态博客，目前已有Hexo、Jekyll、Typecho、Hugo 等博客程序在使用Valine。  </p></blockquote><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><blockquote><p>快速<br>安全<br>Emoji 😉<br>无后端实现<br>MarkDown 全语法支持<br>轻量易用(~15kb gzipped)<br>文章阅读量统计 v1.2.0+</p></blockquote><h2 id="注册-LeanCloud"><a href="#注册-LeanCloud" class="headerlink" title="注册 LeanCloud"></a>注册 LeanCloud</h2><blockquote><p>注册 <a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="noopener">LeanCloud</a>  </p></blockquote><blockquote><p>注册完成后创建一个应用。然后打开设置-应用Key。如下图：  </p></blockquote><p><img src="https://farm2.staticflickr.com/1909/30501889127_29b161ac31_b.jpg" alt="key">  </p><blockquote><p>复制图中的 <strong>App ID</strong> <strong>App key</strong> <strong>Master Key</strong>  作为备用  </p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><blockquote><p><strong>_config.yml</strong>  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#6、Valine https://valine.js.org</span><br><span class="line">valine: </span><br><span class="line"> appid:  #Leancloud应用的appId</span><br><span class="line"> appkey:  #Leancloud应用的appKey</span><br><span class="line"> verify: false #验证码</span><br><span class="line"> notify: false #评论回复提醒</span><br><span class="line"> avatar: mm #评论列表头像样式：&apos;&apos;/mm/identicon/monsterid/wavatar/retro/hide</span><br><span class="line"> placeholder: Just go go #评论框占位符</span><br></pre></td></tr></table></figure><blockquote><p><strong>layout/_partial/article.ejs</strong>  </p></blockquote> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   &lt;% if (theme.valine &amp;&amp; theme.valine.appid &amp;&amp; theme.valine.appkey)&#123; %&gt;</span><br><span class="line">    &lt;section id=&quot;comments&quot; style=&quot;margin:10px;padding:10px;background:#fff;&quot;&gt;</span><br><span class="line">      &lt;%- partial(&apos;post/valine&apos;, &#123;</span><br><span class="line">        key: post.slug,</span><br><span class="line">        title: post.title,</span><br><span class="line">        url: config.url+url_for(post.path)</span><br><span class="line">        &#125;) %&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><blockquote><p><strong>layout/_partial/post/valine.ejs</strong>  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;vcomment&quot; class=&quot;comment&quot;&gt;&lt;/div&gt; </span><br><span class="line">&lt;script src=&quot;//cdn1.lncld.net/static/js/3.0.4/av-min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;//unpkg.com/valine/dist/Valine.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">   var notify = &apos;&lt;%= theme.valine.notify %&gt;&apos; == true ? true : false;</span><br><span class="line">   var verify = &apos;&lt;%= theme.valine.verify %&gt;&apos; == true ? true : false;</span><br><span class="line">    window.onload = function() &#123;</span><br><span class="line">        new Valine(&#123;</span><br><span class="line">            el: &apos;.comment&apos;,</span><br><span class="line">            notify: notify,</span><br><span class="line">            verify: verify,</span><br><span class="line">            app_id: &quot;&lt;%= theme.valine.appid %&gt;&quot;,</span><br><span class="line">            app_key: &quot;&lt;%= theme.valine.appkey %&gt;&quot;,</span><br><span class="line">            placeholder: &quot;&lt;%= theme.valine.placeholder %&gt;&quot;,</span><br><span class="line">            avatar:&quot;&lt;%= theme.valine.avatar %&gt;&quot;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><blockquote><p>1 <a href="https://www.bluelzy.com/articles/use_valine_for_your_blog.html" target="_blank" rel="noopener">为你的Hexo加上评论系统-Valine</a><br>2 <a href="https://github.com/litten/hexo-theme-yilia/pull/646" target="_blank" rel="noopener">新增对Valine评论系统的支持</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;步骤&quot;&gt;&lt;a href=&quot;#步骤&quot; class=&quot;headerlink&quot; title=&quot;步骤&quot;&gt;&lt;/a&gt;步骤&lt;/h1&gt;&lt;p&gt; 1.Valine 介绍&lt;br&gt; 2.注册LeanCloud&lt;br&gt; 3.配置&lt;br&gt; 4.参考文档&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
      <category term="Valine评论" scheme="http://yoursite.com/categories/Hexo/Valine%E8%AF%84%E8%AE%BA/"/>
    
    
      <category term="Hexo yilia Valine" scheme="http://yoursite.com/tags/Hexo-yilia-Valine/"/>
    
  </entry>
  
  <entry>
    <title>git使用</title>
    <link href="http://yoursite.com/2019/05/26/git%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/05/26/git使用/</id>
    <published>2019-05-26T03:54:06.950Z</published>
    <updated>2019-06-03T05:43:52.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="提交文件到GitHub"><a href="#提交文件到GitHub" class="headerlink" title="提交文件到GitHub"></a>提交文件到GitHub</h1><p>具体步骤如下：    </p><ol><li>登录GitHub，复制git仓库的地址 <strong>[github_repository_url]</strong>。     </li><li>执行 <strong>git clone [github_repository_url]</strong>,将GitHub 的仓库克隆到本地。      </li><li>进入到克隆的仓库目录，若目录是很久之前克隆出来，需要使用 <strong>git pull</strong> 以更新到GitHub中的最新文件。     </li><li>执行 <strong>git add .</strong> 将所有改动添加到本地仓库中。      </li><li>执行 <strong>git commit -m “这次提交的内容的描述，自行填写”</strong> 将改动提交到本地仓库。     </li><li>执行 <strong>git push origin master</strong> 将本地的改动提交到GitHub，<strong>master</strong> 为主分支。</li></ol><h1 id="重写历史"><a href="#重写历史" class="headerlink" title="重写历史"></a>重写历史</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add Title</span><br><span class="line">git commit -m &quot;ceshi&quot;</span><br><span class="line">git commit --amend   ##重写上次提交的信息</span><br></pre></td></tr></table></figure><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><p>首先，先创建<strong>dev</strong>,然后切换到<strong>dev</strong>分支：    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b dev</span><br></pre></td></tr></table></figure><p><strong>git checkout</strong> 命令加上<strong>-b</strong>参数表示创建并切换，相当于一下两条命令：      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git branch dev</span><br><span class="line">git checkout dev</span><br></pre></td></tr></table></figure><p>然后用<strong>git branch</strong>命令查看当前分支：     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br><span class="line">* dev</span><br><span class="line">  master</span><br></pre></td></tr></table></figure><p><strong>git branch</strong>命令会列出所有分支，当前分支前面会标一个*号。</p><p>之后提交同上步。</p><h2 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge dev</span><br></pre></td></tr></table></figure><p><strong>git merge</strong>命令用于合并指定分支到当前分支</p><h2 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d dev</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;提交文件到GitHub&quot;&gt;&lt;a href=&quot;#提交文件到GitHub&quot; class=&quot;headerlink&quot; title=&quot;提交文件到GitHub&quot;&gt;&lt;/a&gt;提交文件到GitHub&lt;/h1&gt;&lt;p&gt;具体步骤如下：    &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登录GitHub，
      
    
    </summary>
    
      <category term="版本控制" scheme="http://yoursite.com/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
      <category term="git" scheme="http://yoursite.com/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/git/"/>
    
    
      <category term="版本控制" scheme="http://yoursite.com/tags/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
</feed>
