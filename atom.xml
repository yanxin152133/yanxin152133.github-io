<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yan&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-07T06:51:11.206Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>缺陷跟踪</title>
    <link href="http://yoursite.com/2019/07/06/%E7%BC%BA%E9%99%B7%E8%B7%9F%E8%B8%AA/"/>
    <id>http://yoursite.com/2019/07/06/缺陷跟踪/</id>
    <published>2019-07-06T05:29:17.225Z</published>
    <updated>2019-07-07T06:51:11.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-软件缺陷概述"><a href="#1-软件缺陷概述" class="headerlink" title="1. 软件缺陷概述"></a>1. 软件缺陷概述</h1><h2 id="1-1-软件质量与软件缺陷"><a href="#1-1-软件质量与软件缺陷" class="headerlink" title="1.1 软件质量与软件缺陷"></a>1.1 软件质量与软件缺陷</h2><a id="more"></a><ul><li>缺陷相对于质量而存在，软件违背了质量、违背了客户意愿、不能满足客户的需求，就会引起缺陷或产生缺陷</li></ul><p><img src="https://live.staticflickr.com/65535/48218182962_e0974f6d6d_z.jpg" alt><br><strong>已放弃</strong></p><h1 id="大题"><a href="#大题" class="headerlink" title="大题"></a>大题</h1><p><strong>注入-发现矩阵实例</strong>     </p><table><thead><tr><th>缺陷注入阶段/缺陷发现阶段</th><th>需求阶段</th><th>概要设计阶段</th><th>详细设计阶段</th><th>编码阶段</th><th>单元测试阶段</th><th>集成测试阶段</th><th>系统测试阶段</th><th>现场阶段</th><th>注入合计</th></tr></thead><tbody><tr><td>需求评审</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>概要设计审查</td><td>49</td><td>681</td><td></td><td></td><td></td><td></td><td></td><td></td><td>730</td></tr><tr><td>详细设计审查</td><td>6</td><td>42</td><td>681</td><td></td><td></td><td></td><td></td><td></td><td>729</td></tr><tr><td>代码审查</td><td>12</td><td>28</td><td>114</td><td>941</td><td></td><td></td><td></td><td></td><td>1095</td></tr><tr><td>单元测试</td><td>21</td><td>43</td><td>43</td><td>223</td><td>2</td><td></td><td></td><td></td><td>332</td></tr><tr><td>集成测试</td><td>20</td><td>41</td><td>61</td><td>261</td><td>——</td><td>4</td><td></td><td></td><td>387</td></tr><tr><td>系统测试</td><td>6</td><td>8</td><td>24</td><td>72</td><td>——</td><td>——</td><td>1</td><td></td><td>111</td></tr><tr><td>现场</td><td>8</td><td>16</td><td>16</td><td>40</td><td>——</td><td>——</td><td>——</td><td>1</td><td>81</td></tr><tr><td>发现合计</td><td>122</td><td>859</td><td>939</td><td>1537</td><td>2</td><td>4</td><td>1</td><td>1</td><td>3465</td></tr><tr><td>本阶段缺陷移除率</td><td>——</td><td>74%</td><td>61%</td><td>55%</td><td>36%</td><td>67%</td><td>58%</td><td></td><td></td></tr></tbody></table><p>思路：<br>单元测试：<br>332/（122+859+939+1537-730-729-1095）x100%=36%</p><p><strong>故障树</strong><br>参考：<a href="https://wenku.baidu.com/view/abfa08eb19e8b8f67c1cb978.html" target="_blank" rel="noopener">故障树PPT</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-软件缺陷概述&quot;&gt;&lt;a href=&quot;#1-软件缺陷概述&quot; class=&quot;headerlink&quot; title=&quot;1. 软件缺陷概述&quot;&gt;&lt;/a&gt;1. 软件缺陷概述&lt;/h1&gt;&lt;h2 id=&quot;1-1-软件质量与软件缺陷&quot;&gt;&lt;a href=&quot;#1-1-软件质量与软件缺陷&quot; class=&quot;headerlink&quot; title=&quot;1.1 软件质量与软件缺陷&quot;&gt;&lt;/a&gt;1.1 软件质量与软件缺陷&lt;/h2&gt;
    
    </summary>
    
      <category term="缺陷跟踪" scheme="http://yoursite.com/categories/%E7%BC%BA%E9%99%B7%E8%B7%9F%E8%B8%AA/"/>
    
    
      <category term="缺陷跟踪" scheme="http://yoursite.com/tags/%E7%BC%BA%E9%99%B7%E8%B7%9F%E8%B8%AA/"/>
    
  </entry>
  
  <entry>
    <title>软件测试</title>
    <link href="http://yoursite.com/2019/07/06/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/07/06/软件测试/</id>
    <published>2019-07-06T05:24:49.898Z</published>
    <updated>2019-07-07T13:51:37.936Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h1><p><strong>1. 你怎样组建一支新的测试团队，包含一些什么岗位，如果要去招聘，开出什么条件？</strong><br><a id="more"></a><br>参考：<br>首先，测试团队包含的成员（即工作岗位）</p><ul><li><p>测试经理<br>测试部门的负责人。<br>主要职责：</p><ul><li>对外：<ol><li>公司内团队之间的沟通</li><li>向上沟通、汇报、日常作业</li><li>人才招募</li><li>外部影响力（公司内外）</li></ol></li><li>对内<ol><li>团队管理与建设</li><li>项目管理</li><li>人才培养</li><li>目标拆解、执行、调整、跟进</li></ol></li></ul></li><li><p>测试架构师<br>测试技术的负责人，主要承担教练职责，是测试部门的技术核心，涵盖产品测试技术、自动化测试技术、专项测试技术、交付测试技术等方向。<br>主要负责：测试技术管理、测试技术调研、测试技术应用、测试人员的技术培养等。</p></li><li><p>核心测试人员<br>测试任务的主要执行者，主要负责核心测试任务的落地执行、重要测试技术的落地实践、测试管理要求的有效实施。<br>中等职级、业务专家或擅长某一方向技术。</p></li><li><p>一般测试人员<br>测试任务的主要辅助执行者，主要负责一般测试任务的落地执行、一般测试技术的落地实践、测试管理要求的有效实施。<br>中低等职级。      </p></li><li><p>测试项目负责人<br>类似于项目经理。工作重点在于沟通和协调。</p></li><li><p>外包测试人员<br>视为人力，作为一些特殊项目的补充。</p></li><li><p>测试实习生<br>除了做一些特殊时期的补充外，是选择和提前培养优秀应届生的途径之一。</p></li></ul><p>其次，招聘条件（<strong>仅供参考</strong>）<br>任职要求：      </p><ol><li>计算机相关专业，本科及以上学历，3年及以上测试经验，有互联网、SaaS平台产品测试经验者优先；</li><li>具备一定的编程能力，熟练掌握Java/C/C++或各类脚本语言中一种，熟悉MySQL等数据库；</li><li>熟悉Linux操作系统，有自动化测试经验，能独立设计用例并编写代码实现自动化测试；</li><li>熟练测试理论与方法，对互联网质量保证领域有强烈的兴趣；</li><li>具有较强的业务分析能力，较好的沟通表达和综合协调能力，对质量保证有深刻理解；</li><li>具备撰写自动化测试工具以及搭建自动化测试平台的实战经验者优先。</li></ol><p><strong>参考链接</strong>：    </p><ul><li><a href="https://blog.csdn.net/kaka1121/article/details/89213243" target="_blank" rel="noopener">如何搭建测试团队（研发同理)</a></li></ul><p><strong>2. 如果你作为测试项目负责人，你为什么要对软件测试过程进行管理？测试过程管理的原则，测试过程管理的目标</strong><br>参考：<br>对软件测试过程进行管理的原因：</p><ul><li>能够使规定时间内完成所需完成的测试任务。</li></ul><p>测试过程管理原则：<br>①有关测试需求；②测试计划先行；③建立任务优先级；④建立客观的评估标准；⑤尽早测试；⑥全面测试；⑦全过程测试；⑧独立的、迭代的测试。</p><p>测试过程管理目标：尽可能早地找出软件缺陷，并保证其得以修复。</p><p><strong>参考链接</strong>：</p><ul><li><a href="http://202.38.64.11/~shizhu/zlbz/10.pdf" target="_blank" rel="noopener">测试过程管理</a></li><li><a href="https://wenku.baidu.com/view/d9971e29b4daa58da0114abf.html" target="_blank" rel="noopener">测试过程管理</a>  </li></ul><p><strong>3. 白盒测试策略</strong><br>定义：<br>白盒测试也称结构测试或逻辑驱动测试，是一种测试用例设计方法，它从程序的控制结构导出测试用例。（测试用例由测试输入数据以及与之对应的输出结果组成。）</p><p>白盒测试使用被测单元内部如何工作的信息，允许测试人员对程序内部逻辑结构及有关信息来设计和选择测试用例，对程序的逻辑路径进行测试。基于一个应用代码的内部逻辑知识，测试是基于覆盖全部代码、分支、路径、条件。</p><p>策略：</p><ul><li>桌前检查</li><li>模块测试</li><li>代码评审</li><li>同行评审</li><li>代码走查</li><li>静态分析    </li></ul><p>其他参考：</p><ul><li><a href="https://www.cnblogs.com/Ming8006/p/5798186.html" target="_blank" rel="noopener">白盒测试：理论基础</a></li></ul><p><strong>4. 掌握功能测试需求分析确定测试优先级</strong><br>参考：</p><ul><li><a href="https://www.cnblogs.com/mrtester/p/10271346.html" target="_blank" rel="noopener">快速划分测试用例优先级</a></li></ul><p><strong>5. 掌握性能测试需求分析会用80-20原理计算负载量</strong><br>书本例题：     </p><ul><li>测试强度估算<br>80-20原理：每个工作日中80%的业务在20%的时间内完成。<br>举例：<br>每年业务量集中在8个月，每个月20个工作日，每个工作日8个小时即每天80%的业务在1.6小时完成<br>去年全年处理业务约100万笔，其中15%的业务处理中每笔业务需对应用服务器提交7次请求；其中70%的业务处理中每笔业务需对应用服务器提交5次请求；其余15%的业务处理中每笔业务需对应用服务器提交3次请求。根据以往统计结果，每年的业务增量为15%，考虑到今后3年业务发展的需要，测试需按现有业务量的两倍进行。      </li></ul><p>每年总的请求数：<br>（100x15%x7+100x70%x5+100x15%x3）x2=1000万次/年</p><p>每天请求数：<br>1000/160=6.25万次/天</p><p>每秒请求数：<br>（62500x80%）/(8x20%x3600)=8.68次/秒<br>即服务器处理请求的能力应达到9次/秒。</p><p><strong>6. 设计功能测试用例</strong><br>测试用例模板（<strong>仅供参考</strong>）</p><table><thead><tr><th>项目/软件</th><th>XXX</th><th>程序版本</th><th>XXX</th></tr></thead><tbody><tr><td>功能模块名</td><td>Login</td><td>编制人</td><td>XXXX</td></tr><tr><td>用例编号</td><td>XXXX</td><td>编制时间</td><td>XXXX</td></tr><tr><td>相关的用例</td><td>无</td><td></td><td></td></tr><tr><td>功能特性</td><td>用户身份验证</td><td></td><td></td></tr><tr><td>测试目的</td><td>验证是否输入合法的信息，允许合法登录，阻止非法登录</td><td></td><td></td></tr><tr><td>预置条件</td><td>无</td><td>特殊规格说明</td><td>如数据库访问权限</td></tr><tr><td>参考信息</td><td>需求说明中关于“登录”的说明</td><td></td><td></td></tr><tr><td>测试数据</td><td>用户名=yiii密码=1</td><td></td><td></td></tr></tbody></table><table><thead><tr><th>操作步骤</th><th>操作描述</th><th>数据</th><th>期望结果</th><th>预期结果</th><th>实际结果</th><th>测试状态</th></tr></thead><tbody><tr><td>1</td><td>输入用户名称按“登录”按钮</td><td>用户名=yiyh密码为空</td><td>显示警告信息，请输入用户名和密码</td><td></td><td></td><td></td></tr><tr><td>2</td><td>输入密码，按“登录”按钮</td><td>用户名为空密码=1</td><td>显示警告信息请输入用户名和密码</td><td></td><td></td><td></td></tr><tr><td>测试人员</td><td></td><td>开发人员</td><td></td><td></td><td>项目负责人</td><td></td></tr></tbody></table><p><strong>操作步骤需要写出所有情况</strong></p><p><strong>7. I/O接口测试，局部数据结构测试</strong><br><strong>检查模块接口是否正确</strong><br>CheckList:     </p><ul><li>输入的实际参数与形式参数是否一致<ul><li>个数、属性、量纲</li></ul></li><li>调用其他模块的实际参数与被调模块的形参是否一致<ul><li>个数、属性、量纲</li></ul></li><li>全程变量的定义在各模块是否一致</li><li>外部输入、输出<ul><li>文件、缓冲区、错误处理</li></ul></li><li>其他</li></ul><p><strong>当一个模块执行外部I/O操作时，必须进行附加的接口测试</strong>    </p><ul><li>文件属性是否正确</li><li>OPEN/CLOSE语句是否正确？</li><li>格式规约是否和I/O语句匹配？</li><li>缓冲区大小是否和记录大小匹配？</li><li>文件是否在打开之前被使用？</li><li>是否处理了文件结束条件？</li><li>是否处理了I/O错误？</li><li>在输出信息里时候有文本错误？</li></ul><p><strong>模块的局部数据结构是经常出现的错误源。应当设计测试用例以发现下列类型的错误</strong>     </p><ul><li>不正确或不一致的类型描述</li><li>错误的初始化或缺省值</li><li>不正确的（拼写错误的或被截断的）变量名字</li><li>不一致的数据类型</li><li>下溢、上溢和地址错误<br>除了局部数据结构，全局数据对模块的影响在单元测试过程中应当进行审查。</li></ul><p><strong>检查局部数据结构完整性</strong><br>Checklist:     </p><ul><li>不适合或不相容的类型说明</li><li>变量无初值</li><li>变量初始化或默认值有错</li><li>不正确的变量名或从来未被使用过</li><li>出现上溢或下溢和地址异常</li><li>其他</li></ul><p><strong>8. 怎样对一段Java代码进行测试，找出代码错误</strong><br>参考：<br>单元测试的步骤：    </p><ul><li>理解需求和设计</li><li>概览源代码</li><li>精读源代码</li><li>设计测试用例</li><li>搭建单元测试环境</li><li>执行测试</li><li>补充和完善测试用例</li><li>分析结果，给出评价</li></ul><p>参考链接：   </p><ul><li><a href="https://wenku.baidu.com/view/6e4cc466bd64783e08122b38.html" target="_blank" rel="noopener">单元测试的步骤</a>     </li></ul><p><strong>9. 进行项目测试计划时间安排的时候，怎样才算是合理的时间安排？</strong><br>参考：<br>测试计划时间安排上遵守：趋势收敛的原则，越到后面，周期越短，问题应该越少。那么测试执行的原则就是：尽可能的把问题都暴露在前面，这样才能保证测试时间上呈收敛趋势。       </p><p>做测试计划时，测试轮次的安排，一般根据不同的项目来定，小项目2+1或者1+1，大项目3+1或者2+1。<br>举例说明：假如现有一项目，测试总时间为10天，需要分3轮进行测试。<br>那么测试时间的安排我们采取4、3、2的原则。<br>第一轮（4天）：全面覆盖所有用例；<br>第二轮（3天）：基本上是基本功能全覆盖（故要刷筛选好一级用例），回归问题单，缺陷比较多的模块功能全覆盖；<br>第三轮（2天）：基本上是回归问题单+基本功能全覆盖（执行一级用例）。<br>还有1天留着备用，若第3轮测试有未关闭的bug，需要再加一轮，用于回归问题。</p><p>以上就是常见测试计划安排模式：3+1模式。</p><p>参考链接：</p><ul><li><a href="https://blog.csdn.net/rachel_luo/article/details/7444480" target="_blank" rel="noopener">如何合理安排测试时间</a></li><li><a href="https://zhidao.baidu.com/question/163643937.html" target="_blank" rel="noopener">软件测试的测试计划是如何计算测试时间</a></li></ul><p><strong>10. 如果时间紧迫了，测试范围怎样裁剪？</strong><br>参考：   </p><ul><li><p>网上资料  </p><ul><li>部分不重要的需求可以裁剪，不进行测试</li><li>对测试范围按照重要性和风险进行优先级评定，优先测试重要的和风险大的</li></ul></li><li><p>课本</p><ul><li>优先级最高的需求功能（优先级如何确定）</li><li>新功能和编码改动较大（提高性能表现）的旧功能</li><li>经常容易出现问题部分的功能</li><li>一些经常被用户使用的功能和配置</li></ul></li></ul><p><strong>11. QTP自动化测试的时候，怎样提高测试脚本执行效率？</strong><br>参考：     </p><ul><li>使用VBS文件来启动QTP</li><li>把变量和函数定义放到外部VBS文件，而不要放在Action中</li><li>通过AOM控制QTP重启来解决QTP内存泄露问题</li><li>尽量不要使用wait，而使用.sync或exist语句</li><li>使用with语句可以让代码更清晰，而且效率更好</li><li>使用OR要比DP快点</li><li>不要保存image和movie到测试结果中</li><li>把运行模式设置为fast</li><li>通过AOM控制QTP</li><li>在调用Action时使用相对路径</li></ul><p><strong>参考链接</strong>：     </p><ul><li><a href="https://zhidao.baidu.com/question/569838608.html" target="_blank" rel="noopener">QTP：如何优化测试脚本 提高测试效率 以及脚本结构化</a></li><li><a href="http://www.voidcn.com/article/p-wopghvwx-hm.html" target="_blank" rel="noopener">如何让你的QTP脚本执行效率更高？</a></li></ul><p><strong>12. 理解性能测试的指标和性能测试给出的结果曲线</strong><br>参考：<br><strong>性能测试的指标</strong>     </p><ul><li>bs结构程序一般会关注的通用指标如下：     <ul><li>Web服务器指标指标：<ul><li>Avg Rps: 平均每秒钟响应次数=总请求时间 / 秒数；</li><li>Avg time to last byte per terstion （mstes）：平均每秒业务脚本的迭代次数，有人会把这两者混淆；</li><li>Successful Rounds：成功的请求；</li><li>Failed Rounds ：失败的请求；</li><li>Successful Hits ：成功的点击次数；</li><li>Failed Hits ：失败的点击次数；</li><li>Hits Per Second ：每秒点击次数；</li><li>Successful Hits Per Second ：每秒成功的点击次数；</li><li>Failed Hits Per Second ：每秒失败的点击次数；</li><li>Attempted Connections ：尝试链接数；   </li></ul></li></ul></li><li>cs结构程序，由于一般软件后台通常为数据库，所以我们更注重数据库的测试指标：      <ul><li>User 0 Connections ：用户连接数，也就是数据库的连接数量；</li><li>Number of deadlocks：数据库死锁；</li><li>Buffer Cache hit ：数据库Cache的命中情况</li></ul></li></ul><p><strong>性能测试给出的结果曲线</strong><br><strong>参考</strong><a href="https://blog.csdn.net/zzh920625/article/details/51000172" target="_blank" rel="noopener">LoadRunner性能测试工具—（三）测试结果样例分析</a></p><p><strong>13. 如果让你负责性能测试，你会按照什么思路开展工作？</strong><br>参考：<br>性能测试的方法是通过模拟生产运行的业务压力量和使用场最组合,测试系统的性能是否满足生产的性能要求。即在特定的运行条件下验证系统的能力状况。主要强调在特定的软硬件环境、特定的测试业务场景下,获得系统的各个性能指标。<br>而身为一个软件测试工程师应根据以下步骤开展工作：     </p><ol><li>制定目标和分析系统</li><li>选择测试度量的方法</li><li>学习的相关技术和工具</li><li>制定评估标准</li><li>设计测试用例</li><li>运行测试用例</li><li>分析测试结果</li></ol><h1 id="课本补充"><a href="#课本补充" class="headerlink" title="课本补充"></a>课本补充</h1><p><strong>有关软件测试的作用</strong>      </p><ul><li>产品质量的保证</li><li>控制成本的关键</li><li>软件可靠性确认</li><li>让企业具备国际竞争的实力</li></ul><p><strong>QA、QC、QM</strong>     </p><ul><li>QA 质量保证</li><li>QC 质量控制</li><li>QM 质量管理</li></ul><p><strong>软件测试人才需求快速增长的体现</strong>     </p><ul><li>中国软件产业正在快速增长，需要大量软件相关人才。</li><li>软件企业的发展要求测试人才达到一个合适的比例</li><li>软件企业开始认识到软件测试对于提高软件质量的重要性，开始重视软件测试。</li></ul><p><strong>软件测试技术的内容</strong><br>软件测试包括：     </p><ul><li>测试计划、测试流程、测试策略、设计测试用例、执行测试、撰写测试报告</li><li>单元测试、集成测试、系统测试、确认测试</li><li>手工测试、自动化测试</li><li>测试工具、缺陷管理和维护工具</li><li>编写操作手册、功能手册、系统管理手册、培训手册</li><li>维护文档、维护测试环境、分析问题、归纳推理能力</li></ul><p><strong>测试用例的组成</strong></p><ul><li><strong>用例标识</strong></li><li><strong>用例名称</strong></li><li><strong>被测功能</strong></li><li><strong>用例目的</strong></li><li><strong>数据准备</strong></li><li><strong>测试步骤</strong></li><li><strong>预期结果</strong></li><li><strong>实际结果</strong></li><li><strong>测试人员</strong></li><li><strong>测试日期</strong></li></ul><p><strong>编写测试用例的注意事项</strong><br>要解决4W问题     </p><ul><li>why</li><li>when</li><li>who</li><li>what</li></ul><p><strong>测试用例说明包含的要素</strong>      </p><ul><li>标识符</li><li>测试项</li><li>输入说明</li><li>输出说明</li><li>环境要求</li><li>特殊要求</li><li>用例依赖性</li></ul><p><strong>测试的三大原则</strong><br><strong>1. 尽早测试</strong><br><strong>2. 连续测试</strong><br><strong>3. 自动化测试</strong></p><p><strong>软件测试职业素质</strong>     </p><ul><li>软件测试员的目标：<br>——发现潜在的软件缺陷</li><li>软件测试员应具备的素质：</li></ul><ol><li>具有探索精神</li><li>具有创造性</li><li>坚持不懈的精神</li><li>故障排除专家</li><li>判断准确</li><li>追求完美</li><li>沟通能力</li></ol><p><strong>软件危机内在的原因</strong>     </p><ul><li>在软件开发过程中，软件缺陷的积累和放大效应是导致软件危机的主要原因</li><li>人员和其他资源的投入导致开发成本急剧增加，带有缺陷的开发成果导致开发质量大幅下降，反复无常的修改导致开发效率严重底下</li><li>因此，迫切地需要规范化地过程来制约软件开发的无序性，便产生了软件工程。</li></ul><p><strong>怎样写测试计划</strong>     </p><ul><li>确定内容<ul><li>总的测试计划</li><li>分阶段的测试计划</li><li>参考测试模板</li></ul></li><li>考虑以下问题<ul><li>测试问题</li><li>测试策略</li><li>测试技术</li><li>测试组织</li><li>测试准备</li></ul></li></ul><p><strong>测试计划的用途</strong></p><ul><li>为测试中的管理工作和技术工作提供指导</li><li>确定达到测试目标和测试目的的必要的测试类型和范围</li><li>概述有效使用资源的时间和活动的时间顺序安排</li><li>通过建立需求跟踪矩阵，为可能的、最高水平的测试覆盖提供保证</li><li>概述测试程序脚本的详细内容，描述如何执行测试程序脚本</li><li>概述测试所需的人员、财力、设备和工具资源</li></ul><p><strong>测试计划的作用</strong>     </p><ul><li>避免测试的“事件驱动”</li><li>使测试工作和整个开发工作融合起来</li><li>资源和变更事先作为一个可控制的风险</li></ul><p><strong>测试需求分析</strong>      </p><ul><li>什么时候进行测试需求分析<br>在开始测试设计之前确定测试需求</li><li>测试需求分析做什么？<br>清晰地定义测试需求并形成文档，使所有工作人员理解测试工作的基础</li><li>测试需求分析的目的是什么？<br>识别验证系统所需的不同类型的测试，在哪个测试阶段完成。</li></ul><p><strong>白盒测试能做什么？</strong></p><ul><li>保证模块内的所有独立路径至少执行一次</li><li>执行所有逻辑判定为真和为假的情况</li><li>在循环可操作范围内，执行所有边界循环</li><li>运用内部数据结构以保证其有效性</li></ul><p><strong>单元测试方法</strong><br>在对每个模块进行单元测试时，需要考虑它和周围模块之间的相互联系。为模拟这一联系，在进行单元测试时，必须设置若干个辅助测试模块，这些辅助模块分为两种：     </p><ul><li><p>驱动模块。相当于被测模块的主程序，用以模拟被测模块的上级模块，用于接收测试数据，并把这些数据传送给被测模块，启动被测模块，最后输出实测结果。</p></li><li><p>桩模块。相当于被测模块调用的子模块，用以模拟被测模块的下级模块。</p></li></ul><p><strong>测试评估</strong>     </p><ul><li>软件测试的主要评测方法包括覆盖评测和质量评测。     <ul><li>覆盖评测是对测试完全程度的评测，它建立在测试覆盖基础上<br>测试覆盖是由<ul><li>测试需求和</li><li>测试用例的覆盖或</li><li>已执行代码的覆盖表示的</li></ul></li></ul></li></ul><ul><li>质量评测是对测试对象（系统或测试的应用程序）的可靠性、稳定性以及性能的评测。质量建立在对测试结果的评估和对测试过程中确定的缺陷及缺陷修复的分析的基础上。    </li></ul><p><strong>功能测试一般什么时候执行</strong>     </p><ul><li>白盒测试可以在编码的早期进行</li><li>功能测试主要在后期执行</li></ul><p><strong>功能测试的两种策略</strong>      </p><ul><li>顺序测试每个程序特性的功能</li><li>一个模块一个模块的测试，即每个功能在其最先调用的地方测试</li></ul><p><strong>功能测试的特点</strong>     </p><ul><li><p>优点</p><ul><li>对于较大的代码单元来说（子系统甚至系统级），黑盒测试效率高</li><li>测试人员不需要了解实现的细节，包括特定的编程语言</li><li>测试人员和编码人员是彼此独立的</li><li>从用户的视角进行测试，很容易被理解和接受</li><li>有助于暴露任何规格不一致或有歧义的问题</li><li>测试用例设计可以在规格完成之后马上进行</li></ul></li><li><p>缺点</p><ul><li>覆盖率较低，大概只能达到总代码量的30%</li><li>自动化测试的复用性较低</li><li>没有清晰的和简明的规格，测试用例是很难设计的</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;思考题&quot;&gt;&lt;a href=&quot;#思考题&quot; class=&quot;headerlink&quot; title=&quot;思考题&quot;&gt;&lt;/a&gt;思考题&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1. 你怎样组建一支新的测试团队，包含一些什么岗位，如果要去招聘，开出什么条件？&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="软件测试" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="软件测试" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>软件工程</title>
    <link href="http://yoursite.com/2019/07/04/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/07/04/软件工程/</id>
    <published>2019-07-04T07:09:11.097Z</published>
    <updated>2019-07-04T11:29:48.341Z</updated>
    
    <content type="html"><![CDATA[<h1 id="软件工程"><a href="#软件工程" class="headerlink" title="软件工程"></a>软件工程</h1><h1 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h1><p><strong>1. 社会、健康、安全、法律、文化、环境对软件工程有什么影响？（举例子说明）</strong></p><a id="more"></a><p>答：    </p><ul><li><p><a href="https://baike.baidu.com/item/%E5%8D%93%E8%B6%8A%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%95%99%E8%82%B2%E5%9F%B9%E5%85%BB%E8%AE%A1%E5%88%92/4942299?fr=aladdin" target="_blank" rel="noopener">卓越工程师教育培养计划</a></p></li><li><p>金融危机会导致软件业风险的不确定增加。等等。。。</p></li><li><p><a href="http://kns.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&amp;dbname=CMFD0506&amp;filename=2005142505.nh&amp;uid=WEEvREcwSlJHSldRa1FhdXNXaEd2aHVOOXRmSVlYYzhMZUQ4UFpmdzMxdz0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MjYzODBGckNVUkxPZlllUm1GeS9uVTdyUFYxMjdHN0s4SE5UTXFwRWJQSVI4ZVgxTHV4WVM3RGgxVDNxVHJXTTE=" target="_blank" rel="noopener">软件工程监理体系建设及其对软件产业影响研究</a></p></li><li><p>知识产权</p></li><li><p><a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">软件工程环境</a></p></li><li><p>996ICU</p></li><li><p>隐私保护等等。</p></li></ul><p><strong>2. 以下是否是软件需求项？什么类别的需求项？</strong>        </p><ul><li>目标软件必须用Java语言实现。<br><strong>约束性需求</strong></li><li>目标软件必须有一个主控模块和分别移动、照相和岩石采集控制的三个子模块组成。<br><strong>否</strong></li><li>目标软件必须在0.5秒内响应外部事件。<br><strong>非功能需求-性能需求</strong></li><li>当目标软件与用户交互时，必须使用特定的菜单和对话框。<br><strong>否</strong></li></ul><p><strong>3. 比较黑盒测试和白盒测试的优缺点。</strong><br>答：    </p><ul><li>黑盒测试的优点</li></ul><ol><li>比较简单，不需要了解程序内部的代码及实现。</li><li>与软件的内部实现无关。</li><li>从用户角度出发，能很容易的知道用户会用到哪些功能，会遇到哪些问题。</li><li>基于软件开发文档，所以也能知道软件实现了文档中的哪些功能。</li><li>在做软件自动化测试时较为方便。</li></ol><ul><li>黑盒测试的缺点</li></ul><ol><li>不可能覆盖所有的代码，覆盖率较低，大概只能达到总代码量的30%。</li><li>自动化测试的复用性较低。</li></ol><ul><li>白盒测试的优点</li></ul><ol><li>帮助软件测试人员增大代码的覆盖，提高代码的质量，发现代码中隐藏的问题。</li></ol><ul><li>白盒测试的缺点</li></ul><ol><li>程序运行会有很多不同的路径，不可能测试所有的运行路径。</li><li>测试基于代码，只能测试开发人员做的对不对，而不能知道设计的正确与否，可能会漏掉一些功能需求。</li><li>系统庞大时，测试开销会非常大。</li></ol><p><strong>4. 软件生存期模型各个模型的适用范围</strong><br>答：     </p><ul><li><p>瀑布模型<br>适用范围：需求明确，小规模软件开发。</p></li><li><p>快速原型模型<br>适用范围：用户需求不明确，需要通过构建原型来清楚地了解用户的真实需求。</p></li><li><p>增量模型<br>适用范围：软件开发周期较长的软件，有持续的合作。</p></li><li><p>螺旋模型<br>适用范围：内部软件开发的大规模软件项目。</p></li><li><p>喷泉模型<br>适用模型：面向对象的软件开发过程。</p></li></ul><p><strong>5. 为什么要进行软件项目管理</strong><br>参考：<br>任何项目都需要管理，只有认真地管理才能使项目成功地达到预期的目标。<br>预期的目标应该包括以下方面：     </p><ol><li>达到项目预期的软件产品功能和性能要求，使用户认为这样的软件产品正是自己所期待的，也就是说软件产品达到了用户已认可的需求规格说明的要求。</li><li>时限要求。</li><li>项目开销限制在预算之内。</li></ol><p>同时软件项目管理涉及的几个主要方面是人员、产品、过程和项目，即所谓的4P(People、Produce、Process、Project).    </p><ol><li><p>开发人员<br>项目管理是对软件工作的管理，但归根结底是对人员行为的管理，就是对人员的管理。人的因素是软件工程的核心因素，对于这一核心因素的把握决定着项目的成败。<br>在项目的人员管理上需要考虑的几个问题是：<br>1). 利益相关方<br>2). 团队负责人<br>3). 团队集体</p></li><li><p>产品<br>软件工程是软件项目的成果和预期的目标，然而，软件这种无形的产品在开发出来以前，要想准确地描述它的规模、工作量，甚至他的功能和性能是困难的。除此以外，软件需求的稳定性问题更增加了项目工作的难度。    </p></li></ol><ul><li>产品的工作环境</li><li>产品的功能和性能</li><li>产品工作处理的是什么数据，经他处理后得到什么数据。 </li></ul><ol start="3"><li><p>过程<br>过程在软件工程项目中是重要的因素，它决定着项目中开展哪些活动以及对活动的要求和开展活动的顺序。</p></li><li><p>项目<br>项目管理的任务是如何利用已有的资源，组织实施既定的项目，提交给用户适用的产品。在此我们将项目管理要开展的主要工作分为3类：<br>1). 计划与计划管理，其中包括：项目策划及计划制定；项目估算；风险分析及风险管理；进度管理；计划跟踪与监督。<br>2). 资源管理，包括：人员管理；成本管理。<br>3). 成果要求管理，包括：需求管理；配置管理；质量管理。</p></li></ol><p><strong>从开发人员、产品、过程、项目四个方面进行论述</strong> </p><p><strong>6. 为什么软件维护的费用一直那么高</strong><br>参考：<br>软件维护不仅针对程序代码，而且还针对软件定义、开发的各个阶段生成的文档。而软件在设计阶段很难预料到这个软件交给谁，在什么时候进行什么样的维护工作。软件维护的依据只能靠软件文档和有关的设计信息。这样，软件维护人员不得不花费大量的劳动，用于软件系统的再分析和对软件信息的理解。因此软件的维护费用也就一直高居不下。</p><p><strong>7. 软件生命周期，各个过程主要工作</strong><br>答：     </p><ul><li>可行性分析（研究）与计划阶段<br>要确定该软件的开发目标和总的要求，要进行可行性分析、投资收益分析、制定开发计划，并完成可行性分析报告、开发文档等文档（输出）。</li><li>需求分析阶段<br>由系统分析人员对被设计的系统进行系统分析，确定对该软件的各项功能、性能需求和设计约束，确定对文档编制的要求，作为本阶段工作的结果，输出有：软件需求规格说明(也称为：软件需求说明、软件规格说明)、数据要求说明和初步的用户手册应该编写出来。</li><li>设计阶段<br>系统设计人员和程序设计人员应该在反复理解软件需求的基础上，提出多个设计，分析每个设计能履行的功能并进行相互比较，最后确定一个设计，包括该软件的结构、模块(或CSCI)的划分、功能的分配，以及处理流程。<br>系统比较复杂的情况下，设计阶段应分解成概要设计阶段和详细设计阶段两个步骤。在一般情况下，完成的文档包括：结构设计说明、详细设计说明和测试计划初稿。 </li><li>实现阶段<br>要完成源程序的编码、编译(或汇编)和排错调试得到无语法错的程序清单，要开始编写进度日报、周报和月报(是否要有日报或周报，取决于项目的重要性和规模)，并且要完成用户手册、操作手册等面向用户的文档的编写工作，还要完成测试计划的编制。</li><li>测试阶段<br>该程序将被全面地测试，已编制的文档将被检查审阅。一般要完成测试分析报告。作为开发工作的结束，所生产的程序、文档以及开发工作本身将逐项被评价，最后写出项目开发总结报告。</li><li>运行与维护阶段<br>软件将在运行使用中不断地被维护，根据新提出的需求进行必要而且可能的扩充和删改、更新和升级。软件维护分为改正性维护、适应性维护和预防性维护，分别对应于前面的三个问题。<br>改正性维护就是修改原有的缺陷、适应性维护就是使软件适应新的软硬件环境，预防性维护就是把今天的技术用在昨天的软件上，以期软件在明天还能使用。</li></ul><p><strong>8. 为什么程序员在进行单元测试时多以白盒测试为主，而软件测试工程师在进行系统集成测试多以黑盒测试为主？</strong><br>参考：<br>白盒测试方法按照程序内部的结构测试程序，检验程序中的每条通路是否都能按预定要求正确工作，而不顾它的功能。 </p><p>黑盒测试并不涉及程序的内部结构和内容特性，主要根据规格说明，只依靠被测试程序的输入和输出之间关系或程序的功能来设计测试用例。</p><h1 id="论述题"><a href="#论述题" class="headerlink" title="论述题"></a>论述题</h1><p><strong>1.  用户最终要执行的使用的最终产品写出来的代码，只要在开发阶段做的好，产品就是一定成功的？</strong></p><p><strong>2. 软件在交付的时候，如果软件在运行的时候没有问题就是高质量的软件</strong></p><p><strong>3. 从用户得到的原始需求不用分析就可以作为软件设计阶段的依据。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;软件工程&quot;&gt;&lt;a href=&quot;#软件工程&quot; class=&quot;headerlink&quot; title=&quot;软件工程&quot;&gt;&lt;/a&gt;软件工程&lt;/h1&gt;&lt;h1 id=&quot;简答题&quot;&gt;&lt;a href=&quot;#简答题&quot; class=&quot;headerlink&quot; title=&quot;简答题&quot;&gt;&lt;/a&gt;简答题&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;1. 社会、健康、安全、法律、文化、环境对软件工程有什么影响？（举例子说明）&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="软件工程" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="软件工程" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>操作系统</title>
    <link href="http://yoursite.com/2019/07/01/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2019/07/01/操作系统/</id>
    <published>2019-07-01T05:28:14.873Z</published>
    <updated>2019-07-03T12:15:28.888Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h1 id="信号量解决进程同步问题"><a href="#信号量解决进程同步问题" class="headerlink" title="信号量解决进程同步问题"></a>信号量解决进程同步问题</h1><p>例题：<br>桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向盘子中放苹果，妈妈专向盘子中放橘子，两个儿子专等吃盘子中的橘子，两个女儿专等吃盘子中的苹果。请用信号量操作来实现爸爸、妈妈、儿子、女儿之间的同步与互斥关系。<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">semaphore s=2,so=0,sa=0;//s表示盘空，so表示橘子，sa表示苹果。</span><br><span class="line">Cobegin</span><br><span class="line">Void father(void)</span><br><span class="line">&#123;</span><br><span class="line">while(1)&#123;</span><br><span class="line">p(s);</span><br><span class="line">put apple();</span><br><span class="line">v(sa);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Void mother(void)</span><br><span class="line">&#123;</span><br><span class="line">while(1)&#123;</span><br><span class="line">p(s);</span><br><span class="line">put orange();</span><br><span class="line">v (so);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Void son(void)</span><br><span class="line">&#123;</span><br><span class="line">while(1)&#123;</span><br><span class="line">p(so);</span><br><span class="line">eat orange();</span><br><span class="line">v(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Void daughter(void)</span><br><span class="line">&#123;</span><br><span class="line">while(1)&#123;</span><br><span class="line">p(sa);</span><br><span class="line">eat apple();</span><br><span class="line">v(s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Coend</span><br></pre></td></tr></table></figure></p><p>PV操作参考<a href="https://blog.csdn.net/speedme/article/details/17597373" target="_blank" rel="noopener">进程同步之信号量机制（pv操作）及三个经典同步问题</a></p><h1 id="作业调度算法（先来先服务算法、短作业优先算法），计算周转时间、带权周转时间、平均周转时间、平均带权周转时间"><a href="#作业调度算法（先来先服务算法、短作业优先算法），计算周转时间、带权周转时间、平均周转时间、平均带权周转时间" class="headerlink" title="作业调度算法（先来先服务算法、短作业优先算法），计算周转时间、带权周转时间、平均周转时间、平均带权周转时间"></a>作业调度算法（先来先服务算法、短作业优先算法），计算周转时间、带权周转时间、平均周转时间、平均带权周转时间</h1><blockquote><p><strong>周转时间=完成时间-提交时间</strong><br><strong>带权周转时间=周转时间/执行时间</strong><br><strong>平均周转时间=每个周转时间之和/作业总数</strong><br><strong>平均带权周转时间=每个带权周转时间之和/作业总数</strong></p></blockquote><p>例题：求解下表中4个作业在FCFS（先来先服务算法）和SJF（短作业优先算法）调度算法下的调度次序、周转时间、带权周转时间、平均周转时间、平均带权周转时间。     </p><table><thead><tr><th>作业</th><th>提交时间</th><th>执行时间</th><th>开始时间</th><th>完成时间</th><th>周转时间</th><th>带权周转时间</th></tr></thead><tbody><tr><td>1</td><td>8.00</td><td>2.00</td><td></td><td></td><td></td><td></td></tr><tr><td>2</td><td>8.50</td><td>0.50</td><td></td><td></td><td></td><td></td></tr><tr><td>3</td><td>9.00</td><td>0.10</td><td></td><td></td><td></td><td></td></tr><tr><td>4</td><td>9.50</td><td>0.20</td><td></td><td></td><td></td></tr></tbody></table><p>先来先服务调度算法   </p><table><thead><tr><th>作业</th><th>提交时间</th><th>运行时间</th><th>开始时间</th><th>完成时间</th><th>周转时间</th><th>带权周转时间</th><th>执行顺序</th></tr></thead><tbody><tr><td>1</td><td>8.00</td><td>2.00</td><td>8.00</td><td>10.00</td><td>2.00</td><td>1</td><td>1</td></tr><tr><td>2</td><td>8.50</td><td>0.50</td><td>10.00</td><td>10.50</td><td>2.00</td><td>4</td><td>2</td></tr><tr><td>3</td><td>9.00</td><td>0.10</td><td>10.50</td><td>10.60</td><td>1.60</td><td>16</td><td>3</td></tr><tr><td>4</td><td>9.50</td><td>0.20</td><td>10.60</td><td>10.80</td><td>1.30</td><td>6.5</td><td>4</td></tr></tbody></table><p>平均周转时间=1.725<br>平均带权周转时间=6.875    </p><p>短作业优先调度算法    </p><table><thead><tr><th>作业</th><th>提交时间</th><th>运行时间</th><th>开始时间</th><th>完成时间</th><th>周转时间</th><th>带权周转时间</th><th>执行顺序</th></tr></thead><tbody><tr><td>1</td><td>8.00</td><td>2.00</td><td>8.00</td><td>10.00</td><td>2.00</td><td>1</td><td>1</td></tr><tr><td>2</td><td>8.50</td><td>0.50</td><td>10.30</td><td>10.80</td><td>2.30</td><td>4.6</td><td>4</td></tr><tr><td>3</td><td>9.00</td><td>0.10</td><td>10.00</td><td>10.10</td><td>1.10</td><td>11</td><td>2</td></tr><tr><td>4</td><td>9.50</td><td>0.20</td><td>10.10</td><td>10.30</td><td>0.80</td><td>4</td><td>3</td></tr></tbody></table><p>平均周转时间=1.55<br>平均带权周转时间=5.15  </p><h2 id="先来先服务算法"><a href="#先来先服务算法" class="headerlink" title="先来先服务算法"></a>先来先服务算法</h2><p>先来先服务根据作业的提交时间来执行作业，提交的时间早则首先被执行。  </p><h2 id="短作业优先算法"><a href="#短作业优先算法" class="headerlink" title="短作业优先算法"></a>短作业优先算法</h2><p>根据执行时间来作为执行顺序，同时第一个到达的作业要首先被执行，之后再根据运行时间的长短来执行，短的则优先执行。</p><h1 id="资源分配图的简化"><a href="#资源分配图的简化" class="headerlink" title="资源分配图的简化"></a>资源分配图的简化</h1><h2 id="资源分配图"><a href="#资源分配图" class="headerlink" title="资源分配图"></a>资源分配图</h2><blockquote><p>在资源分配图中，通常使用圆圈来表示每个进程，用方框表示每种资源类型。由于同一资源类型可能有多个实例，所以在矩形中用圆点数表示实例数。</p></blockquote><table><thead><tr><th>实例</th><th>说明</th></tr></thead><tbody><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137904561_1566c16720_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>进程P1申请一个R1类资源</td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137934688_b1c78b1d52_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>系统分配一个R1类资源给进程P1，此时系统还剩下2个R1类资源</td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137934578_5fb04c383b_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>进程P1申请2个R类资源</td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137904261_696b992a7d_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>系统分配2个R1类资源给进程P1，此时系统还剩下1个R1类资源</td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137904261_696b992a7d_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>系统分配一个R1类资源给进程P2，然后分配一个R1类资源给进程P1，最后进程P1收到一个R1类资源又继续申请一个R1类资源，此时系统还剩下一个R1类资源可以分配给进程P1，<strong>但是还没有分配给P1</strong></td></tr><tr><td><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/48137996962_d2ae9b9b64_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></td><td>系统分配一个R1类资源给进程P2，然后又分配一个R1类资源给进程P1，最后进程P1收到一个R1类资源又继续申请一个R1类资源，此时系统已经没有R1类资源可以分配给进程P1，于是<strong>进程P1收到阻塞</strong></td></tr></tbody></table><p>例题：<br><img src="https://live.staticflickr.com/65535/48138130057_feaf5dfa2d_b.jpg" alt></p><ul><li>第一步：先看R1资源，它有三个箭头是向外的，因此它一共给进程分配了3个资源，此时，R1没有空闲的资源剩余。      </li><li>第二步：再看R2资源，它有一个箭头是向外的，因此它一共给进程分配了1个资源，此时，R2还剩余一个空闲的资源没分配。         </li><li>第三步：看完资源，再来看进程，先看进程P2，它只申请一个R1资源，但此时R1资源已经用光了，所以，进程P2进入阻塞状态，因此，进程P2暂时不能化成孤立的点。        </li><li>第四步：再看进程P1，它只申请一个R2资源，此时，系统还剩余一个R2资源没分配，因此，可以满足P1的申请。这样，进程P1便得到了它的全部所需资源，所以它不会进入阻塞状态，可以一直运行，等它运行完后，我们再把它的所有的资源释放。相当于：可以把P1的所有的边去掉，变成一个孤立的点，如下图所示：       </li></ul><p><img src="https://live.staticflickr.com/65535/48138067208_2331e8f977_b.jpg" alt></p><ul><li>第五步：进程P1运行完后，释放其所占有的资源（2个R1资源和1个R2资源），系统回收这些资源后，空闲的资源便变成2个R1资源和1个R2资源，由于进程P2一直在申请一个R1资源，所以此时，系统能满足它的申请。这样，进程P2便得到了它的全部所需资源，所以它不会进入阻塞状态，可以一直运行，等它运行完后，我们再把它的所有的资源释放。相当于：可以把P2的所有的边都去掉，化成一个孤立的点，变成下图：       </li></ul><p><img src="https://live.staticflickr.com/65535/48138036656_e274780171_b.jpg" alt></p><p>由于这个资源分配图可完全简化，因此，不会产生死锁。<br>而如果资源分配图中的点，最终不能够化成孤立的点，则进程资源图不能够完全简化，从而会发生死锁。      </p><h1 id="分页地址变换"><a href="#分页地址变换" class="headerlink" title="分页地址变换"></a>分页地址变换</h1><blockquote><p>地址变换处理</p><ul><li>得到页号：自动将逻辑地址分为页号和页内地址</li><li>用页号查页表，得到块号</li><li>将块号与页内地址拼接，即得物理地址</li></ul></blockquote><h2 id="分页存储逻辑地址转物理地址"><a href="#分页存储逻辑地址转物理地址" class="headerlink" title="分页存储逻辑地址转物理地址"></a>分页存储逻辑地址转物理地址</h2><p>例题：<br>已知某个分页系统，页面大小为1K(即1024字节)，某一个作业有4个页面，分别装入到主存的第3、4、6、8块中，求逻辑地址2100对应的物理地址。  </p><ul><li>第一步：求逻辑地址的页号 = 2100/1024=2 （整除）</li><li>第二步：求页内偏移量 = 2100 % 1024 =52 （取余）</li><li>第三步：产生页表：</li></ul><table><thead><tr><th>页号</th><th>块号</th></tr></thead><tbody><tr><td>0</td><td>3</td></tr><tr><td>1</td><td>4</td></tr><tr><td>2</td><td>6</td></tr><tr><td>3</td><td>8</td></tr></tbody></table><ul><li>第四步：根据逻辑地址的页号查出物理地址的页框号/帧号：<br>如上图，逻辑地址的第2页对应物理地址的第6页。</li><li>第五步：求出物理地址 = 6*1024 + 52 = 6196</li></ul><p>设有8页的逻辑地址空间，每页有1024个字节，它们被映射到32块的物理存储区，那么逻辑地址的有效位是多少，物理地址至少多少位？</p><p>逻辑地址：8x1024=2^3x2^10=2^13<br>物理地址：32x1024=2^5x2^10=2^15<br>逻辑地址的有效位是13，物理地址的有效位是15.      </p><h2 id="十六进制逻辑地址转物理地址"><a href="#十六进制逻辑地址转物理地址" class="headerlink" title="十六进制逻辑地址转物理地址"></a>十六进制逻辑地址转物理地址</h2><p>一分页存储管理系统中逻辑地址长度为16位，页面大小为4KB字节，现有一逻辑地址为2F6AH，且第0、1、2页依次存放在物理块5、10、11中。求逻辑地址2F6AH对应的物理地址      </p><p>解：    </p><ul><li>第一步：将逻辑地址2F6AH转换为二进制为：0010 1111 0110 1010     </li><li>第二步：由于页面大小为4KB字节，（4KB=2的12次方）。所以逻辑地址的后12位为“页内地址”(也叫做页内偏移量)      </li><li>第三步：由于逻辑地址的后12位为页内地址，所以剩下的前4位为页号：即0010为页号      </li><li>第四步：根据页表可知，0010(十进制为2)对于的页框号为11(二进制为1011)<br>所以最终的物理地址为：1011 1111 0110 1010<br>即BF6AH</li></ul><h1 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h1><blockquote><p>定义：选择换出页面的算法<br>评价依据：页面更换频率（缺页率）。 <strong>缺页率=缺页次数/页面总访问次数</strong></p></blockquote><h2 id="最佳置换算法（OPT）"><a href="#最佳置换算法（OPT）" class="headerlink" title="最佳置换算法（OPT）"></a>最佳置换算法（OPT）</h2><p>最佳置换算法所选择淘汰的页面是<strong>最长（未来）时间内不再被访问的页面</strong>。</p><p>例如：<br>系统为某进程分配3个物理块，进程访问页面的顺序是0，7，6，5，7，4，7，3，5，4，7，4，5，6，5，7，6，0，7，6。</p><table><thead><tr><th>访问页面</th><th>0</th><th>7</th><th>6</th></tr></thead><tbody><tr><td>物理块</td><td>0</td><td>0</td><td>0</td></tr><tr><td></td><td></td><td>7</td><td>7</td></tr><tr><td></td><td></td><td></td><td>6</td></tr></tbody></table><p>接下来下一个进入的数字是5，然后需要淘汰最久不被访问的页面。</p><p><strong>首先，需要看0，7，6的哪个是最久不被访问的页面。<br>0在第18次再次访问。<br>7在第5次再次被访问。<br>6在第14次再次被访问。</strong><br>因此需要淘汰<strong>0</strong>。</p><p>按照如上的规律，可以得到以下的结果。     </p><table><thead><tr><th>访问页面</th><th>0</th><th>7</th><th>6</th><th>5</th><th>7</th><th>4</th><th>7</th><th>3</th><th>5</th><th>4</th><th>7</th><th>4</th><th>5</th><th>6</th><th>5</th><th>7</th><th>6</th><th>0</th><th>7</th><th>6</th></tr></thead><tbody><tr><td>物理块</td><td>0</td><td>0</td><td>0</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>5</td><td>0</td><td>0</td><td>0</td></tr><tr><td></td><td></td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>3</td><td>3</td><td>3</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td><td>7</td></tr><tr><td></td><td></td><td></td><td>6</td><td>6</td><td>6</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>4</td><td>6</td><td>6</td><td>6</td><td>6</td><td>6</td><td>6</td><td>6</td></tr><tr><td>缺页中断</td><td>x</td><td>x</td><td>x</td><td>x</td><td></td><td>x</td><td></td><td>x</td><td></td><td></td><td>x</td><td></td><td></td><td>x</td><td></td><td></td><td></td><td>x</td><td></td><td></td></tr></tbody></table><p>缺页率：9/20*100%=36%     </p><p><strong>缺页中断：在请求分页系统中，可以通过查询页表中的状态位来确定所要访问的页面是否存在于内存中。每当所要访问的页面不在内存时，会产生一次缺页中断，此时操作系统会根据页表中的外存地址在外存中找到所缺的一页，将其调入内存。</strong></p><p><strong>通俗的讲也就是每次往物理块中添加数据就会产生一次缺页中断。</strong></p><h2 id="先进先出页面置换算法（FIFO）"><a href="#先进先出页面置换算法（FIFO）" class="headerlink" title="先进先出页面置换算法（FIFO）"></a>先进先出页面置换算法（FIFO）</h2><p>先进先出页面置换算法淘汰的页面是<strong>淘汰最先进入内存的页面</strong>。</p><table><thead><tr><th>访问页面</th><th>6</th><th>0</th><th>1</th><th>2</th><th>0</th><th>3</th><th>0</th><th>4</th><th>2</th><th>3</th></tr></thead><tbody><tr><td>物理块</td><td>6</td><td>6</td><td>6</td><td>2</td><td>2</td><td>2</td><td>2</td><td>4</td><td>4</td><td>4</td></tr><tr><td></td><td></td><td>0</td><td>0</td><td>0</td><td>0</td><td>3</td><td>3</td><td>3</td><td>2</td><td>2</td></tr><tr><td></td><td></td><td></td><td>1</td><td>1</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>3</td></tr><tr><td>缺页中断</td><td>x</td><td>x</td><td>x</td><td>x</td><td></td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td></tr></tbody></table><p>缺页率：9/10*100%=90%  </p><h2 id="最近最久未使用置换算法（LRU）"><a href="#最近最久未使用置换算法（LRU）" class="headerlink" title="最近最久未使用置换算法（LRU）"></a>最近最久未使用置换算法（LRU）</h2><p>最近最久未使用置换算法淘汰的页面是<strong>淘汰最近最久未使用的页面</strong>。    </p><table><thead><tr><th>访问页面</th><th>2</th><th>3</th><th>2</th><th>1</th><th>5</th><th>2</th><th>4</th><th>5</th><th>3</th><th>2</th><th>5</th><th>2</th></tr></thead><tbody><tr><td>物理块</td><td>2</td><td>3</td><td>2</td><td>1</td><td>5</td><td>2</td><td>4</td><td>5</td><td>3</td><td>2</td><td>5</td><td>2</td></tr><tr><td></td><td></td><td>2</td><td>3</td><td>2</td><td>1</td><td>5</td><td>2</td><td>4</td><td>5</td><td>3</td><td>2</td><td>5</td></tr><tr><td></td><td></td><td></td><td></td><td>3</td><td>2</td><td>1</td><td>5</td><td>2</td><td>4</td><td>5</td><td>3</td><td>3</td></tr><tr><td>缺页中断</td><td>x</td><td>x</td><td></td><td>x</td><td>x</td><td></td><td>x</td><td></td><td>x</td><td>x</td><td></td><td></td></tr></tbody></table><p>缺页率：7/12*100%=58.3%</p><p>堆栈实现LRU：<br><strong>系统使用特殊的堆栈来存放内存中每一个页面的页号。每当访问一页时就调整一次，即把被访问页面的页号从栈中移出再压入栈顶。因此，栈顶始终是最新被访问页面的页号。当发生缺页中断时，总是淘汰栈底页号所对应的页面</strong>。</p><h1 id="磁盘的调度算法"><a href="#磁盘的调度算法" class="headerlink" title="磁盘的调度算法"></a>磁盘的调度算法</h1><h2 id="先来先服务（FCFS）"><a href="#先来先服务（FCFS）" class="headerlink" title="先来先服务（FCFS）"></a>先来先服务（FCFS）</h2><p>先来先服务算法是<strong>根据进程请求访问磁盘的先后顺序进行调度</strong>。<br>例题：<br>某一磁盘请求序列（磁盘号）：98，183，37，122，14，124，65，61.按照先来先服务磁盘调度对磁盘进行请求服务，假设当前磁头在53道上，则磁臂总移动倒数为多少？     </p><table><thead><tr><th>下一个磁道</th><th>移动磁道数</th></tr></thead><tbody><tr><td>98</td><td>45</td></tr><tr><td>183</td><td>85</td></tr><tr><td>37</td><td>146</td></tr><tr><td>122</td><td>85</td></tr><tr><td>14</td><td>108</td></tr><tr><td>124</td><td>110</td></tr><tr><td>65</td><td>59</td></tr><tr><td>61</td><td>4</td></tr></tbody></table><p>总移动磁道数=45+85+146+85+108+110+59+4=642.    </p><h2 id="最短寻道时间优先磁盘调度算法（SSTF）"><a href="#最短寻道时间优先磁盘调度算法（SSTF）" class="headerlink" title="最短寻道时间优先磁盘调度算法（SSTF）"></a>最短寻道时间优先磁盘调度算法（SSTF）</h2><p>最短寻道时间优先磁盘调度算法是<strong>每次都优先满足当前磁头位置最近的磁道访问请求</strong>。</p><p>例题：<br>若干个等待访问磁盘者依次要访问的磁道为19，43，40，4，79，11，76，当前磁头位于42号柱面，若用最短寻道时间优先磁盘调度算法，则访问序列是什么？<br>思路：将要访问的磁道与当前磁头所在柱面相减并取绝对值，绝对值越小的优先访问。     </p><p>访问序列为40，43，19，11，4，76，79.     </p><h2 id="扫描算法（SCAN）"><a href="#扫描算法（SCAN）" class="headerlink" title="扫描算法（SCAN）"></a>扫描算法（SCAN）</h2><ul><li>考虑当前移动方向，一直移动到最外/内层磁道时，折返，进行反方向移动。就好比电梯。</li><li>寻道方向：…，里-&gt;外，外-&gt;里，….;</li></ul><p>若干个等待访问磁盘者依次要访问的磁道为86,147,91,177,94,150,102,175,130，当前磁头位于143号柱面，<strong>刚刚处理完125号柱面</strong>，使用SCAN算法则访问序列是什么？    </p><p>答：     </p><ul><li>当前方向：从143向<strong>磁道号增加的方向</strong></li><li>依次访问：147，150，175，177</li><li>反方向：130，102，94，91，86（<strong>电梯原理</strong>）</li></ul><h2 id="循环扫描（CSCAN）"><a href="#循环扫描（CSCAN）" class="headerlink" title="循环扫描（CSCAN）"></a>循环扫描（CSCAN）</h2><ul><li>循环扫描</li><li>寻道方向：…..,里-&gt;外，里-&gt;外，….。或者相反。</li></ul><p>若干个等待访问磁盘者依次要访问的磁道为86,147,91,177,94,150,102,175,130，当前磁头位于143号柱面，<strong>刚刚处理完125号柱面</strong>，使用CSCAN算法则访问序列是什么？     </p><p>答：     </p><ul><li>当前方向：从143向<strong>磁道号增加的方向</strong></li><li>依次访问：147，150，175，177</li><li>再从0开始增加方向：<strong>86，91，94，102，130</strong></li></ul><h1 id="磁盘空间分配"><a href="#磁盘空间分配" class="headerlink" title="磁盘空间分配"></a>磁盘空间分配</h1><h2 id="多级索引分配"><a href="#多级索引分配" class="headerlink" title="多级索引分配"></a>多级索引分配</h2><p>例题：<br>设一个盘块大小为1k,每个盘块号占4Byte,若系统采用2级索引，求文件的最大长度。</p><p>答:<br>每个索引块最多可存放1k/4=256个盘块号；<br>采用2级索引是，一个文件最多可拥有的数据块数为256x256=2^6x2^10=64k<br>文件的最长长度为64kx1k=64m.</p><h2 id="混合索引分配"><a href="#混合索引分配" class="headerlink" title="混合索引分配"></a>混合索引分配</h2><p>存放在某磁盘上的文件系统采用混合索引分配方式，其中FCB由6个地址项构成，前四个地址项是直接寻址方式，第五个地址项是一次间接寻址方式，第六个地址项是二次间接寻址。若每个盘块的大小为1KB，盘块号用4个字节描述。那么：      </p><p>（1）源文件系统允许文件的最大长度是多少？<br>（2）将文件的字节偏移量800、8193和819300 转换为物理块号和块内偏移。<br>答：<br>（1）每个盘块能存放的盘块号的个数：1024/4=256<br>文件系统允许的文件最大长度：<br>（4+256+256x256）x1K=65796KB</p><p>（2）    </p><ul><li>800/1024商0余800，因为0&lt;4，所以，第一个地址项中存放的块号即为其所在物理块号，块内偏移800。</li><li>8193/1024商8余1，4&lt;=8&lt;4+256，所以一次间接寻址，8-4=4，读第五个地址项中存放的块号物理块的内容，其内容中的第五个块号即为其所在物理块号，块内偏移1。</li><li>819300/1024商800余100，4+256&lt;=800&lt;4+256+256x256，所以二次间接寻址，800-(4+256)=540，540/256商2余28，读第六个地址项中存放的块号的物理块的内容，再读其内容中的第三个块号所在物理块的内容，其内容的第29个块号即为其所在物理块号，块内偏移为100。</li></ul><h1 id="磁盘空间的管理位置分配"><a href="#磁盘空间的管理位置分配" class="headerlink" title="磁盘空间的管理位置分配"></a>磁盘空间的管理位置分配</h1><h2 id="位示图"><a href="#位示图" class="headerlink" title="位示图"></a>位示图</h2><p>位示图：用二进制的一位表示磁盘中一个盘块的使用情况。     </p><ul><li>“0”，对应块是空闲块；</li><li>“1”，对应块已被分配出去。</li></ul><h3 id="盘块分配"><a href="#盘块分配" class="headerlink" title="盘块分配"></a>盘块分配</h3><p>(1) 顺序扫描位示图，从中找出一个或一组其值为“0”的二进制位(“0”表示空闲)。<br>(2) 将所找到的一个或一组二进制位， 转换成与之相应的盘块号。假定找到的其值为“0”的二进制位，位于位示的第i行、第j列，则其相应的盘块号应按下式计算：<br>b=n(i-1)+j<br>式中， n代表每行的位数。<br>(3) 修改位示图， 令map［i,j］=1。       </p><h3 id="盘块的回收"><a href="#盘块的回收" class="headerlink" title="盘块的回收"></a>盘块的回收</h3><p>(1) 将回收盘块的盘块号转换成位示图中的行号和列号。 转换公式为：<br>  i=(b-1)DIV n+1<br>  j=(b-1)MOD n+1<br>(2) 修改位示图。 令map ［i,j］=0。      </p><p>例题：<br>有一计算机系统采用如下图所示的位示图（行号、列号都从0开始编号）来管理空闲盘块。如果盘块从1开始编号，每个盘块的大小为1KB。 （1）现要为文件分配两个盘块，试具体说明分配过程。 （2）若要释放磁盘的第300块，应如何处理？<br><img src="https://live.staticflickr.com/65535/48149676471_a93daca589_b.jpg" alt><br><img src="https://live.staticflickr.com/65535/48149764307_54ccba2583_b.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;操作系统&quot;&gt;&lt;a href=&quot;#操作系统&quot; class=&quot;headerlink&quot; title=&quot;操作系统&quot;&gt;&lt;/a&gt;操作系统&lt;/h1&gt;&lt;h1 id=&quot;信号量解决进程同步问题&quot;&gt;&lt;a href=&quot;#信号量解决进程同步问题&quot; class=&quot;headerlink&quot; title=&quot;信号量解决进程同步问题&quot;&gt;&lt;/a&gt;信号量解决进程同步问题&lt;/h1&gt;&lt;p&gt;例题：&lt;br&gt;桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向盘子中放苹果，妈妈专向盘子中放橘子，两个儿子专等吃盘子中的橘子，两个女儿专等吃盘子中的苹果。请用信号量操作来实现爸爸、妈妈、儿子、女儿之间的同步与互斥关系。&lt;br&gt;
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="http://yoursite.com/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot整合Druid</title>
    <link href="http://yoursite.com/2019/06/08/Spring%20Boot%20%E6%95%B4%E5%90%88Druid/"/>
    <id>http://yoursite.com/2019/06/08/Spring Boot 整合Druid/</id>
    <published>2019-06-08T06:18:16.866Z</published>
    <updated>2019-06-30T05:43:06.735Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-Boot整合Druid"><a href="#Spring-Boot整合Druid" class="headerlink" title="Spring Boot整合Druid"></a>Spring Boot整合Druid</h1><a id="more"></a><h2 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line"> xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span><br><span class="line">&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span><br><span class="line">&lt;parent&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.1.5.RELEASE&lt;/version&gt;</span><br><span class="line">&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span><br><span class="line">&lt;/parent&gt;</span><br><span class="line">&lt;groupId&gt;com.example&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-06-data-jdbc&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;name&gt;spring-boot-06-data-jdbc&lt;/name&gt;</span><br><span class="line">&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span><br><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line">&lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">&lt;/properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;runtime&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--引入druid数据源--&gt;</span><br><span class="line">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/druid --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;druid&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.1.17&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;/dependencies&gt;</span><br><span class="line"></span><br><span class="line">&lt;build&gt;</span><br><span class="line">&lt;plugins&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;/plugins&gt;</span><br><span class="line">&lt;/build&gt;</span><br><span class="line"></span><br><span class="line">&lt;/project&gt;</span><br></pre></td></tr></table></figure><h2 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  datasource:</span><br><span class="line">    driver-class-name: com.mysql.cj.jdbc.Driver</span><br><span class="line">    url: jdbc:mysql://localhost:3306/jdbc</span><br><span class="line">    username: root</span><br><span class="line">    password: root</span><br><span class="line">    type: com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">    #   数据源其他配置</span><br><span class="line">    initialSize: 5</span><br><span class="line">    minIdle: 5</span><br><span class="line">    maxActive: 20</span><br><span class="line">    maxWait: 60000</span><br><span class="line">    timeBetweenEvictionRunsMillis: 60000</span><br><span class="line">    minEvictableIdleTimeMillis: 300000</span><br><span class="line">    validationQuery: SELECT 1 FROM DUAL</span><br><span class="line">    testWhileIdle: true</span><br><span class="line">    testOnBorrow: false</span><br><span class="line">    testOnReturn: false</span><br><span class="line">    poolPreparedStatements: true</span><br><span class="line">    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，&apos;wall&apos;用于防火墙</span><br><span class="line">    filters: stat,wall</span><br><span class="line">    maxPoolPreparedStatementPerConnectionSize: 20</span><br><span class="line">    useGlobalDataSourceStat: true</span><br><span class="line">    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span><br></pre></td></tr></table></figure><h2 id="DruidConfig-java"><a href="#DruidConfig-java" class="headerlink" title="DruidConfig.java"></a>DruidConfig.java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">package com.example.springboot.config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import com.alibaba.druid.pool.DruidDataSource;</span><br><span class="line">import com.alibaba.druid.support.http.StatViewServlet;</span><br><span class="line">import com.alibaba.druid.support.http.WebStatFilter;</span><br><span class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line">import org.springframework.boot.web.servlet.FilterRegistrationBean;</span><br><span class="line">import org.springframework.boot.web.servlet.ServletRegistrationBean;</span><br><span class="line">import org.springframework.context.annotation.Bean;</span><br><span class="line">import org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line">import javax.sql.DataSource;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line">import java.util.HashMap;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @author Yan</span><br><span class="line"> * @date 2019/6/8 13:46</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Configuration</span><br><span class="line">public class DruidConfig &#123;</span><br><span class="line"></span><br><span class="line">    @ConfigurationProperties(prefix = &quot;spring.datasource&quot;)</span><br><span class="line">    @Bean</span><br><span class="line">    public DataSource druid()&#123;</span><br><span class="line">        return  new DruidDataSource();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //配置Druid的监控</span><br><span class="line">    //1、配置一个管理后台的Servlet</span><br><span class="line">    @Bean</span><br><span class="line">    public ServletRegistrationBean statViewServlet()&#123;</span><br><span class="line">        ServletRegistrationBean bean = new ServletRegistrationBean(new StatViewServlet(), &quot;/druid/*&quot;);</span><br><span class="line">        Map&lt;String,String&gt; initParams = new HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        initParams.put(&quot;loginUsername&quot;,&quot;admin&quot;);</span><br><span class="line">        initParams.put(&quot;loginPassword&quot;,&quot;123456&quot;);</span><br><span class="line">        initParams.put(&quot;allow&quot;,&quot;&quot;);//默认就是允许所有访问</span><br><span class="line">        initParams.put(&quot;deny&quot;,&quot;192.168.15.21&quot;);  //拒绝哪些ip访问</span><br><span class="line"></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line">        return bean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //2、配置一个web监控的filter</span><br><span class="line">    @Bean</span><br><span class="line">    public FilterRegistrationBean webStatFilter()&#123;</span><br><span class="line">        FilterRegistrationBean bean = new FilterRegistrationBean();</span><br><span class="line">        bean.setFilter(new WebStatFilter());</span><br><span class="line"></span><br><span class="line">        Map&lt;String,String&gt; initParams = new HashMap&lt;&gt;();</span><br><span class="line">        initParams.put(&quot;exclusions&quot;,&quot;*.js,*.css,/druid/*&quot;);</span><br><span class="line"></span><br><span class="line">        bean.setInitParameters(initParams);</span><br><span class="line"></span><br><span class="line">        bean.setUrlPatterns(Arrays.asList(&quot;/*&quot;));</span><br><span class="line"></span><br><span class="line">        return  bean;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring-Boot整合Druid&quot;&gt;&lt;a href=&quot;#Spring-Boot整合Druid&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot整合Druid&quot;&gt;&lt;/a&gt;Spring Boot整合Druid&lt;/h1&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://yoursite.com/categories/Spring-Boot/"/>
    
      <category term="整合Druid" scheme="http://yoursite.com/categories/Spring-Boot/%E6%95%B4%E5%90%88Druid/"/>
    
    
      <category term="Spring Boot" scheme="http://yoursite.com/tags/Spring-Boot/"/>
    
      <category term="整合Druid" scheme="http://yoursite.com/tags/%E6%95%B4%E5%90%88Druid/"/>
    
  </entry>
  
  <entry>
    <title>搭建PHP环境（Windows）</title>
    <link href="http://yoursite.com/2019/05/27/%E6%90%AD%E5%BB%BAphp%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2019/05/27/搭建php环境/</id>
    <published>2019-05-27T14:25:36.188Z</published>
    <updated>2019-06-01T15:02:20.786Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建PHP环境（Windows）"><a href="#搭建PHP环境（Windows）" class="headerlink" title="搭建PHP环境（Windows）"></a>搭建PHP环境（Windows）</h1><h2 id="Apache-下载"><a href="#Apache-下载" class="headerlink" title="Apache 下载"></a>Apache 下载</h2><p>下载地址：<a href="https://archive.apache.org/dist/httpd/binaries/win32/" target="_blank" rel="noopener">Apache msi</a><br><a id="more"></a><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47942980403_d6cb5a4b44_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h2 id="Apache-安装"><a href="#Apache-安装" class="headerlink" title="Apache 安装"></a>Apache 安装</h2><ol><li>双击下载的文件。</li><li>相关配置。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47943015906_fd90108b4a_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>选择自定义安装模式<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47942997977_460a18ec9d_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><h3 id="Apache-目录结构说明"><a href="#Apache-目录结构说明" class="headerlink" title="Apache 目录结构说明"></a>Apache 目录结构说明</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47942998182_e4d3bab27e_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="Apache-httpd-exe介绍"><a href="#Apache-httpd-exe介绍" class="headerlink" title="Apache-httpd.exe介绍"></a>Apache-httpd.exe介绍</h3><p>Httpd.exe的详细应用      </p><ol><li><p>服务器进程：运行之后才能够使用。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47978909873_f73c0d5d20_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>用来查看Apache具有哪些功能以及配置文件是否有错：httpd或者httpd.exe（文件所在目录）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47978911057_67194e20c5_z.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>查看使用的模块：httpd -M</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47979212733_7e7d0c55bc_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li><p>验证配置文件是否有效：httpd -t</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/47979219121_af7c01dac5_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搭建PHP环境（Windows）&quot;&gt;&lt;a href=&quot;#搭建PHP环境（Windows）&quot; class=&quot;headerlink&quot; title=&quot;搭建PHP环境（Windows）&quot;&gt;&lt;/a&gt;搭建PHP环境（Windows）&lt;/h1&gt;&lt;h2 id=&quot;Apache-下载&quot;&gt;&lt;a href=&quot;#Apache-下载&quot; class=&quot;headerlink&quot; title=&quot;Apache 下载&quot;&gt;&lt;/a&gt;Apache 下载&lt;/h2&gt;&lt;p&gt;下载地址：&lt;a href=&quot;https://archive.apache.org/dist/httpd/binaries/win32/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apache msi&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="PHP" scheme="http://yoursite.com/categories/PHP/"/>
    
      <category term="搭建PHP环境（Windows）" scheme="http://yoursite.com/categories/PHP/%E6%90%AD%E5%BB%BAPHP%E7%8E%AF%E5%A2%83%EF%BC%88Windows%EF%BC%89/"/>
    
    
      <category term="PHP" scheme="http://yoursite.com/tags/PHP/"/>
    
      <category term="搭建PHP环境（Windows）" scheme="http://yoursite.com/tags/%E6%90%AD%E5%BB%BAPHP%E7%8E%AF%E5%A2%83%EF%BC%88Windows%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>活动的生命周期</title>
    <link href="http://yoursite.com/2019/05/26/%E6%B4%BB%E5%8A%A8%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>http://yoursite.com/2019/05/26/活动的生命周期/</id>
    <published>2019-05-26T03:54:10.299Z</published>
    <updated>2019-04-18T04:02:37.139Z</updated>
    
    <content type="html"><![CDATA[<h1 id="活动的生命周期"><a href="#活动的生命周期" class="headerlink" title="活动的生命周期"></a>活动的生命周期</h1><h2 id="返回栈"><a href="#返回栈" class="headerlink" title="返回栈"></a>返回栈</h2><p>Android中的活动是可以层叠的。每启动一个新的活动，就会覆盖在原活动上，然后点击Back键会销毁最上面的活动，下面的一个活动就会重新显示出来。        </p><a id="more"></a><p>Android是使用任务（Task）来管理活动的，一个任务就是一组存放在栈里的活动的集合，这个栈也被称作返回栈（Back Stack）。栈是一种后进先出的数据结构，在默认情况下，每当启动一个新的活动，它会在返回栈中入栈，并处于栈顶的位置。而每当我们按下Back键或调用finfish()方法去销毁一个活动时，处于栈顶的活动会出栈，这时前一个入栈的活动就会重新处于栈顶的位置。系统总是会显示处于栈顶的活动给用户。    </p><p><img src="https://live.staticflickr.com/65535/33756163358_79c6f77fd5.jpg" alt="返回栈示意图"></p><h2 id="活动状态"><a href="#活动状态" class="headerlink" title="活动状态"></a>活动状态</h2><p>每个活动在其生命周期最多可能会有4种状态。</p><ul><li><p>运行状态<br>当一个活动位于返回栈的栈顶时，这时互动就处于运行状态。系统最不愿意回收的就是处于运行状态的活动，这会给用户带来非常差的使用体验。</p></li><li><p>暂停状态<br>当一个活动不再处于栈顶位置，但仍然可见时，这时活动就进入了暂停状态。</p></li><li><p>停止状态<br>当一个活动不在处于栈顶位置，并且完全不可见的时候，就进入了停止状态。系统仍然会为这种活动保存相应的状态和成员变量，但是这并不是完全可靠的，当其他地方需要内存时，处于停止状态的活动有可能会被系统回收。</p></li><li><p>销毁状态<br>当一个活动从返回栈中移除后就变成了销毁状态。系统会最倾向于回收处于这种状态的活动，从而保证手机的内存充足。</p></li></ul><h2 id="活动的生存周期"><a href="#活动的生存周期" class="headerlink" title="活动的生存周期"></a>活动的生存周期</h2><p>Activity类中定义了7个回调方法，覆盖了活动生命周期的每一个环节。</p><ul><li><p>onCreate() 这个方法会在活动第一次被创建的时候调用。</p></li><li><p>onStart() 这个方法在活动由不可见变为可见的时候调用。</p></li><li><p>onResume() 这个方法在活动准备好和用户进行交互的时候调用。此时活动一定位于返回栈的栈顶，并且处于运行状态。</p></li><li><p>onPause() 这个方法在系统准备去启动或者恢复另一个活动的时候调用。</p></li><li><p>onStop() 这个方法在活动完全不可见的时候调用。它和onPause()方法的主要区别在于，如果启动的新活动是一个对话框式的活动，那么onPause()方法会得到执行，而onStop()方法并不会执行。</p></li><li><p>onDestroy() 这个方法在活动被销毁之前调用，之后的活动的状态将变为销毁状态。</p></li><li><p>onRestart() 这个方法在活动由停止状态变为运行状态之前调用，也就是活动被重新启动了。</p></li></ul><p>以上七个方法中除了onRestart()方法，其他都是两两相对的，从而又可以将活动分为3种生存期。      </p><ul><li>完整生存期 onCreate() onDestroy()</li><li>可见生存期 onStart() onStop()</li><li>前台生存期 onResume() onStop()</li></ul><p><img src="https://live.staticflickr.com/65535/40667214873_7418fa766c.jpg" alt></p><h2 id="体验活动的生命周期"><a href="#体验活动的生命周期" class="headerlink" title="体验活动的生命周期"></a>体验活动的生命周期</h2><p>源代码：<a href="https://github.com/yanxin152133/Android/tree/master/Activitylive" target="_blank" rel="noopener">https://github.com/yanxin152133/Android/tree/master/Activitylive</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;活动的生命周期&quot;&gt;&lt;a href=&quot;#活动的生命周期&quot; class=&quot;headerlink&quot; title=&quot;活动的生命周期&quot;&gt;&lt;/a&gt;活动的生命周期&lt;/h1&gt;&lt;h2 id=&quot;返回栈&quot;&gt;&lt;a href=&quot;#返回栈&quot; class=&quot;headerlink&quot; title=&quot;返回栈&quot;&gt;&lt;/a&gt;返回栈&lt;/h2&gt;&lt;p&gt;Android中的活动是可以层叠的。每启动一个新的活动，就会覆盖在原活动上，然后点击Back键会销毁最上面的活动，下面的一个活动就会重新显示出来。        &lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="活动的生命周期" scheme="http://yoursite.com/categories/Android/%E6%B4%BB%E5%8A%A8%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="活动的生命周期" scheme="http://yoursite.com/tags/%E6%B4%BB%E5%8A%A8%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    
  </entry>
  
  <entry>
    <title>个人觉得比较好的一些插件</title>
    <link href="http://yoursite.com/2019/05/26/%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/05/26/插件/</id>
    <published>2019-05-26T03:54:10.288Z</published>
    <updated>2019-05-08T13:36:55.386Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h1><h2 id="Chinese-Simplified-Language-Pack-for-Visual-Studio-Code"><a href="#Chinese-Simplified-Language-Pack-for-Visual-Studio-Code" class="headerlink" title="Chinese (Simplified) Language Pack for Visual Studio Code"></a>Chinese (Simplified) Language Pack for Visual Studio Code</h2><p>适用于 VS Code 的中文（简体）语言包。     </p><p><img src="https://live.staticflickr.com/7810/47599193841_ce5cc251fe.jpg" alt="Chinese (Simplified) Language Pack for Visual Studio Code"></p><a id="more"></a><h2 id="Markdown-Preview-Enhanced"><a href="#Markdown-Preview-Enhanced" class="headerlink" title="Markdown Preview Enhanced"></a>Markdown Preview Enhanced</h2><p>Markdown Preview Enhanced 是一款为 Atom 以及 Visual Studio Code 编辑器编写的超级强大的 Markdown 插件。 这款插件意在让你拥有飘逸的 Markdown 写作体验。    </p><p><img src="https://user-images.githubusercontent.com/1908863/28227953-eb6eefa4-68a1-11e7-8769-96ea83facf3b.png" alt="Markdown Preview Enhanced"></p><h2 id="City-Lights-Icon-package"><a href="#City-Lights-Icon-package" class="headerlink" title="City Lights Icon package"></a>City Lights Icon package</h2><p>一个美化 Visual Studio Code 图标的插件。</p><p><img src="https://raw.githubusercontent.com/yummygum/city-lights-icons-vsc/master/city-lights-icon-preview.gif" alt="City Lights Icon package"></p><h1 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h1><h2 id="广告净化器"><a href="#广告净化器" class="headerlink" title="广告净化器"></a>广告净化器</h2><p>免费高效的广告过滤工具：可以过滤烦人的视频广告、弹窗广告、大横幅广告等网页广告，让你清爽浏览网页。    </p><p>下载地址：<a href="https://chrome.google.com/webstore/detail/%E5%B9%BF%E5%91%8A%E5%87%80%E5%8C%96%E5%99%A8/cbiaicifbmeokbhollcjfeaoakmppfeh?hl=zh-CN" target="_blank" rel="noopener">谷歌浏览器</a>   <a href="https://www.yiclear.com/download/" target="_blank" rel="noopener">火狐浏览器</a></p><h2 id="Convertio"><a href="#Convertio" class="headerlink" title="Convertio"></a>Convertio</h2><p>一个文件转换器。<br>网址：<a href="https://convertio.co/zh/" target="_blank" rel="noopener">https://convertio.co/zh/</a></p><h1 id="适用于Chrome的Web服务器"><a href="#适用于Chrome的Web服务器" class="headerlink" title="适用于Chrome的Web服务器"></a>适用于Chrome的Web服务器</h1><h2 id="Web-Server-for-Chrome"><a href="#Web-Server-for-Chrome" class="headerlink" title="Web Server for Chrome"></a>Web Server for Chrome</h2><p>适用于Chrome的Web服务器使用HTTP通过网络从本地文件夹提供网页。可离线运行。</p><p><img src="https://live.staticflickr.com/65535/33926865808_92c256c9fb_z.jpg" alt="Web Server for Chrome"></p><p><img src="https://live.staticflickr.com/65535/32860400467_9b3c5a39ba_z.jpg" alt="Web Server for Chrome"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Visual-Studio-Code&quot;&gt;&lt;a href=&quot;#Visual-Studio-Code&quot; class=&quot;headerlink&quot; title=&quot;Visual Studio Code&quot;&gt;&lt;/a&gt;Visual Studio Code&lt;/h1&gt;&lt;h2 id=&quot;Chinese-Simplified-Language-Pack-for-Visual-Studio-Code&quot;&gt;&lt;a href=&quot;#Chinese-Simplified-Language-Pack-for-Visual-Studio-Code&quot; class=&quot;headerlink&quot; title=&quot;Chinese (Simplified) Language Pack for Visual Studio Code&quot;&gt;&lt;/a&gt;Chinese (Simplified) Language Pack for Visual Studio Code&lt;/h2&gt;&lt;p&gt;适用于 VS Code 的中文（简体）语言包。     &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://live.staticflickr.com/7810/47599193841_ce5cc251fe.jpg&quot; alt=&quot;Chinese (Simplified) Language Pack for Visual Studio Code&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="插件" scheme="http://yoursite.com/categories/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="插件" scheme="http://yoursite.com/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>快速搭建一个SSM项目</title>
    <link href="http://yoursite.com/2019/05/26/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AASSM%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2019/05/26/快速搭建一个SSM项目/</id>
    <published>2019-05-26T03:54:10.281Z</published>
    <updated>2019-03-26T12:53:41.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="快速搭建一个SSM项目"><a href="#快速搭建一个SSM项目" class="headerlink" title="快速搭建一个SSM项目"></a>快速搭建一个SSM项目</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><blockquote><p>在Intelli IDEA的菜单栏中选择【File】→【New】→【project】<br>在弹出的窗口中选择【Maven】,之后操作如下图：<br><a id="more"></a><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://farm8.staticflickr.com/7807/32512581747_578f257564_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p></blockquote><blockquote><p>填写下图中的【groupId】和【ArtifactId】。<br><img src="https://farm8.staticflickr.com/7856/32512581897_c16083484b_b.jpg" alt></p></blockquote><blockquote><p>接着<br><img src="https://farm8.staticflickr.com/7888/32512581777_4a3c2aeab3_b.jpg" alt><br>指定archetypeCatalog为internal,即可使用maven默认的archetyppe-catalog.xml，而不用从remote下载。     </p></blockquote><blockquote><p>然后填写项目名称和路径。<br><img src="https://farm8.staticflickr.com/7818/32512581837_25765edb35_b.jpg" alt></p></blockquote><blockquote><p>接着在/src/main目录下创建java和test目录，并标记为Sources文件，再创建resources目录，并标记为Resources文件。方法如下图所示：<br><img src="https://farm8.staticflickr.com/7916/47401454512_885932ab53_b.jpg" alt></p></blockquote><blockquote><p>整个目录结构如下图：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://farm8.staticflickr.com/7894/46748050994_0669e79bfd.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p></blockquote><blockquote><p>tomcat配置：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://farm8.staticflickr.com/7814/46539648975_e5f4335227.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p></blockquote><blockquote><p>配置文件基本相同，可参考如下链接：    </p></blockquote><p><a href="https://github.com/yanxin152133/SSM-demo" target="_blank" rel="noopener">Intelli IDEA整合SSM</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/MaNongXf/article/details/83418353" target="_blank" rel="noopener">使用Idea创建一个JavaWeb的SSM(maven)项目~（史上最详细,傻瓜式教学，跟着我的做，不会你找我）</a><br><a href="https://blog.csdn.net/MaNongXf/article/details/83503091" target="_blank" rel="noopener">解决Idea创建JavaWeb项目生成的web.xml没有头文件的问题(超级详细)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;快速搭建一个SSM项目&quot;&gt;&lt;a href=&quot;#快速搭建一个SSM项目&quot; class=&quot;headerlink&quot; title=&quot;快速搭建一个SSM项目&quot;&gt;&lt;/a&gt;快速搭建一个SSM项目&lt;/h1&gt;&lt;h2 id=&quot;创建项目&quot;&gt;&lt;a href=&quot;#创建项目&quot; class=&quot;headerlink&quot; title=&quot;创建项目&quot;&gt;&lt;/a&gt;创建项目&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在Intelli IDEA的菜单栏中选择【File】→【New】→【project】&lt;br&gt;在弹出的窗口中选择【Maven】,之后操作如下图：&lt;br&gt;
    
    </summary>
    
      <category term="SSM" scheme="http://yoursite.com/categories/SSM/"/>
    
      <category term="快速搭建一个SSM项目" scheme="http://yoursite.com/categories/SSM/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AASSM%E9%A1%B9%E7%9B%AE/"/>
    
    
      <category term="快速搭建一个SSM项目" scheme="http://yoursite.com/tags/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AASSM%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>在活动中使用Toast</title>
    <link href="http://yoursite.com/2019/05/26/%E5%9C%A8%E6%B4%BB%E5%8A%A8%E4%B8%AD%E4%BD%BF%E7%94%A8Toast/"/>
    <id>http://yoursite.com/2019/05/26/在活动中使用Toast/</id>
    <published>2019-05-26T03:54:10.270Z</published>
    <updated>2019-04-17T10:13:01.490Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在活动中使用Toast"><a href="#在活动中使用Toast" class="headerlink" title="在活动中使用Toast"></a>在活动中使用Toast</h1><p>Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息通知给用户，这些消息会在一段时间后自动消失，并且不会占用任何屏幕空间。<br><a id="more"></a></p><h2 id="创建布局"><a href="#创建布局" class="headerlink" title="创建布局"></a>创建布局</h2><p>activity_main.xml：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;android.support.constraint.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    tools:context=&quot;.MainActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=&quot;@+id/button&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:text=&quot;Button&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android.support.constraint.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure></p><h2 id="为Button添加事件"><a href="#为Button添加事件" class="headerlink" title="为Button添加事件"></a>为Button添加事件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Button button=findViewById(R.id.button);</span><br><span class="line">        button.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                Toast.makeText(MainActivity.this,&quot;你点击了Button&quot;,Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在活动中使用Toast&quot;&gt;&lt;a href=&quot;#在活动中使用Toast&quot; class=&quot;headerlink&quot; title=&quot;在活动中使用Toast&quot;&gt;&lt;/a&gt;在活动中使用Toast&lt;/h1&gt;&lt;p&gt;Toast是Android系统提供的一种非常好的提醒方式，在程序中可以使用它将一些短小的信息通知给用户，这些消息会在一段时间后自动消失，并且不会占用任何屏幕空间。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="在活动中使用Toast" scheme="http://yoursite.com/categories/Android/%E5%9C%A8%E6%B4%BB%E5%8A%A8%E4%B8%AD%E4%BD%BF%E7%94%A8Toast/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="在活动中使用Toast" scheme="http://yoursite.com/tags/%E5%9C%A8%E6%B4%BB%E5%8A%A8%E4%B8%AD%E4%BD%BF%E7%94%A8Toast/"/>
    
  </entry>
  
  <entry>
    <title>在活动中使用Menu</title>
    <link href="http://yoursite.com/2019/05/26/%E5%9C%A8%E6%B4%BB%E5%8A%A8%E4%B8%AD%E4%BD%BF%E7%94%A8Menu/"/>
    <id>http://yoursite.com/2019/05/26/在活动中使用Menu/</id>
    <published>2019-05-26T03:54:10.257Z</published>
    <updated>2019-04-17T13:49:13.802Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在活动中使用Menu"><a href="#在活动中使用Menu" class="headerlink" title="在活动中使用Menu"></a>在活动中使用Menu</h1><p>首先在res目录中下新建一个menu文件夹，右击res目录–&gt;New–&gt;Directory,输入文件夹名menu，点击OK。接着在这个文件夹下新建一个名叫main的菜单文件，右击menu文件夹–&gt;New–&gt;Menu resource file。文件名为main,点击OK完成创建。然后在main.xml中添加如下代码：<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=&quot;@+id/add_item&quot;</span><br><span class="line">        android:title=&quot;Add&quot;/&gt;</span><br><span class="line">    &lt;item</span><br><span class="line">        android:id=&quot;@+id/remove_item&quot;</span><br><span class="line">        android:title=&quot;Remove&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure></p><p>其中创建了两个菜单项，其中&lt; item &gt;标签就是用来创建具体某一个菜单项，然后通过android:id给这个菜单项指定一个唯一的标识符，通过android:title给这个菜单项指定一个名称。      </p><p>接着在MainActivity中重写onCreateOptionMeu()方法（Windows快捷键为Ctrl+O），然后修改其代码，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">    public boolean onCreateOptionsMenu(Menu menu) &#123;</span><br><span class="line">        getMenuInflater().inflate(R.menu.main, menu);</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>然后在MainActivity中重写onOptionsItemSeleted()方法，方法同上，同时修改其代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">    public boolean onOptionsItemSelected(MenuItem item) &#123;</span><br><span class="line">        switch (item.getItemId()) &#123;</span><br><span class="line">            case R.id.add_item:</span><br><span class="line">                Toast.makeText(this, &quot;You clicked add&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">                break;</span><br><span class="line">            case R.id.remove_item:</span><br><span class="line">                Toast.makeText(this, &quot;You clicked remove&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">        &#125;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>最后运行程序。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;在活动中使用Menu&quot;&gt;&lt;a href=&quot;#在活动中使用Menu&quot; class=&quot;headerlink&quot; title=&quot;在活动中使用Menu&quot;&gt;&lt;/a&gt;在活动中使用Menu&lt;/h1&gt;&lt;p&gt;首先在res目录中下新建一个menu文件夹，右击res目录–&amp;gt;New–&amp;gt;Directory,输入文件夹名menu，点击OK。接着在这个文件夹下新建一个名叫main的菜单文件，右击menu文件夹–&amp;gt;New–&amp;gt;Menu resource file。文件名为main,点击OK完成创建。然后在main.xml中添加如下代码：&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="在活动中使用Menu" scheme="http://yoursite.com/categories/Android/%E5%9C%A8%E6%B4%BB%E5%8A%A8%E4%B8%AD%E4%BD%BF%E7%94%A8Menu/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="在活动中使用Menu" scheme="http://yoursite.com/tags/%E5%9C%A8%E6%B4%BB%E5%8A%A8%E4%B8%AD%E4%BD%BF%E7%94%A8Menu/"/>
    
  </entry>
  
  <entry>
    <title>创建自定义控件</title>
    <link href="http://yoursite.com/2019/05/26/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/05/26/创建自定义控件/</id>
    <published>2019-05-26T03:54:10.229Z</published>
    <updated>2019-04-19T09:57:47.019Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建自定义控件"><a href="#创建自定义控件" class="headerlink" title="创建自定义控件"></a>创建自定义控件</h1><p>创建一个标题栏。<br><a id="more"></a></p><h2 id="新建一个title-xml布局"><a href="#新建一个title-xml布局" class="headerlink" title="新建一个title.xml布局"></a>新建一个title.xml布局</h2><p>title.xml    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/title_back&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;center&quot;</span><br><span class="line">        android:layout_margin=&quot;5dp&quot;</span><br><span class="line">        android:text=&quot;back&quot;</span><br><span class="line">        android:textColor=&quot;#000&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/title_text&quot;</span><br><span class="line">        android:layout_width=&quot;0dp&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_weight=&quot;1&quot;</span><br><span class="line">        android:gravity=&quot;center&quot;</span><br><span class="line">        android:text=&quot;Title Text&quot;</span><br><span class="line">        android:textColor=&quot;#000&quot;</span><br><span class="line">        android:textSize=&quot;24sp&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=&quot;@+id/title_edit&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;center&quot;</span><br><span class="line">        android:layout_margin=&quot;5dp&quot;</span><br><span class="line">        android:text=&quot;Edit&quot;</span><br><span class="line">        android:textColor=&quot;#000&quot; /&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>activity_main.xml      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;android.support.constraint.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;</span><br><span class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    tools:context=&quot;.MainActivity&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;include layout=&quot;@layout/title&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/android.support.constraint.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><h2 id="隐藏系统自带的标题栏"><a href="#隐藏系统自带的标题栏" class="headerlink" title="隐藏系统自带的标题栏"></a>隐藏系统自带的标题栏</h2><p>MainActivity         </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        ActionBar actionBar = getSupportActionBar();</span><br><span class="line">        if (actionBar != null) &#123;</span><br><span class="line">            actionBar.hide();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;创建自定义控件&quot;&gt;&lt;a href=&quot;#创建自定义控件&quot; class=&quot;headerlink&quot; title=&quot;创建自定义控件&quot;&gt;&lt;/a&gt;创建自定义控件&lt;/h1&gt;&lt;p&gt;创建一个标题栏。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="创建自定义控件" scheme="http://yoursite.com/categories/Android/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="创建自定义控件" scheme="http://yoursite.com/tags/%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>分析项目结构（以HelloWorld项目为例）</title>
    <link href="http://yoursite.com/2019/05/26/%E5%88%86%E6%9E%90%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2019/05/26/分析项目结构/</id>
    <published>2019-05-26T03:54:10.218Z</published>
    <updated>2019-04-12T02:56:53.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分析你的第一个Android程序"><a href="#分析你的第一个Android程序" class="headerlink" title="分析你的第一个Android程序"></a>分析你的第一个Android程序</h1><p>以HelloWorld项目为例，其项目结构如下图：(首先先将项目结构模式切换成Project，这才是项目真实的目录结构)<br><a id="more"></a><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/7832/46663457905_76924fb018.jpg" alt="项目结构" title>                </div>                <div class="image-caption">项目结构</div>            </figure></p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>1..gradle和.idea<br>这两个目录下是Android Studio自动生成的文件，不需要手动编辑，也无需关心。</p><p>2.app<br>项目中的代码、资源等内容几乎都放置在这个目录下。</p><p>3.gradle<br>这个目录包含了gradle wrapper 的配置文件，使用gradle wrapper 的方式不需要提前将gradle 下载好，而是自动根据本地的缓存情况决定是否需要联网下载gradle 。Android Studio默认没有启用gradle wrapper 的方式，如需打开，可以点击File–&gt;Settings–&gt;Bulid,Execution,Deployment–&gt;Gradle,进行配置更改。</p><p>4..gitignore<br>这个文件是用来将指定的目录或文件排除在版本控制之外的。</p><p>5.build.gradle<br>这个是项目全局的gradle构建脚本，通常这个文件中的内容是不需要修改的。</p><p>6.gradle.properties<br>这个是全局的gradle配置文件，在这里配置的属性将会影响到项目中所有的gradle编译脚本。</p><p>7.gradlew和gradlew.bat<br>这两个文件是用来在命令行界面中执行gradle命令的，其中gradlew是在Linux或Mac系统中使用的，gradlew.bat是在Windows系统中使用的。</p><p>8.HelloWorld.imi<br>iml文件是所有IntelliJ IDEA项目都会生成的一个文件，用于标识这是一个IntelliJ IDEA项目，不需要修改该文件。</p><p>9.local.properties<br>这个文件用于指定本机中的Android SDK路径，通常是自动生成的，不需要修改。若Android SDK发生变化则进行修改。</p><p>10.settings.gradle<br>这个文件用于指定项目中所有引入的模块。通常情况下模块的引入是自动完成的。</p><h2 id="app目录"><a href="#app目录" class="headerlink" title="app目录"></a>app目录</h2><p>该目录是工作中的重点，其结构如下：     </p><p><img src="https://live.staticflickr.com/7802/46663471325_d9cbb7855a.jpg" alt="app目录"></p><p>1.bulid<br>同上，主要是包含了一些在编译时自动生成的文件。</p><p>2.libs<br>如果项目中用到了第三方的jar包，需要将这些jar包都放在这个目录下，然后才会自动添加到构建路径中。</p><p>3.androidTest<br>编写Android Test测试用例，对项目进行一些自动化测试。</p><p>4.java<br>放置所有的Java代码。</p><p>5.res<br>项目中用到的所有图片、布局、字符串等资源都要存放到该目录下。图片放在drawable目录下，布局放在layout目录下，字符串放在values目录下。</p><p>6.AndroidManifest.xml<br>这个是整个Android项目的配置文件，在程序中定义的所有四大组件都需要在这个文件里注册，，另外还可以在这个文件中给应用程序添加权限声明。</p><p>7.test<br>用来编写Unit Test测试用例,是对项目进行自动化测试的另一种方式。</p><p>8..gitignore<br>这个文件用于将app模块内的指定的目录或文件排除在版本控制之外，作用和上面的类似。</p><p>9.app.iml<br>自动生成的文件。</p><p>10.build.gradle<br>这是app模块的gradle构建脚本，这个文件中会指定很多项目构建相关的配置。</p><p>11.proguard-rules .pro<br>这个文件用于指定项目代码的混淆规则。     </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;分析你的第一个Android程序&quot;&gt;&lt;a href=&quot;#分析你的第一个Android程序&quot; class=&quot;headerlink&quot; title=&quot;分析你的第一个Android程序&quot;&gt;&lt;/a&gt;分析你的第一个Android程序&lt;/h1&gt;&lt;p&gt;以HelloWorld项目为例，其项目结构如下图：(首先先将项目结构模式切换成Project，这才是项目真实的目录结构)&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="分析项目结构" scheme="http://yoursite.com/categories/Android/%E5%88%86%E6%9E%90%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="分析项目结构" scheme="http://yoursite.com/tags/%E5%88%86%E6%9E%90%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu配置ssh</title>
    <link href="http://yoursite.com/2019/05/26/Ubuntu%E9%85%8D%E7%BD%AEssh/"/>
    <id>http://yoursite.com/2019/05/26/Ubuntu配置ssh/</id>
    <published>2019-05-26T03:54:10.206Z</published>
    <updated>2019-01-29T14:36:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装-ssh-server"><a href="#安装-ssh-server" class="headerlink" title="安装 ssh-server"></a>安装 ssh-server</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openssh-server -y</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="安装-ssh-client"><a href="#安装-ssh-client" class="headerlink" title="安装 ssh-client"></a>安装 ssh-client</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openssh-client -y</span><br></pre></td></tr></table></figure><h1 id="确认安装-ssh-是否成功"><a href="#确认安装-ssh-是否成功" class="headerlink" title="确认安装 ssh 是否成功"></a>确认安装 ssh 是否成功</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e|grep sshd</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/6597489-90fcbb09b08aa70c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/641/format/webp" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="生成密钥对并配置免密登录"><a href="#生成密钥对并配置免密登录" class="headerlink" title="生成密钥对并配置免密登录"></a>生成密钥对并配置免密登录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br><span class="line">cd .ssh</span><br><span class="line">cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line">chmod 600 authorized_keys #修改公钥只有属主有读写权限</span><br><span class="line">chmod 700 ~/.ssh #修改.ssh目录为只有属主有读、写、执行权限</span><br></pre></td></tr></table></figure><h1 id="关闭密码登录"><a href="#关闭密码登录" class="headerlink" title="关闭密码登录"></a>关闭密码登录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/ssh</span><br><span class="line">vim sshd_config</span><br></pre></td></tr></table></figure><p>将PasswordAuthentication改为no，ChallengeResponseAuthentication改为no</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装-ssh-server&quot;&gt;&lt;a href=&quot;#安装-ssh-server&quot; class=&quot;headerlink&quot; title=&quot;安装 ssh-server&quot;&gt;&lt;/a&gt;安装 ssh-server&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo apt install openssh-server -y&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Ubuntu" scheme="http://yoursite.com/categories/Ubuntu/"/>
    
      <category term="ssh" scheme="http://yoursite.com/categories/Ubuntu/ssh/"/>
    
    
      <category term="Ubuntu" scheme="http://yoursite.com/tags/Ubuntu/"/>
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu18.04 安装 Docker</title>
    <link href="http://yoursite.com/2019/05/26/Ubuntu18.04%20%E5%AE%89%E8%A3%85%20Docker/"/>
    <id>http://yoursite.com/2019/05/26/Ubuntu18.04 安装 Docker/</id>
    <published>2019-05-26T03:54:10.201Z</published>
    <updated>2018-12-17T14:02:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h1 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h1><p>Docker CE 支持一下版本的 Ubuntu 操作系统：</p><ul><li>Artful 17.10(Docker CE 17.11 Edge)</li><li>Zesty 17.04</li><li>Xenial 16.04(LTS)</li><li>Trusty 14.04(LTS)</li></ul><p>推荐使用 LTS 版本的，在Ubuntu发行版中，LTS是长期支持版本，会更稳定。<br><a id="more"></a></p><h1 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h1><p>旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker \</span><br><span class="line">               docker-engine \</span><br><span class="line">               docker.io</span><br></pre></td></tr></table></figure><h1 id="安装与验证"><a href="#安装与验证" class="headerlink" title="安装与验证"></a>安装与验证</h1><p>从 Ubuntu 14.04 开始，一部分内核模块移到了可选内核模块包 (linux-image-extra-*) ，以减少内核软件包的体积。正常安装的系统应该会包含可选内核模块包，而一些裁剪后的系统可能会将其精简掉。AUFS 内核驱动属于可选内核模块的一部分，作为推荐的 Docker 存储层驱动，一般建议安装可选内核模块包以使用 AUFS。    </p><p>如果系统没有安装可选内核模块的话，可以执行下面的命令来安装可选内核模块包：(操作均为普通用户下)     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    linux-image-extra-$(uname -r) \</span><br><span class="line">    linux-image-extra-virtual</span><br></pre></td></tr></table></figure><p>Ubuntu 16.04 + 上的 Docker CE 默认使用 overlay2 存储层驱动,无需手动配置。    </p><h2 id="使用APT安装"><a href="#使用APT安装" class="headerlink" title="使用APT安装"></a>使用APT安装</h2><p>由于 apt 源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书。      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure><p>鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。<br>为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(任选其一即可)</span><br><span class="line">curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">官方源</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>然后，我们需要向 source.list 中添加 Docker 软件源     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository \</span><br><span class="line">    &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \</span><br><span class="line">    $(lsb_release -cs) \</span><br><span class="line">    stable&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 官方源</span><br><span class="line"># $ sudo add-apt-repository \</span><br><span class="line">#    &quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span><br><span class="line">#    $(lsb_release -cs) \</span><br><span class="line">#    stable&quot;</span><br></pre></td></tr></table></figure><h2 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install docker-ce</span><br></pre></td></tr></table></figure><h2 id="建立-docker-用户组"><a href="#建立-docker-用户组" class="headerlink" title="建立 docker 用户组"></a>建立 docker 用户组</h2><p>建立docker组:   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure><p>将当前用户加入docker组：    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure><h2 id="更换国内Docker仓库"><a href="#更换国内Docker仓库" class="headerlink" title="更换国内Docker仓库"></a>更换国内Docker仓库</h2><p>创建文件：       </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>加入以下内容：     </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [</span><br><span class="line">    &quot;https://registry.docker-cn.com&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启系统。    </p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>输入以下命令：       </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p>若输出以下内容则为成功。          </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Unable to find image &apos;hello-world:latest&apos; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">ca4f61b1923c: Pull complete</span><br><span class="line">Digest: sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://cloud.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/engine/userguide/</span><br></pre></td></tr></table></figure><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.codingfanlt.xyz/2018/10/17/Ubuntu-%E4%B8%8B%E5%AE%89%E8%A3%85-Docker/#more" target="_blank" rel="noopener">Ubuntu 下安装 Docker</a><br><a href="https://yeasy.gitbooks.io/docker_practice/install/ubuntu.html" target="_blank" rel="noopener">Docker —— 从入门到实践</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h1&gt;&lt;h1 id=&quot;系统要求&quot;&gt;&lt;a href=&quot;#系统要求&quot; class=&quot;headerlink&quot; title=&quot;系统要求&quot;&gt;&lt;/a&gt;系统要求&lt;/h1&gt;&lt;p&gt;Docker CE 支持一下版本的 Ubuntu 操作系统：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Artful 17.10(Docker CE 17.11 Edge)&lt;/li&gt;
&lt;li&gt;Zesty 17.04&lt;/li&gt;
&lt;li&gt;Xenial 16.04(LTS)&lt;/li&gt;
&lt;li&gt;Trusty 14.04(LTS)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐使用 LTS 版本的，在Ubuntu发行版中，LTS是长期支持版本，会更稳定。&lt;br&gt;
    
    </summary>
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
      <category term="安装" scheme="http://yoursite.com/categories/Docker/%E5%AE%89%E8%A3%85/"/>
    
    
      <category term="Docker安装" scheme="http://yoursite.com/tags/Docker%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Spring MVC和MyBatis开发环境准备</title>
    <link href="http://yoursite.com/2019/05/26/Spring%20MVC%E5%92%8CMyBatis%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    <id>http://yoursite.com/2019/05/26/Spring MVC和MyBatis开发环境准备/</id>
    <published>2019-05-26T03:54:10.189Z</published>
    <updated>2019-05-26T10:51:54.221Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spring-MVC和MyBatis开发环境准备"><a href="#Spring-MVC和MyBatis开发环境准备" class="headerlink" title="Spring MVC和MyBatis开发环境准备"></a>Spring MVC和MyBatis开发环境准备</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li>jdk</li><li>Intellij IDEA</li><li>Tomcat</li><li>Maven</li><li>MySql<a id="more"></a></li></ol><h2 id="JDK-安装"><a href="#JDK-安装" class="headerlink" title="JDK 安装"></a>JDK 安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>JDK建议使用1.8及以上的版本。<br>官方下载路径：<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">jdk下载路地址</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>双击下载软件，一路单击下一步即可。     </p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p><strong>Windows</strong>：右击【我的电脑】→【属性】→【高级系统设置】→【环境变量】→【系统变量】→【新建】，接着如下图所示：<br><img src="https://farm8.staticflickr.com/7873/40480682053_903c92b01b_b.jpg" alt="java_home"></p><p>在【系统变量】的path中添加 <strong>%JAVA_HOME%\bin</strong>。</p><p>验证，如下图所示：<br><img src="https://farm8.staticflickr.com/7860/40480681993_9a639b1dc2_b.jpg" alt="java"></p><h2 id="Intellij-IDEA"><a href="#Intellij-IDEA" class="headerlink" title="Intellij IDEA"></a>Intellij IDEA</h2><p>下载路径：<a href="https://www.jetbrains.com/idea/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">indea U</a></p><h3 id="激活（针对学生的免费使用计划）"><a href="#激活（针对学生的免费使用计划）" class="headerlink" title="激活（针对学生的免费使用计划）"></a>激活（针对学生的免费使用计划）</h3><p>参考：<a href="https://blog.csdn.net/iemdm1110/article/details/53365881" target="_blank" rel="noopener">Intellij IDEA的下载和使用（针对学生的免费使用计划）</a></p><h2 id="Tomcat的安装与配置"><a href="#Tomcat的安装与配置" class="headerlink" title="Tomcat的安装与配置"></a>Tomcat的安装与配置</h2><h3 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h3><p>下载链接：<a href="https://www-us.apache.org/dist/tomcat/tomcat-8/v8.5.39/bin/apache-tomcat-8.5.39-windows-x64.zip" target="_blank" rel="noopener">Tomcat 8.0</a><br>其他版本可以查看该页面：<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">下载页面</a>     </p><p>下载完成后对文件进行解压，<strong>解压路径自行设置</strong>。</p><h3 id="Intellij-IDEA-配置-Tomcat"><a href="#Intellij-IDEA-配置-Tomcat" class="headerlink" title="Intellij IDEA 配置 Tomcat"></a>Intellij IDEA 配置 Tomcat</h3><p>步骤如下图：      </p><p><img src="https://farm8.staticflickr.com/7860/33570544738_4981576891_b.jpg" alt><br><img src="https://farm8.staticflickr.com/7818/33570544808_63d536cc3e_b.jpg" alt><br><img src="https://farm8.staticflickr.com/7896/40480762723_6bce0e2c84_b.jpg" alt><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://farm8.staticflickr.com/7917/33570544928_cabdb4f7d0_b.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure>      </p><h2 id="Maven-的安装和配置"><a href="#Maven-的安装和配置" class="headerlink" title="Maven 的安装和配置"></a>Maven 的安装和配置</h2><p>下载地址：<a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">Maven</a>       </p><p><img src="https://farm8.staticflickr.com/7921/46730276854_36b53e43c4_b.jpg" alt="Maven">      </p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><ol><li>在Maven的安装目录新建文件夹repository,用来作为本地仓库。</li><li>如下图：<br><img src="https://farm8.staticflickr.com/7899/47400537232_e6978ba63f_b.jpg" alt>       </li></ol><h2 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h2><p>参考：<a href="http://www.runoob.com/mysql/mysql-install.html" target="_blank" rel="noopener">MySQL 安装| 菜鸟教程</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Spring-MVC和MyBatis开发环境准备&quot;&gt;&lt;a href=&quot;#Spring-MVC和MyBatis开发环境准备&quot; class=&quot;headerlink&quot; title=&quot;Spring MVC和MyBatis开发环境准备&quot;&gt;&lt;/a&gt;Spring MVC和MyBatis开发环境准备&lt;/h1&gt;&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;jdk&lt;/li&gt;
&lt;li&gt;Intellij IDEA&lt;/li&gt;
&lt;li&gt;Tomcat&lt;/li&gt;
&lt;li&gt;Maven&lt;/li&gt;
&lt;li&gt;MySql
    
    </summary>
    
      <category term="SSM" scheme="http://yoursite.com/categories/SSM/"/>
    
      <category term="开发环境准备" scheme="http://yoursite.com/categories/SSM/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    
    
      <category term="Spring MVC和MyBatis开发环境准备" scheme="http://yoursite.com/tags/Spring-MVC%E5%92%8CMyBatis%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView</title>
    <link href="http://yoursite.com/2019/05/26/RecyclerView/"/>
    <id>http://yoursite.com/2019/05/26/RecyclerView/</id>
    <published>2019-05-26T03:54:10.178Z</published>
    <updated>2019-04-27T05:53:20.930Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RecyclerView"><a href="#RecyclerView" class="headerlink" title="RecyclerView"></a>RecyclerView</h1><p>RecyclerView可以说是一个增强版的ListView，不仅可以轻松实现和ListView同样的效果，还优化了ListView中存在的各种不足之处。<br><a id="more"></a></p><h2 id="添加相应的依赖库"><a href="#添加相应的依赖库" class="headerlink" title="添加相应的依赖库"></a>添加相应的依赖库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;])</span><br><span class="line">    implementation &apos;com.android.support:appcompat-v7:28.0.0&apos;</span><br><span class="line">    implementation &apos;com.android.support.constraint:constraint-layout:1.1.3&apos;</span><br><span class="line">    testImplementation &apos;junit:junit:4.12&apos;</span><br><span class="line">    androidTestImplementation &apos;com.android.support.test:runner:1.0.2&apos;</span><br><span class="line">    androidTestImplementation &apos;com.android.support.test.espresso:espresso-core:3.0.2&apos;</span><br><span class="line">    implementation &apos;com.android.support:recyclerview-v7:28.0.0&apos; #添加这一行</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加之后记得点击一下Sync Now来进行同步。</p><p><a href="https://www.jianshu.com/p/f34c179bc9d0" target="_blank" rel="noopener">android gradle依赖：implementation 和compile的区别</a></p><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>activity_main.xml    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;android.support.v7.widget.RecyclerView</span><br><span class="line">            android:id=&quot;@+id/recycler_view&quot;</span><br><span class="line">            android:layout_height=&quot;match_parent&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot; /&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>由于RecyclerView并不是内置在系统SDK当中，所以 需要把完整的包路径写出来。   </p><p>fruit_item.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:orientation=&quot;vertical&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_margin=&quot;5dp&quot; &gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=&quot;@+id/fruit_image&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;center_horizontal&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/fruit_name&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;left&quot;</span><br><span class="line">        android:layout_marginTop=&quot;10dp&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p><h2 id="FruitAdapter类"><a href="#FruitAdapter类" class="headerlink" title="FruitAdapter类"></a>FruitAdapter类</h2><p>为RecyclerView准备一个适配器，新建FruitAdapter类，让这个适配器继承自RecyclerView.Adapter，并将泛型指定为FruitAdapter.ViewHolder。其中，ViewHolder是我们在FruitAdapter中定义的一个内部类。代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">public class FruitAdapter extends RecyclerView.Adapter&lt;FruitAdapter.ViewHolder&gt;&#123;</span><br><span class="line"></span><br><span class="line">    private List&lt;Fruit&gt; mFruitList;</span><br><span class="line"></span><br><span class="line">    static class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class="line">        View fruitView;</span><br><span class="line">        ImageView fruitImage;</span><br><span class="line">        TextView fruitName;</span><br><span class="line"></span><br><span class="line">        public ViewHolder(View view) &#123;</span><br><span class="line">            super(view);</span><br><span class="line">            fruitView = view;</span><br><span class="line">            fruitImage = (ImageView) view.findViewById(R.id.fruit_image);</span><br><span class="line">            fruitName = (TextView) view.findViewById(R.id.fruit_name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public FruitAdapter(List&lt;Fruit&gt; fruitList) &#123;</span><br><span class="line">        mFruitList = fruitList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) &#123;</span><br><span class="line">        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.fruit_item, parent, false);</span><br><span class="line">        final ViewHolder holder = new ViewHolder(view);</span><br><span class="line">        holder.fruitView.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                int position = holder.getAdapterPosition();</span><br><span class="line">                Fruit fruit = mFruitList.get(position);</span><br><span class="line">                Toast.makeText(v.getContext(), &quot;you clicked view &quot; + fruit.getName(), Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        holder.fruitImage.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                int position = holder.getAdapterPosition();</span><br><span class="line">                Fruit fruit = mFruitList.get(position);</span><br><span class="line">                Toast.makeText(v.getContext(), &quot;you clicked image &quot; + fruit.getName(), Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        return holder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onBindViewHolder(ViewHolder holder, int position) &#123;</span><br><span class="line">        Fruit fruit = mFruitList.get(position);</span><br><span class="line">        holder.fruitImage.setImageResource(fruit.getImageId());</span><br><span class="line">        holder.fruitName.setText(fruit.getName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int getItemCount() &#123;</span><br><span class="line">        return mFruitList.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Fruit类"><a href="#Fruit类" class="headerlink" title="Fruit类"></a>Fruit类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public class Fruit &#123;</span><br><span class="line"></span><br><span class="line">    private String name;</span><br><span class="line"></span><br><span class="line">    private int imageId;</span><br><span class="line"></span><br><span class="line">    public Fruit(String name, int imageId) &#123;</span><br><span class="line">        this.name = name;</span><br><span class="line">        this.imageId = imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getName() &#123;</span><br><span class="line">        return name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getImageId() &#123;</span><br><span class="line">        return imageId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MainACtivity-java"><a href="#MainACtivity-java" class="headerlink" title="MainACtivity.java"></a>MainACtivity.java</h2><p>修改MainACtivity中的代码：      </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    private List&lt;Fruit&gt; fruitList = new ArrayList&lt;Fruit&gt;();</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        initFruits();</span><br><span class="line">        RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);</span><br><span class="line">        StaggeredGridLayoutManager layoutManager = new</span><br><span class="line">                StaggeredGridLayoutManager(3, StaggeredGridLayoutManager.VERTICAL);</span><br><span class="line">        recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">        FruitAdapter adapter = new FruitAdapter(fruitList);</span><br><span class="line">        recyclerView.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void initFruits() &#123;</span><br><span class="line">        for (int i = 0; i &lt; 2; i++) &#123;</span><br><span class="line">            Fruit apple = new Fruit(getRandomLengthName(&quot;Apple&quot;), R.drawable.apple_pic);</span><br><span class="line">            fruitList.add(apple);</span><br><span class="line">            Fruit banana = new Fruit(getRandomLengthName(&quot;Banana&quot;), R.drawable.banana_pic);</span><br><span class="line">            fruitList.add(banana);</span><br><span class="line">            Fruit orange = new Fruit(getRandomLengthName(&quot;Orange&quot;), R.drawable.orange_pic);</span><br><span class="line">            fruitList.add(orange);</span><br><span class="line">            Fruit watermelon = new Fruit(getRandomLengthName(&quot;Watermelon&quot;), R.drawable.watermelon_pic);</span><br><span class="line">            fruitList.add(watermelon);</span><br><span class="line">            Fruit pear = new Fruit(getRandomLengthName(&quot;Pear&quot;), R.drawable.pear_pic);</span><br><span class="line">            fruitList.add(pear);</span><br><span class="line">            Fruit grape = new Fruit(getRandomLengthName(&quot;Grape&quot;), R.drawable.grape_pic);</span><br><span class="line">            fruitList.add(grape);</span><br><span class="line">            Fruit pineapple = new Fruit(getRandomLengthName(&quot;Pineapple&quot;), R.drawable.pineapple_pic);</span><br><span class="line">            fruitList.add(pineapple);</span><br><span class="line">            Fruit strawberry = new Fruit(getRandomLengthName(&quot;Strawberry&quot;), R.drawable.strawberry_pic);</span><br><span class="line">            fruitList.add(strawberry);</span><br><span class="line">            Fruit cherry = new Fruit(getRandomLengthName(&quot;Cherry&quot;), R.drawable.cherry_pic);</span><br><span class="line">            fruitList.add(cherry);</span><br><span class="line">            Fruit mango = new Fruit(getRandomLengthName(&quot;Mango&quot;), R.drawable.mango_pic);</span><br><span class="line">            fruitList.add(mango);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String getRandomLengthName(String name) &#123;</span><br><span class="line">        Random random = new Random();</span><br><span class="line">        int length = random.nextInt(20) + 1;</span><br><span class="line">        StringBuilder builder = new StringBuilder();</span><br><span class="line">        for (int i = 0; i &lt; length; i++) &#123;</span><br><span class="line">            builder.append(name);</span><br><span class="line">        &#125;</span><br><span class="line">        return builder.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现横向滚动"><a href="#实现横向滚动" class="headerlink" title="实现横向滚动"></a>实现横向滚动</h2><p>修改fruit_item.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</span><br><span class="line">    android:orientation=&quot;vertical&quot;</span><br><span class="line">    android:layout_width=&quot;100dp&quot;</span><br><span class="line">    android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">    android:layout_margin=&quot;5dp&quot; &gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=&quot;@+id/fruit_image&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;center_horizontal&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=&quot;@+id/fruit_name&quot;</span><br><span class="line">        android:layout_width=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">        android:layout_gravity=&quot;center_horizontal&quot;</span><br><span class="line">        android:layout_marginTop=&quot;10dp&quot; /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>修改Mainactivity</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        initFruits();</span><br><span class="line">        RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);</span><br><span class="line">        StaggeredGridLayoutManager layoutManager = new</span><br><span class="line">                StaggeredGridLayoutManager(3, StaggeredGridLayoutManager.VERTICAL);</span><br><span class="line">        layoutManager.setOrientation(LinearLayoutManager.HORIZONTAL);</span><br><span class="line">        recyclerView.setLayoutManager(layoutManager);</span><br><span class="line">        FruitAdapter adapter = new FruitAdapter(fruitList);</span><br><span class="line">        recyclerView.setAdapter(adapter);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;RecyclerView&quot;&gt;&lt;a href=&quot;#RecyclerView&quot; class=&quot;headerlink&quot; title=&quot;RecyclerView&quot;&gt;&lt;/a&gt;RecyclerView&lt;/h1&gt;&lt;p&gt;RecyclerView可以说是一个增强版的ListView，不仅可以轻松实现和ListView同样的效果，还优化了ListView中存在的各种不足之处。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="RecyclerView" scheme="http://yoursite.com/categories/Android/RecyclerView/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="RecyclerView" scheme="http://yoursite.com/tags/RecyclerView/"/>
    
  </entry>
  
  <entry>
    <title>qtp破解</title>
    <link href="http://yoursite.com/2019/05/26/qtp/"/>
    <id>http://yoursite.com/2019/05/26/qtp/</id>
    <published>2019-05-26T03:54:10.169Z</published>
    <updated>2019-04-20T14:22:35.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="qtp安装与破解"><a href="#qtp安装与破解" class="headerlink" title="qtp安装与破解"></a>qtp安装与破解</h1><p>准备：</p><ul><li>QTP 10.0</li><li>破解文件<a id="more"></a><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2></li></ul><p>链接: <a href="https://pan.baidu.com/s/19TGLWjd_znKFM8RZkj1ITg" target="_blank" rel="noopener">https://pan.baidu.com/s/19TGLWjd_znKFM8RZkj1ITg</a> 提取码: 9wjv</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://live.staticflickr.com/65535/46735361215_83283715cc.jpg" alt="qtp" title>                </div>                <div class="image-caption">qtp</div>            </figure><p>选择 <strong>QTP10.iso</strong>,解压后点击文件目录中的 <strong>setup.exe</strong>,双击运行。<br>按照图片顺序进行操作。   </p><p><img src="https://live.staticflickr.com/65535/40684441953_317366f332.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441833_c75926247c.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441463_f2dd1a0d8a.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441383_e54b1aae08.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360805_7d747db5fc.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441273_cd0bda4b8a.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684441043_0636ac9c5f.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360575_702bbd5e7d.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684440933_6a15dbbafe.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360435_1b00578c95.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684440783_c657959660.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360325_ca3acbf638.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/46735360275_571ab8de4e.jpg" alt></p><p><img src="https://live.staticflickr.com/65535/40684440503_e69cee4487.jpg" alt></p><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p>1.在<strong>c:\program files\common files\mercury interactive</strong>目录下新建一个文件夹：<strong>License Manager</strong><br>注：<strong>64位操作系统</strong>在<strong>c:\program files(x86)\common files\mercury interactive</strong>以下步骤以此类推。</p><p>2.将下载的文件中的<strong>qtp破解</strong>解压，将<strong>mgn-mqt8.2.exe</strong>复制到qtp的安装路径的<strong>bin文件夹中</strong>，然后以管理员身份运行。</p><p>3.打开<strong>c:\program files\common files\mercury interactive\License Manager</strong>中的<strong>lservrc</strong>文件。</p><p>4.将<strong>lservrc</strong>文件中的内容（<strong>将”QuickTestPro”之前的所有字符复制进去，不包括”QuickTestPro”字符</strong>）粘贴到如下图中。</p><p><img src="https://live.staticflickr.com/65535/40684440503_e69cee4487.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;qtp安装与破解&quot;&gt;&lt;a href=&quot;#qtp安装与破解&quot; class=&quot;headerlink&quot; title=&quot;qtp安装与破解&quot;&gt;&lt;/a&gt;qtp安装与破解&lt;/h1&gt;&lt;p&gt;准备：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QTP 10.0&lt;/li&gt;
&lt;li&gt;破解文件
    
    </summary>
    
      <category term="软件测试" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="qtp" scheme="http://yoursite.com/categories/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/qtp/"/>
    
    
      <category term="软件测试" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
      <category term="qtp" scheme="http://yoursite.com/tags/qtp/"/>
    
  </entry>
  
  <entry>
    <title>ProgressBar</title>
    <link href="http://yoursite.com/2019/05/26/ProgressBar/"/>
    <id>http://yoursite.com/2019/05/26/ProgressBar/</id>
    <published>2019-05-26T03:54:10.158Z</published>
    <updated>2019-04-19T07:43:59.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ProgressBar"><a href="#ProgressBar" class="headerlink" title="ProgressBar"></a>ProgressBar</h1><p>ProgressBar用于在界面上显示一个进度条，表示程序正在加载一些数据。<br><a id="more"></a></p><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>activity_main.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">        android:orientation=&quot;vertical&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=&quot;@+id/button&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:text=&quot;button&quot;/&gt;</span><br><span class="line">        &lt;ProgressBar</span><br><span class="line">            android:id=&quot;@+id/progress_bar&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p><h2 id="实现点击一下按钮让进度条消失，再点击一下按钮让进度条出现的效果"><a href="#实现点击一下按钮让进度条消失，再点击一下按钮让进度条出现的效果" class="headerlink" title="实现点击一下按钮让进度条消失，再点击一下按钮让进度条出现的效果"></a>实现点击一下按钮让进度条消失，再点击一下按钮让进度条出现的效果</h2><p>MainActivity</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123;</span><br><span class="line">    private Button button;</span><br><span class="line">    private ProgressBar progressBar;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        button = findViewById(R.id.button);</span><br><span class="line">        progressBar = findViewById(R.id.progress_bar);</span><br><span class="line">        button.setOnClickListener(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onClick(View v) &#123;</span><br><span class="line">        switch (v.getId()) &#123;</span><br><span class="line">            case R.id.button:</span><br><span class="line">                if (progressBar.getVisibility() == View.GONE) &#123;</span><br><span class="line">                    progressBar.setVisibility(View.VISIBLE);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    progressBar.setVisibility(View.GONE);</span><br><span class="line">                &#125;</span><br><span class="line">            default:</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="给ProgressBar指定不同的样式"><a href="#给ProgressBar指定不同的样式" class="headerlink" title="给ProgressBar指定不同的样式"></a>给ProgressBar指定不同的样式</h2><p>activity_main.xml </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">        android:orientation=&quot;vertical&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=&quot;@+id/button&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:text=&quot;button&quot;/&gt;</span><br><span class="line">        &lt;ProgressBar</span><br><span class="line">            android:id=&quot;@+id/progress_bar&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            style=&quot;?android:attr/progressBarStyleHorizontal&quot;</span><br><span class="line">            android:max=&quot;100&quot;/&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><p>MainActivity</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123;</span><br><span class="line">    private Button button;</span><br><span class="line">    private ProgressBar progressBar;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        button = findViewById(R.id.button);</span><br><span class="line">        progressBar = findViewById(R.id.progress_bar);</span><br><span class="line">        button.setOnClickListener(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onClick(View v) &#123;</span><br><span class="line">        switch (v.getId()) &#123;</span><br><span class="line">            case R.id.button:</span><br><span class="line">                int progress=progressBar.getProgress();</span><br><span class="line">                progress=progress+10;</span><br><span class="line">                progressBar.setProgress(progress);</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ProgressBar&quot;&gt;&lt;a href=&quot;#ProgressBar&quot; class=&quot;headerlink&quot; title=&quot;ProgressBar&quot;&gt;&lt;/a&gt;ProgressBar&lt;/h1&gt;&lt;p&gt;ProgressBar用于在界面上显示一个进度条，表示程序正在加载一些数据。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="ProgressBar" scheme="http://yoursite.com/categories/Android/ProgressBar/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="ProgressBar" scheme="http://yoursite.com/tags/ProgressBar/"/>
    
  </entry>
  
  <entry>
    <title>ProgressDialog</title>
    <link href="http://yoursite.com/2019/05/26/ProgresDialog/"/>
    <id>http://yoursite.com/2019/05/26/ProgresDialog/</id>
    <published>2019-05-26T03:54:10.146Z</published>
    <updated>2019-04-19T09:00:33.935Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ProgressDialog"><a href="#ProgressDialog" class="headerlink" title="ProgressDialog"></a>ProgressDialog</h1><p>ProgressDialog和AlertDialog有点类似，不同的是ProgressDialog会在对话框中显示一个进度条，一般用于表示当前操作比较耗时，让用户耐心等待。<br><a id="more"></a></p><h2 id="添加一个Button按钮"><a href="#添加一个Button按钮" class="headerlink" title="添加一个Button按钮"></a>添加一个Button按钮</h2><p>activity_main.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout</span><br><span class="line">        android:orientation=&quot;vertical&quot;</span><br><span class="line">        android:layout_width=&quot;match_parent&quot;</span><br><span class="line">        android:layout_height=&quot;match_parent&quot;&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=&quot;@+id/button&quot;</span><br><span class="line">            android:layout_width=&quot;match_parent&quot;</span><br><span class="line">            android:layout_height=&quot;wrap_content&quot;</span><br><span class="line">            android:text=&quot;button&quot;/&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure><h2 id="为Button添加事件"><a href="#为Button添加事件" class="headerlink" title="为Button添加事件"></a>为Button添加事件</h2><p>MainActivity    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        Button button=findViewById(R.id.button);</span><br><span class="line">        button.setOnClickListener(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onClick(View v) &#123;</span><br><span class="line">        switch (v.getId())&#123;</span><br><span class="line">            case R.id.button:</span><br><span class="line">                ProgressDialog progressDialog=new ProgressDialog(MainActivity.this);</span><br><span class="line">                progressDialog.setTitle(&quot;This is a ProgressDialog&quot;);   //设置标题</span><br><span class="line">                progressDialog.setMessage(&quot;Loading...&quot;);  //设置内容</span><br><span class="line">                progressDialog.setCancelable(true);    //设置可否取消</span><br><span class="line">                progressDialog.show();    //显示</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ProgressDialog&quot;&gt;&lt;a href=&quot;#ProgressDialog&quot; class=&quot;headerlink&quot; title=&quot;ProgressDialog&quot;&gt;&lt;/a&gt;ProgressDialog&lt;/h1&gt;&lt;p&gt;ProgressDialog和AlertDialog有点类似，不同的是ProgressDialog会在对话框中显示一个进度条，一般用于表示当前操作比较耗时，让用户耐心等待。&lt;br&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="ProgressDialog" scheme="http://yoursite.com/categories/Android/ProgressDialog/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="ProgressDialog" scheme="http://yoursite.com/tags/ProgressDialog/"/>
    
  </entry>
  
</feed>
